{
    "pipes": [],
    "interfaces": [
        {
            "name": "BorderExample",
            "id": "interface-BorderExample-a9a25a333bc68dbf1d79d86cb59c076c55ec2f17f90a835bef0a20515e261aba91c51dce81532942d7e172a4d22f5962b0f03ca32e26eef512a7187290fa22cc",
            "file": "src/app/components/borders-demo/borders-demo.component.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { CommonModule } from '@angular/common';\nimport { Component } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\n\ninterface BorderExample {\n  className: string;\n  text: string;\n}\n\ninterface ClassCategory {\n  name: string;\n  classes: string[];\n}\n\n@Component({\n  selector: 'app-borders-demo',\n  standalone: true,\n  imports: [FormsModule, CommonModule],\n  templateUrl: './borders-demo.component.html',\n  styleUrl: './borders-demo.component.scss'\n})\nexport class BordersDemoComponent {\n  manualClass = '';\n  customText = '';\n  examples: BorderExample[] = [];\n  defaultText = 'Border Example';\n  selectedCategory = '';\n  selectedClass = '';\n  \n  classCategories: ClassCategory[] = [\n    {\n      name: 'Border Width (Global)',\n      classes: [\n        'global-bw-none',\n        'global-bw-thinner',\n        'global-bw-thin',\n        'global-bw-thick',\n        'global-bw-thicker'\n      ]\n    },\n    {\n      name: 'Border Width (Top)',\n      classes: [\n        'global-bw-t-none',\n        'global-bw-t-thinner',\n        'global-bw-t-thin',\n        'global-bw-t-thick',\n        'global-bw-t-thicker'\n      ]\n    },\n    {\n      name: 'Border Width (Right)',\n      classes: [\n        'global-bw-r-none',\n        'global-bw-r-thinner',\n        'global-bw-r-thin',\n        'global-bw-r-thick',\n        'global-bw-r-thicker'\n      ]\n    },\n    {\n      name: 'Border Width (Bottom)',\n      classes: [\n        'global-bw-b-none',\n        'global-bw-b-thinner',\n        'global-bw-b-thin',\n        'global-bw-b-thick',\n        'global-bw-b-thicker'\n      ]\n    },\n    {\n      name: 'Border Width (Left)',\n      classes: [\n        'global-bw-l-none',\n        'global-bw-l-thinner',\n        'global-bw-l-thin',\n        'global-bw-l-thick',\n        'global-bw-l-thicker'\n      ]\n    },\n    {\n      name: 'Border Style',\n      classes: [\n        'global-bs-solid',\n        'global-bs-dashed',\n        'global-bs-dotted',\n        'global-bs-double',\n        'global-bs-none'\n      ]\n    },\n    {\n      name: 'Border Radius (Global)',\n      classes: [\n        'global-br-none',\n        'global-br-xsmall',\n        'global-br-small',\n        'global-br-medium',\n        'global-br-large',\n        'global-br-xlarge',\n        'global-br-2xlarge',\n        'global-br-max'\n      ]\n    },\n    {\n      name: 'Border Radius (Top Left)',\n      classes: [\n        'global-br-tl-none',\n        'global-br-tl-xsmall',\n        'global-br-tl-small',\n        'global-br-tl-medium',\n        'global-br-tl-large',\n        'global-br-tl-xlarge',\n        'global-br-tl-2xlarge',\n        'global-br-tl-max'\n      ]\n    },\n    {\n      name: 'Border Radius (Top Right)',\n      classes: [\n        'global-br-tr-none',\n        'global-br-tr-xsmall',\n        'global-br-tr-small',\n        'global-br-tr-medium',\n        'global-br-tr-large',\n        'global-br-tr-xlarge',\n        'global-br-tr-2xlarge',\n        'global-br-tr-max'\n      ]\n    },\n    {\n      name: 'Border Radius (Bottom Left)',\n      classes: [\n        'global-br-bl-none',\n        'global-br-bl-xsmall',\n        'global-br-bl-small',\n        'global-br-bl-medium',\n        'global-br-bl-large',\n        'global-br-bl-xlarge',\n        'global-br-bl-2xlarge',\n        'global-br-bl-max'\n      ]\n    },\n    {\n      name: 'Border Radius (Bottom Right)',\n      classes: [\n        'global-br-br-none',\n        'global-br-br-xsmall',\n        'global-br-br-small',\n        'global-br-br-medium',\n        'global-br-br-large',\n        'global-br-br-xlarge',\n        'global-br-br-2xlarge',\n        'global-br-br-max'\n      ]\n    },\n    {\n      name: 'Border Radius (Top)',\n      classes: [\n        'global-br-t-none',\n        'global-br-t-xsmall',\n        'global-br-t-small',\n        'global-br-t-medium',\n        'global-br-t-large',\n        'global-br-t-xlarge',\n        'global-br-t-2xlarge',\n        'global-br-t-max'\n      ]\n    },\n    {\n      name: 'Border Radius (Bottom)',\n      classes: [\n        'global-br-b-none',\n        'global-br-b-xsmall',\n        'global-br-b-small',\n        'global-br-b-medium',\n        'global-br-b-large',\n        'global-br-b-xlarge',\n        'global-br-b-2xlarge',\n        'global-br-b-max'\n      ]\n    },\n    {\n      name: 'Border Radius (Left)',\n      classes: [\n        'global-br-l-none',\n        'global-br-l-xsmall',\n        'global-br-l-small',\n        'global-br-l-medium',\n        'global-br-l-large',\n        'global-br-l-xlarge',\n        'global-br-l-2xlarge',\n        'global-br-l-max'\n      ]\n    },\n    {\n      name: 'Border Radius (Right)',\n      classes: [\n        'global-br-r-none',\n        'global-br-r-xsmall',\n        'global-br-r-small',\n        'global-br-r-medium',\n        'global-br-r-large',\n        'global-br-r-xlarge',\n        'global-br-r-2xlarge',\n        'global-br-r-max'\n      ]\n    }\n  ];\n\n  getSelectedCategoryClasses(): string[] {\n    const category = this.classCategories.find(c => c.name === this.selectedCategory);\n    return category ? category.classes : [];\n  }\n\n  onCategoryChange() {\n    this.selectedClass = '';\n  }\n\n  onClassSelect() {\n    if (this.selectedClass) {\n      this.examples.unshift({\n        className: this.selectedClass,\n        text: this.customText || this.defaultText\n      });\n      this.selectedClass = '';\n      this.customText = '';\n    }\n  }\n\n  addClass() {\n    if (this.manualClass) {\n      this.examples.unshift({\n        className: this.manualClass,\n        text: this.customText || this.defaultText\n      });\n      this.manualClass = '';\n      this.customText = '';\n    }\n  }\n\n  removeExample(index: number) {\n    this.examples.splice(index, 1);\n  }\n}\n",
            "properties": [
                {
                    "name": "className",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "text",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 7
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "ClassCategory",
            "id": "interface-ClassCategory-a9a25a333bc68dbf1d79d86cb59c076c55ec2f17f90a835bef0a20515e261aba91c51dce81532942d7e172a4d22f5962b0f03ca32e26eef512a7187290fa22cc",
            "file": "src/app/components/borders-demo/borders-demo.component.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { CommonModule } from '@angular/common';\nimport { Component } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\n\ninterface BorderExample {\n  className: string;\n  text: string;\n}\n\ninterface ClassCategory {\n  name: string;\n  classes: string[];\n}\n\n@Component({\n  selector: 'app-borders-demo',\n  standalone: true,\n  imports: [FormsModule, CommonModule],\n  templateUrl: './borders-demo.component.html',\n  styleUrl: './borders-demo.component.scss'\n})\nexport class BordersDemoComponent {\n  manualClass = '';\n  customText = '';\n  examples: BorderExample[] = [];\n  defaultText = 'Border Example';\n  selectedCategory = '';\n  selectedClass = '';\n  \n  classCategories: ClassCategory[] = [\n    {\n      name: 'Border Width (Global)',\n      classes: [\n        'global-bw-none',\n        'global-bw-thinner',\n        'global-bw-thin',\n        'global-bw-thick',\n        'global-bw-thicker'\n      ]\n    },\n    {\n      name: 'Border Width (Top)',\n      classes: [\n        'global-bw-t-none',\n        'global-bw-t-thinner',\n        'global-bw-t-thin',\n        'global-bw-t-thick',\n        'global-bw-t-thicker'\n      ]\n    },\n    {\n      name: 'Border Width (Right)',\n      classes: [\n        'global-bw-r-none',\n        'global-bw-r-thinner',\n        'global-bw-r-thin',\n        'global-bw-r-thick',\n        'global-bw-r-thicker'\n      ]\n    },\n    {\n      name: 'Border Width (Bottom)',\n      classes: [\n        'global-bw-b-none',\n        'global-bw-b-thinner',\n        'global-bw-b-thin',\n        'global-bw-b-thick',\n        'global-bw-b-thicker'\n      ]\n    },\n    {\n      name: 'Border Width (Left)',\n      classes: [\n        'global-bw-l-none',\n        'global-bw-l-thinner',\n        'global-bw-l-thin',\n        'global-bw-l-thick',\n        'global-bw-l-thicker'\n      ]\n    },\n    {\n      name: 'Border Style',\n      classes: [\n        'global-bs-solid',\n        'global-bs-dashed',\n        'global-bs-dotted',\n        'global-bs-double',\n        'global-bs-none'\n      ]\n    },\n    {\n      name: 'Border Radius (Global)',\n      classes: [\n        'global-br-none',\n        'global-br-xsmall',\n        'global-br-small',\n        'global-br-medium',\n        'global-br-large',\n        'global-br-xlarge',\n        'global-br-2xlarge',\n        'global-br-max'\n      ]\n    },\n    {\n      name: 'Border Radius (Top Left)',\n      classes: [\n        'global-br-tl-none',\n        'global-br-tl-xsmall',\n        'global-br-tl-small',\n        'global-br-tl-medium',\n        'global-br-tl-large',\n        'global-br-tl-xlarge',\n        'global-br-tl-2xlarge',\n        'global-br-tl-max'\n      ]\n    },\n    {\n      name: 'Border Radius (Top Right)',\n      classes: [\n        'global-br-tr-none',\n        'global-br-tr-xsmall',\n        'global-br-tr-small',\n        'global-br-tr-medium',\n        'global-br-tr-large',\n        'global-br-tr-xlarge',\n        'global-br-tr-2xlarge',\n        'global-br-tr-max'\n      ]\n    },\n    {\n      name: 'Border Radius (Bottom Left)',\n      classes: [\n        'global-br-bl-none',\n        'global-br-bl-xsmall',\n        'global-br-bl-small',\n        'global-br-bl-medium',\n        'global-br-bl-large',\n        'global-br-bl-xlarge',\n        'global-br-bl-2xlarge',\n        'global-br-bl-max'\n      ]\n    },\n    {\n      name: 'Border Radius (Bottom Right)',\n      classes: [\n        'global-br-br-none',\n        'global-br-br-xsmall',\n        'global-br-br-small',\n        'global-br-br-medium',\n        'global-br-br-large',\n        'global-br-br-xlarge',\n        'global-br-br-2xlarge',\n        'global-br-br-max'\n      ]\n    },\n    {\n      name: 'Border Radius (Top)',\n      classes: [\n        'global-br-t-none',\n        'global-br-t-xsmall',\n        'global-br-t-small',\n        'global-br-t-medium',\n        'global-br-t-large',\n        'global-br-t-xlarge',\n        'global-br-t-2xlarge',\n        'global-br-t-max'\n      ]\n    },\n    {\n      name: 'Border Radius (Bottom)',\n      classes: [\n        'global-br-b-none',\n        'global-br-b-xsmall',\n        'global-br-b-small',\n        'global-br-b-medium',\n        'global-br-b-large',\n        'global-br-b-xlarge',\n        'global-br-b-2xlarge',\n        'global-br-b-max'\n      ]\n    },\n    {\n      name: 'Border Radius (Left)',\n      classes: [\n        'global-br-l-none',\n        'global-br-l-xsmall',\n        'global-br-l-small',\n        'global-br-l-medium',\n        'global-br-l-large',\n        'global-br-l-xlarge',\n        'global-br-l-2xlarge',\n        'global-br-l-max'\n      ]\n    },\n    {\n      name: 'Border Radius (Right)',\n      classes: [\n        'global-br-r-none',\n        'global-br-r-xsmall',\n        'global-br-r-small',\n        'global-br-r-medium',\n        'global-br-r-large',\n        'global-br-r-xlarge',\n        'global-br-r-2xlarge',\n        'global-br-r-max'\n      ]\n    }\n  ];\n\n  getSelectedCategoryClasses(): string[] {\n    const category = this.classCategories.find(c => c.name === this.selectedCategory);\n    return category ? category.classes : [];\n  }\n\n  onCategoryChange() {\n    this.selectedClass = '';\n  }\n\n  onClassSelect() {\n    if (this.selectedClass) {\n      this.examples.unshift({\n        className: this.selectedClass,\n        text: this.customText || this.defaultText\n      });\n      this.selectedClass = '';\n      this.customText = '';\n    }\n  }\n\n  addClass() {\n    if (this.manualClass) {\n      this.examples.unshift({\n        className: this.manualClass,\n        text: this.customText || this.defaultText\n      });\n      this.manualClass = '';\n      this.customText = '';\n    }\n  }\n\n  removeExample(index: number) {\n    this.examples.splice(index, 1);\n  }\n}\n",
            "properties": [
                {
                    "name": "classes",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string[]",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 11
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "ClassCategory",
            "id": "interface-ClassCategory-80e975c59b8339cc609e30d703d83cf0787f87df351c65901e4848bb59ac4f18f56e0347f91b21174c75be534e32cfd3b03b367d776689c9af90051c4f699e4e-1",
            "file": "src/app/components/elevation-demo/elevation-demo.component.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { CommonModule } from '@angular/common';\nimport { Component } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\n\ninterface ElevationExample {\n  className: string;\n  text: string;\n}\n\ninterface ClassCategory {\n  name: string;\n  classes: string[];\n}\n\n@Component({\n  selector: 'app-elevation-demo',\n  standalone: true,\n  imports: [FormsModule, CommonModule],\n  templateUrl: './elevation-demo.component.html',\n  styleUrl: './elevation-demo.component.scss'\n})\nexport class ElevationDemoComponent {\n  manualClass = '';\n  customText = '';\n  examples: ElevationExample[] = [];\n  defaultText = 'Elevation Example';\n  selectedCategory = '';\n  selectedClass = '';\n  \n  classCategories: ClassCategory[] = [\n    {\n      name: 'Shadows (Global)',\n      classes: [\n        'global-el-ultraLowRaised',\n        'global-el-lowRaised',\n        'global-el-midRaised',\n        'global-el-highRaised',\n        'global-el-ultraHighRaised'\n      ]\n    },\n  ];\n\n  getSelectedCategoryClasses(): string[] {\n    const category = this.classCategories.find(c => c.name === this.selectedCategory);\n    return category ? category.classes : [];\n  }\n\n  onCategoryChange() {\n    this.selectedClass = '';\n  }\n\n  onClassSelect() {\n    if (this.selectedClass) {\n      this.examples.unshift({\n        className: this.selectedClass,\n        text: this.customText || this.defaultText\n      });\n      this.selectedClass = '';\n      this.customText = '';\n    }\n  }\n\n  addClass() {\n    if (this.manualClass) {\n      this.examples.unshift({\n        className: this.manualClass,\n        text: this.customText || this.defaultText\n      });\n      this.manualClass = '';\n      this.customText = '';\n    }\n  }\n\n  removeExample(index: number) {\n    this.examples.splice(index, 1);\n  }\n}\n",
            "properties": [
                {
                    "name": "classes",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string[]",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 11
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": [],
            "isDuplicate": true,
            "duplicateId": 1,
            "duplicateName": "ClassCategory-1"
        },
        {
            "name": "ClassCategory",
            "id": "interface-ClassCategory-1f7309991cee3d2a3086f0cdc514ed710a08fac528197d71142d088e88e1bdb95f645a7338908ddf6ec4f514855ff0f45f4ce9a1a4c5cd22c577ee4d37dcf75d-2",
            "file": "src/app/components/typography-demo/typography-demo.component.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { CommonModule } from '@angular/common';\nimport { Component } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\n\ninterface TypographyExample {\n  className: string;\n  text: string;\n}\n\ninterface ClassCategory {\n  name: string;\n  classes: string[];\n}\n\n@Component({\n  selector: 'app-typography-demo',\n  imports: [FormsModule, CommonModule],\n  templateUrl: './typography-demo.component.html',\n  styleUrl: './typography-demo.component.scss'\n})\nexport class TypographyDemoComponent {\n  manualClass = '';\n  customText = '';\n  examples: TypographyExample[] = [];\n  defaultText = 'Typography Example';\n  selectedCategory = '';\n  selectedClass = '';\n  \n  classCategories: ClassCategory[] = [\n    {\n      name: 'Font Size (Global)',\n      classes: [\n        'global-fz-10', 'global-fz-12', 'global-fz-14', 'global-fz-16', 'global-fz-18',\n        'global-fz-20', 'global-fz-24', 'global-fz-32', 'global-fz-34', 'global-fz-36',\n        'global-fz-38', 'global-fz-40', 'global-fz-48', 'global-fz-56', 'global-fz-64',\n        'global-fz-72'\n      ]\n    },\n    {\n      name: 'Font Size (Scale)',\n      classes: [\n        'font-size-25', 'font-size-50', 'font-size-100', 'font-size-200', 'font-size-300',\n        'font-size-400', 'font-size-500', 'font-size-600', 'font-size-700', 'font-size-800',\n        'font-size-900', 'font-size-1000', 'font-size-1100'\n      ]\n    },\n    {\n      name: 'Line Height (Global)',\n      classes: [\n        'global-lh-00', 'global-lh-14', 'global-lh-16', 'global-lh-18', 'global-lh-20',\n        'global-lh-22', 'global-lh-24', 'global-lh-26', 'global-lh-32', 'global-lh-38',\n        'global-lh-42', 'global-lh-46', 'global-lh-48', 'global-lh-56', 'global-lh-64',\n        'global-lh-70', 'global-lh-78'\n      ]\n    },\n    {\n      name: 'Line Height (Scale)',\n      classes: [\n        'line-height-00', 'line-height-25', 'line-height-50', 'line-height-75',\n        'line-height-100', 'line-height-200', 'line-height-300', 'line-height-400',\n        'line-height-500', 'line-height-600', 'line-height-700', 'line-height-800',\n        'line-height-900', 'line-height-1000', 'line-height-1100'\n      ]\n    },\n    {\n      name: 'Letter Spacing (Global)',\n      classes: [\n        'global-ls-compressed', 'global-ls-condensed', 'global-ls-normal',\n        'global-ls-expanded', 'global-ls-extended'\n      ]\n    },\n    {\n      name: 'Letter Spacing (Scale)',\n      classes: [\n        'letter-spacing-50', 'letter-spacing-100'\n      ]\n    },\n    {\n      name: 'Font Weight (Global)',\n      classes: [\n        'global-fw-100', 'global-fw-200', 'global-fw-300', 'global-fw-400',\n        'global-fw-500', 'global-fw-600', 'global-fw-700', 'global-fw-800',\n        'global-fw-900'\n      ]\n    },\n    {\n      name: 'Font Weight (Scale)',\n      classes: [\n        'font-weight-400',\n        'font-weight-500',\n        'font-weight-600',\n        'font-weight-700'\n      ]\n    },\n    {\n      name: 'Paragraph Spacing (Global)',\n      classes: [\n        'global-ps-00', 'global-ps-08', 'global-ps-10', 'global-ps-11', 'global-ps-12'\n      ]\n    },\n    {\n      name: 'Paragraph Spacing (Scale)',\n      classes: [\n        'paragraph-spacing-00', 'paragraph-spacing-100', 'paragraph-spacing-200',\n        'paragraph-spacing-300', 'paragraph-spacing-400'\n      ]\n    },\n    {\n      name: 'List Spacing (Global)',\n      classes: [\n        'global-lis-00', 'global-lis-04', 'global-lis-08', 'global-lis-12',\n        'global-lis-16', 'global-lis-20', 'global-lis-24'\n      ]\n    },\n    {\n      name: 'List Spacing (Scale)',\n      classes: [\n        'list-spacing-00', 'list-spacing-100'\n      ]\n    },\n    {\n      name: 'Type Scale (Display)',\n      classes: [\n        'DisplayXLargeRegular', 'DisplayXLargeMedium', 'DisplayXLargeSemibold',\n        'DisplayLargeRegular', 'DisplayLargeMedium', 'DisplayLargeSemibold',\n        'DisplayMediumRegular', 'DisplayMediumMedium', 'DisplayMediumSemibold',\n        'DisplaySmallRegular', 'DisplaySmallMedium', 'DisplaySmallSemibold'\n      ]\n    },\n    {\n      name: 'Type Scale (Heading)',\n      classes: [\n        'Heading2XLargeRegular', 'Heading2XLargeSemibold',\n        'HeadingXLargeRegular', 'HeadingXLargeSemibold',\n        'HeadingLargeRegular', 'HeadingLargeSemibold',\n        'HeadingMediumRegular', 'HeadingMediumSemibold',\n        'HeadingSmallRegular', 'HeadingSmallSemibold'\n      ]\n    },\n    {\n      name: 'Type Scale (Body)',\n      classes: [\n        'BodyLargeRegular', 'BodyLargeMedium', 'BodyLargeSemibold',\n        'BodyMediumRegular', 'BodyMediumMedium', 'BodyMediumSemibold',\n        'BodySmallRegular', 'BodySmallMedium', 'BodySmallSemibold',\n        'BodyXSmallRegular', 'BodyXSmallMedium', 'BodyXSmallSemibold'\n      ]\n    }\n  ];\n\n  getSelectedCategoryClasses(): string[] {\n    const category = this.classCategories.find(c => c.name === this.selectedCategory);\n    return category ? category.classes : [];\n  }\n\n  onCategoryChange() {\n    this.selectedClass = '';\n  }\n\n  onClassSelect() {\n    if (this.selectedClass) {\n      this.examples.unshift({\n        className: this.selectedClass,\n        text: this.customText || this.defaultText\n      });\n      this.selectedClass = '';\n      this.customText = '';\n    }\n  }\n\n  addClass() {\n    if (this.manualClass) {\n      this.examples.unshift({\n        className: this.manualClass,\n        text: this.customText || this.defaultText\n      });\n      this.manualClass = '';\n      this.customText = '';\n    }\n  }\n\n  removeExample(index: number) {\n    this.examples.splice(index, 1);\n  }\n}\n",
            "properties": [
                {
                    "name": "classes",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string[]",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 11
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": [],
            "isDuplicate": true,
            "duplicateId": 2,
            "duplicateName": "ClassCategory-2"
        },
        {
            "name": "ClassCategory",
            "id": "interface-ClassCategory-af25fdfbedfc09875af86f7efde5eeba669d2468907caf3f8fc7b82f87ee1194f4fb2f4c051d21f6c8e1303970fd7786fef2f2f970898c385069af8898c5e30b-3",
            "file": "src/app/components/spacing-demo/spacing-demo.component.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { CommonModule } from '@angular/common';\nimport { Component } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\n\ninterface SpacingExample {\n  className: string;\n  text: string;\n}\n\ninterface ClassCategory {\n  name: string;\n  classes: string[];\n}\n\n@Component({\n  selector: 'app-spacing-demo',\n  standalone: true,\n  imports: [FormsModule, CommonModule],\n  templateUrl: './spacing-demo.component.html',\n  styleUrl: './spacing-demo.component.scss'\n})\nexport class SpacingDemoComponent {\n  manualClass = '';\n  customText = '';\n  examples: SpacingExample[] = [];\n  defaultText = 'Spacing Example';\n  selectedCategory = '';\n  selectedClass = '';\n  \n  classCategories: ClassCategory[] = [\n    {\n      name: 'Margin',\n      classes: [\n        'global-m-00', 'global-m-01', 'global-m-02', 'global-m-03', 'global-m-04',\n        'global-m-05', 'global-m-06', 'global-m-07', 'global-m-08', 'global-m-09',\n        'global-m-10', 'global-m-11'\n      ]\n    },\n    {\n      name: 'Margin (Top)',\n      classes: [\n        'global-mt-00', 'global-mt-01', 'global-mt-02', 'global-mt-03', 'global-mt-04',\n        'global-mt-05', 'global-mt-06', 'global-mt-07', 'global-mt-08', 'global-mt-09',\n        'global-mt-10', 'global-mt-11'\n      ]\n    },\n    {\n      name: 'Margin (Right)',\n      classes: [\n        'global-mr-00', 'global-mr-01', 'global-mr-02', 'global-mr-03', 'global-mr-04',\n        'global-mr-05', 'global-mr-06', 'global-mr-07', 'global-mr-08', 'global-mr-09',\n        'global-mr-10', 'global-mr-11'\n      ]\n    },\n    {\n      name: 'Margin (Bottom)',\n      classes: [\n        'global-mb-00', 'global-mb-01', 'global-mb-02', 'global-mb-03', 'global-mb-04',\n        'global-mb-05', 'global-mb-06', 'global-mb-07', 'global-mb-08', 'global-mb-09',\n        'global-mb-10', 'global-mb-11'\n      ]\n    },\n    {\n      name: 'Margin (Left)',\n      classes: [\n        'global-ml-00', 'global-ml-01', 'global-ml-02', 'global-ml-03', 'global-ml-04',\n        'global-ml-05', 'global-ml-06', 'global-ml-07', 'global-ml-08', 'global-ml-09',\n        'global-ml-10', 'global-ml-11'\n      ]\n    },\n    {\n      name: 'Margin (X-Axis)',\n      classes: [\n        'global-mx-00', 'global-mx-01', 'global-mx-02', 'global-mx-03', 'global-mx-04',\n        'global-mx-05', 'global-mx-06', 'global-mx-07', 'global-mx-08', 'global-mx-09',\n        'global-mx-10', 'global-mx-11'\n      ]\n    },\n    {\n      name: 'Margin (Y-Axis)',\n      classes: [\n        'global-my-00', 'global-my-01', 'global-my-02', 'global-my-03', 'global-my-04',\n        'global-my-05', 'global-my-06', 'global-my-07', 'global-my-08', 'global-my-09',\n        'global-my-10', 'global-my-11'\n      ]\n    },\n    {\n      name: 'Padding',\n      classes: [\n        'global-p-00', 'global-p-01', 'global-p-02', 'global-p-03', 'global-p-04',\n        'global-p-05', 'global-p-06', 'global-p-07', 'global-p-08', 'global-p-09',\n        'global-p-10', 'global-p-11'\n      ]\n    },\n    {\n      name: 'Padding (Top)',\n      classes: [\n        'global-pt-00', 'global-pt-01', 'global-pt-02', 'global-pt-03', 'global-pt-04',\n        'global-pt-05', 'global-pt-06', 'global-pt-07', 'global-pt-08', 'global-pt-09',\n        'global-pt-10', 'global-pt-11'\n      ]\n    },\n    {\n      name: 'Padding (Right)',\n      classes: [\n        'global-pr-00', 'global-pr-01', 'global-pr-02', 'global-pr-03', 'global-pr-04',\n        'global-pr-05', 'global-pr-06', 'global-pr-07', 'global-pr-08', 'global-pr-09',\n        'global-pr-10', 'global-pr-11'\n      ]\n    },\n    {\n      name: 'Padding (Bottom)',\n      classes: [\n        'global-pb-00', 'global-pb-01', 'global-pb-02', 'global-pb-03', 'global-pb-04',\n        'global-pb-05', 'global-pb-06', 'global-pb-07', 'global-pb-08', 'global-pb-09',\n        'global-pb-10', 'global-pb-11'\n      ]\n    },\n    {\n      name: 'Padding (Left)',\n      classes: [\n        'global-pl-00', 'global-pl-01', 'global-pl-02', 'global-pl-03', 'global-pl-04',\n        'global-pl-05', 'global-pl-06', 'global-pl-07', 'global-pl-08', 'global-pl-09',\n        'global-pl-10', 'global-pl-11'\n      ]\n    },\n    {\n      name: 'Padding (X-Axis)',\n      classes: [\n        'global-px-00', 'global-px-01', 'global-px-02', 'global-px-03', 'global-px-04',\n        'global-px-05', 'global-px-06', 'global-px-07', 'global-px-08', 'global-px-09',\n        'global-px-10', 'global-px-11'\n      ]\n    },\n    {\n      name: 'Padding (Y-Axis)',\n      classes: [\n        'global-py-00', 'global-py-01', 'global-py-02', 'global-py-03', 'global-py-04',\n        'global-py-05', 'global-py-06', 'global-py-07', 'global-py-08', 'global-py-09',\n        'global-py-10', 'global-py-11'\n      ]\n    },\n    {\n      name: 'Gap',\n      classes: [\n        'global-gap-00', 'global-gap-01', 'global-gap-02', 'global-gap-03',\n        'global-gap-04', 'global-gap-05', 'global-gap-06', 'global-gap-07',\n        'global-gap-08', 'global-gap-09', 'global-gap-10', 'global-gap-11'\n      ]\n    },\n    {\n      name: 'Gap (X-Axis)',\n      classes: [\n        'global-gap-x-00', 'global-gap-x-01', 'global-gap-x-02', 'global-gap-x-03',\n        'global-gap-x-04', 'global-gap-x-05', 'global-gap-x-06', 'global-gap-x-07',\n        'global-gap-x-08', 'global-gap-x-09', 'global-gap-x-10', 'global-gap-x-11'\n      ]\n    },\n    {\n      name: 'Gap (Y-Axis)',\n      classes: [\n        'global-gap-y-00', 'global-gap-y-01', 'global-gap-y-02', 'global-gap-y-03',\n        'global-gap-y-04', 'global-gap-y-05', 'global-gap-y-06', 'global-gap-y-07',\n        'global-gap-y-08', 'global-gap-y-09', 'global-gap-y-10', 'global-gap-y-11'\n      ]\n    },\n    {\n      name: 'Gutter',\n      classes: [\n        'global-gutter-00', 'global-gutter-01', 'global-gutter-02', 'global-gutter-03',\n        'global-gutter-04', 'global-gutter-05', 'global-gutter-06', 'global-gutter-07',\n        'global-gutter-08', 'global-gutter-09', 'global-gutter-10', 'global-gutter-11'\n      ]\n    },\n    {\n      name: 'Gutter (X-Axis)',\n      classes: [\n        'global-gutter-x-00', 'global-gutter-x-01', 'global-gutter-x-02', 'global-gutter-x-03',\n        'global-gutter-x-04', 'global-gutter-x-05', 'global-gutter-x-06', 'global-gutter-x-07',\n        'global-gutter-x-08', 'global-gutter-x-09', 'global-gutter-x-10', 'global-gutter-x-11'\n      ]\n    },\n    {\n      name: 'Gutter (Y-Axis)',\n      classes: [\n        'global-gutter-y-00', 'global-gutter-y-01', 'global-gutter-y-02', 'global-gutter-y-03',\n        'global-gutter-y-04', 'global-gutter-y-05', 'global-gutter-y-06', 'global-gutter-y-07',\n        'global-gutter-y-08', 'global-gutter-y-09', 'global-gutter-y-10', 'global-gutter-y-11'\n      ]\n    }\n  ];\n\n  getSelectedCategoryClasses(): string[] {\n    const category = this.classCategories.find(c => c.name === this.selectedCategory);\n    return category ? category.classes : [];\n  }\n\n  onCategoryChange() {\n    this.selectedClass = '';\n  }\n\n  onClassSelect() {\n    if (this.selectedClass) {\n      this.examples.unshift({\n        className: this.selectedClass,\n        text: this.customText || this.defaultText\n      });\n      this.selectedClass = '';\n      this.customText = '';\n    }\n  }\n\n  addClass() {\n    if (this.manualClass) {\n      this.examples.unshift({\n        className: this.manualClass,\n        text: this.customText || this.defaultText\n      });\n      this.manualClass = '';\n      this.customText = '';\n    }\n  }\n\n  removeExample(index: number) {\n    this.examples.splice(index, 1);\n  }\n}\n",
            "properties": [
                {
                    "name": "classes",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string[]",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 11
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": [],
            "isDuplicate": true,
            "duplicateId": 3,
            "duplicateName": "ClassCategory-3"
        },
        {
            "name": "ColorCategory",
            "id": "interface-ColorCategory-699de389b4acab20153c10e266d5a9c2e1b2da9d87d340e4ec3fed2410a00314cdee7a319cd0d292f0fefbf600b943705c6786f6ca8562d5f2215ea33b327115",
            "file": "src/app/components/colors-demo/colors-demo.component.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Component } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\ninterface ColorExample {\n  className: string;\n  text: string;\n  applicationType: 'background' | 'color' | 'border';\n}\n\ninterface ColorCategory {\n  name: string;\n  classes: string[];\n}\n\n@Component({\n  selector: 'app-colors-demo',\n  standalone: true,\n  imports: [CommonModule, FormsModule],\n  templateUrl: './colors-demo.component.html',\n  styleUrl: './colors-demo.component.scss'\n})\nexport class ColorsDemoComponent {\n  manualClass = '';\n  customText = '';\n  examples: ColorExample[] = [];\n  defaultText = 'Sample Text';\n\n  selectedCategory = '';\n  selectedClass = '';\n  selectedApplicationType: 'background' | 'color' | 'border' = 'background';\n\n  applicationTypes = [\n    { value: 'background', label: 'Background Color', disabled: false },\n    { value: 'color', label: 'Text Color', disabled: false },\n    { value: 'border', label: 'Border Color', disabled: false }\n  ];\n\n  isApplicationTypeDisabled = false;\n\n  classCategories: ColorCategory[] = [\n    {\n      name: 'Base Red Colors',\n      classes: [\n        // Text color classes\n        'global-red-50', 'global-red-100', 'global-red-200', 'global-red-300', \n        'global-red-400', 'global-red-500', 'global-red-600', 'global-red-700', \n        'global-red-800', 'global-red-900', 'global-red-1000',\n        'global-red-a50', 'global-red-a100', 'global-red-a150', 'global-red-a200',\n        \n        // Background color classes\n        'global-red-bg-50', 'global-red-bg-100', 'global-red-bg-200', 'global-red-bg-300', \n        'global-red-bg-400', 'global-red-bg-500', 'global-red-bg-600', 'global-red-bg-700', \n        'global-red-bg-800', 'global-red-bg-900', 'global-red-bg-1000',\n        'global-red-bg-a50', 'global-red-bg-a100', 'global-red-bg-a150', 'global-red-bg-a200',\n        \n        // Border color classes\n        'global-red-border-50', 'global-red-border-100', 'global-red-border-200', 'global-red-border-300', \n        'global-red-border-400', 'global-red-border-500', 'global-red-border-600', 'global-red-border-700', \n        'global-red-border-800', 'global-red-border-900', 'global-red-border-1000',\n        'global-red-border-a50', 'global-red-border-a100', 'global-red-border-a150', 'global-red-border-a200'\n      ]\n    },\n    {\n      name: 'Base Yellow Colors',\n      classes: [\n        // Text color classes\n        'global-yellow-50', 'global-yellow-100', 'global-yellow-200', 'global-yellow-300', \n        'global-yellow-400', 'global-yellow-500', 'global-yellow-600', 'global-yellow-700', \n        'global-yellow-800', 'global-yellow-900', 'global-yellow-1000',\n        'global-yellow-a50', 'global-yellow-a100', 'global-yellow-a150', 'global-yellow-a200',\n        \n        // Background color classes\n        'global-yellow-bg-50', 'global-yellow-bg-100', 'global-yellow-bg-200', 'global-yellow-bg-300', \n        'global-yellow-bg-400', 'global-yellow-bg-500', 'global-yellow-bg-600', 'global-yellow-bg-700', \n        'global-yellow-bg-800', 'global-yellow-bg-900', 'global-yellow-bg-1000',\n        'global-yellow-bg-a50', 'global-yellow-bg-a100', 'global-yellow-bg-a150', 'global-yellow-bg-a200',\n        \n        // Border color classes\n        'global-yellow-border-50', 'global-yellow-border-100', 'global-yellow-border-200', 'global-yellow-border-300', \n        'global-yellow-border-400', 'global-yellow-border-500', 'global-yellow-border-600', 'global-yellow-border-700', \n        'global-yellow-border-800', 'global-yellow-border-900', 'global-yellow-border-1000',\n        'global-yellow-border-a50', 'global-yellow-border-a100', 'global-yellow-border-a150', 'global-yellow-border-a200'\n      ]\n    },\n    {\n      name: 'Base Aqua Green Colors',\n      classes: [\n        // Text color classes\n        'global-aqua-green-50', 'global-aqua-green-100', 'global-aqua-green-200', 'global-aqua-green-300', \n        'global-aqua-green-400', 'global-aqua-green-500', 'global-aqua-green-600', 'global-aqua-green-700', \n        'global-aqua-green-800', 'global-aqua-green-900', 'global-aqua-green-1000',\n        'global-aqua-green-a50', 'global-aqua-green-a100', 'global-aqua-green-a150', 'global-aqua-green-a200',\n        \n        // Background color classes\n        'global-aqua-green-bg-50', 'global-aqua-green-bg-100', 'global-aqua-green-bg-200', 'global-aqua-green-bg-300', \n        'global-aqua-green-bg-400', 'global-aqua-green-bg-500', 'global-aqua-green-bg-600', 'global-aqua-green-bg-700', \n        'global-aqua-green-bg-800', 'global-aqua-green-bg-900', 'global-aqua-green-bg-1000',\n        'global-aqua-green-bg-a50', 'global-aqua-green-bg-a100', 'global-aqua-green-bg-a150', 'global-aqua-green-bg-a200',\n        \n        // Border color classes\n        'global-aqua-green-border-50', 'global-aqua-green-border-100', 'global-aqua-green-border-200', 'global-aqua-green-border-300', \n        'global-aqua-green-border-400', 'global-aqua-green-border-500', 'global-aqua-green-border-600', 'global-aqua-green-border-700', \n        'global-aqua-green-border-800', 'global-aqua-green-border-900', 'global-aqua-green-border-1000',\n        'global-aqua-green-border-a50', 'global-aqua-green-border-a100', 'global-aqua-green-border-a150', 'global-aqua-green-border-a200'\n      ]\n    },\n    {\n      name: 'Base Green Colors',\n      classes: [\n        // Text color classes\n        'global-green-50', 'global-green-100', 'global-green-200', 'global-green-300', \n        'global-green-400', 'global-green-500', 'global-green-600', 'global-green-700', \n        'global-green-800', 'global-green-900', 'global-green-1000',\n        'global-green-a50', 'global-green-a100', 'global-green-a150', 'global-green-a200',\n        \n        // Background color classes\n        'global-green-bg-50', 'global-green-bg-100', 'global-green-bg-200', 'global-green-bg-300', \n        'global-green-bg-400', 'global-green-bg-500', 'global-green-bg-600', 'global-green-bg-700', \n        'global-green-bg-800', 'global-green-bg-900', 'global-green-bg-1000',\n        'global-green-bg-a50', 'global-green-bg-a100', 'global-green-bg-a150', 'global-green-bg-a200',\n        \n        // Border color classes\n        'global-green-border-50', 'global-green-border-100', 'global-green-border-200', 'global-green-border-300', \n        'global-green-border-400', 'global-green-border-500', 'global-green-border-600', 'global-green-border-700', \n        'global-green-border-800', 'global-green-border-900', 'global-green-border-1000',\n        'global-green-border-a50', 'global-green-border-a100', 'global-green-border-a150', 'global-green-border-a200'\n      ]\n    },\n    {\n      name: 'Base Sky Blue Colors',\n      classes: [\n        // Text color classes\n        'global-sky-blue-50', 'global-sky-blue-100', 'global-sky-blue-200', 'global-sky-blue-300', \n        'global-sky-blue-400', 'global-sky-blue-500', 'global-sky-blue-600', 'global-sky-blue-700', \n        'global-sky-blue-800', 'global-sky-blue-900', 'global-sky-blue-1000',\n        'global-sky-blue-a50', 'global-sky-blue-a100', 'global-sky-blue-a150', 'global-sky-blue-a200',\n        \n        // Background color classes\n        'global-sky-blue-bg-50', 'global-sky-blue-bg-100', 'global-sky-blue-bg-200', 'global-sky-blue-bg-300', \n        'global-sky-blue-bg-400', 'global-sky-blue-bg-500', 'global-sky-blue-bg-600', 'global-sky-blue-bg-700', \n        'global-sky-blue-bg-800', 'global-sky-blue-bg-900', 'global-sky-blue-bg-1000',\n        'global-sky-blue-bg-a50', 'global-sky-blue-bg-a100', 'global-sky-blue-bg-a150', 'global-sky-blue-bg-a200',\n        \n        // Border color classes\n        'global-sky-blue-border-50', 'global-sky-blue-border-100', 'global-sky-blue-border-200', 'global-sky-blue-border-300', \n        'global-sky-blue-border-400', 'global-sky-blue-border-500', 'global-sky-blue-border-600', 'global-sky-blue-border-700', \n        'global-sky-blue-border-800', 'global-sky-blue-border-900', 'global-sky-blue-border-1000',\n        'global-sky-blue-border-a50', 'global-sky-blue-border-a100', 'global-sky-blue-border-a150', 'global-sky-blue-border-a200'\n      ]\n    },\n    {\n      name: 'Base Blue Colors',\n      classes: [\n        // Text color classes\n        'global-blue-50', 'global-blue-100', 'global-blue-200', 'global-blue-300', \n        'global-blue-400', 'global-blue-500', 'global-blue-600', 'global-blue-700', \n        'global-blue-800', 'global-blue-900', 'global-blue-1000',\n        'global-blue-a50', 'global-blue-a100', 'global-blue-a150', 'global-blue-a200',\n        \n        // Background color classes\n        'global-blue-bg-50', 'global-blue-bg-100', 'global-blue-bg-200', 'global-blue-bg-300', \n        'global-blue-bg-400', 'global-blue-bg-500', 'global-blue-bg-600', 'global-blue-bg-700', \n        'global-blue-bg-800', 'global-blue-bg-900', 'global-blue-bg-1000',\n        'global-blue-bg-a50', 'global-blue-bg-a100', 'global-blue-bg-a150', 'global-blue-bg-a200',\n        \n        // Border color classes\n        'global-blue-border-50', 'global-blue-border-100', 'global-blue-border-200', 'global-blue-border-300', \n        'global-blue-border-400', 'global-blue-border-500', 'global-blue-border-600', 'global-blue-border-700', \n        'global-blue-border-800', 'global-blue-border-900', 'global-blue-border-1000',\n        'global-blue-border-a50', 'global-blue-border-a100', 'global-blue-border-a150', 'global-blue-border-a200'\n      ]\n    },\n    {\n      name: 'Base Pink Colors',\n      classes: [\n        // Text color classes\n        'global-pink-50', 'global-pink-100', 'global-pink-200', 'global-pink-300', \n        'global-pink-400', 'global-pink-500', 'global-pink-600', 'global-pink-700', \n        'global-pink-800', 'global-pink-900', 'global-pink-1000',\n        'global-pink-a50', 'global-pink-a100', 'global-pink-a150', 'global-pink-a200',\n        \n        // Background color classes\n        'global-pink-bg-50', 'global-pink-bg-100', 'global-pink-bg-200', 'global-pink-bg-300', \n        'global-pink-bg-400', 'global-pink-bg-500', 'global-pink-bg-600', 'global-pink-bg-700', \n        'global-pink-bg-800', 'global-pink-bg-900', 'global-pink-bg-1000',\n        'global-pink-bg-a50', 'global-pink-bg-a100', 'global-pink-bg-a150', 'global-pink-bg-a200',\n        \n        // Border color classes\n        'global-pink-border-50', 'global-pink-border-100', 'global-pink-border-200', 'global-pink-border-300', \n        'global-pink-border-400', 'global-pink-border-500', 'global-pink-border-600', 'global-pink-border-700', \n        'global-pink-border-800', 'global-pink-border-900', 'global-pink-border-1000',\n        'global-pink-border-a50', 'global-pink-border-a100', 'global-pink-border-a150', 'global-pink-border-a200'\n      ]\n    },\n    {\n      name: 'Base Purple Colors',\n      classes: [\n        // Text color classes\n        'global-purple-50', 'global-purple-100', 'global-purple-200', 'global-purple-300', \n        'global-purple-400', 'global-purple-500', 'global-purple-600', 'global-purple-700', \n        'global-purple-800', 'global-purple-900', 'global-purple-1000',\n        'global-purple-a50', 'global-purple-a100', 'global-purple-a150', 'global-purple-a200',\n        \n        // Background color classes\n        'global-purple-bg-50', 'global-purple-bg-100', 'global-purple-bg-200', 'global-purple-bg-300', \n        'global-purple-bg-400', 'global-purple-bg-500', 'global-purple-bg-600', 'global-purple-bg-700', \n        'global-purple-bg-800', 'global-purple-bg-900', 'global-purple-bg-1000',\n        'global-purple-bg-a50', 'global-purple-bg-a100', 'global-purple-bg-a150', 'global-purple-bg-a200',\n        \n        // Border color classes\n        'global-purple-border-50', 'global-purple-border-100', 'global-purple-border-200', 'global-purple-border-300', \n        'global-purple-border-400', 'global-purple-border-500', 'global-purple-border-600', 'global-purple-border-700', \n        'global-purple-border-800', 'global-purple-border-900', 'global-purple-border-1000',\n        'global-purple-border-a50', 'global-purple-border-a100', 'global-purple-border-a150', 'global-purple-border-a200'\n      ]\n    },\n    {\n      name: 'Base Charcoal Blue Colors',\n      classes: [\n        // Text color classes\n        'global-charcoal-blue-50', 'global-charcoal-blue-100', 'global-charcoal-blue-200', 'global-charcoal-blue-300', \n        'global-charcoal-blue-400', 'global-charcoal-blue-500', 'global-charcoal-blue-600', 'global-charcoal-blue-700', \n        'global-charcoal-blue-800', 'global-charcoal-blue-900', 'global-charcoal-blue-1000',\n        'global-charcoal-blue-a50', 'global-charcoal-blue-a100', 'global-charcoal-blue-a150', 'global-charcoal-blue-a200',\n        \n        // Background color classes\n        'global-charcoal-blue-bg-50', 'global-charcoal-blue-bg-100', 'global-charcoal-blue-bg-200', 'global-charcoal-blue-bg-300', \n        'global-charcoal-blue-bg-400', 'global-charcoal-blue-bg-500', 'global-charcoal-blue-bg-600', 'global-charcoal-blue-bg-700', \n        'global-charcoal-blue-bg-800', 'global-charcoal-blue-bg-900', 'global-charcoal-blue-bg-1000',\n        'global-charcoal-blue-bg-a50', 'global-charcoal-blue-bg-a100', 'global-charcoal-blue-bg-a150', 'global-charcoal-blue-bg-a200',\n        \n        // Border color classes\n        'global-charcoal-blue-border-50', 'global-charcoal-blue-border-100', 'global-charcoal-blue-border-200', 'global-charcoal-blue-border-300', \n        'global-charcoal-blue-border-400', 'global-charcoal-blue-border-500', 'global-charcoal-blue-border-600', 'global-charcoal-blue-border-700', \n        'global-charcoal-blue-border-800', 'global-charcoal-blue-border-900', 'global-charcoal-blue-border-1000',\n        'global-charcoal-blue-border-a50', 'global-charcoal-blue-border-a100', 'global-charcoal-blue-border-a150', 'global-charcoal-blue-border-a200'\n      ]\n    },\n    {\n      name: 'Base Neutral Colors',\n      classes: [\n        // Text color classes\n        'global-neutral-10', 'global-neutral-20', 'global-neutral-30', 'global-neutral-40', \n        'global-neutral-50', 'global-neutral-100', 'global-neutral-200', 'global-neutral-300', \n        'global-neutral-400', 'global-neutral-500', 'global-neutral-600', 'global-neutral-700', \n        'global-neutral-800', 'global-neutral-900', 'global-neutral-1000',\n        \n        // Background color classes\n        'global-neutral-bg-10', 'global-neutral-bg-20', 'global-neutral-bg-30', 'global-neutral-bg-40', \n        'global-neutral-bg-50', 'global-neutral-bg-100', 'global-neutral-bg-200', 'global-neutral-bg-300', \n        'global-neutral-bg-400', 'global-neutral-bg-500', 'global-neutral-bg-600', 'global-neutral-bg-700', \n        'global-neutral-bg-800', 'global-neutral-bg-900', 'global-neutral-bg-1000',\n        \n        // Border color classes\n        'global-neutral-border-10', 'global-neutral-border-20', 'global-neutral-border-30', 'global-neutral-border-40', \n        'global-neutral-border-50', 'global-neutral-border-100', 'global-neutral-border-200', 'global-neutral-border-300', \n        'global-neutral-border-400', 'global-neutral-border-500', 'global-neutral-border-600', 'global-neutral-border-700', \n        'global-neutral-border-800', 'global-neutral-border-900', 'global-neutral-border-1000'\n      ]\n    },\n    {\n      name: 'Base Black and White Colors',\n      classes: [\n        // Text color classes\n        'global-black', 'global-white',\n        \n        // Background color classes\n        'global-bg-black', 'global-bg-white',\n        \n        // Border color classes\n        'global-border-black', 'global-border-white'\n      ]\n    },\n    {\n      name: 'Surface Colors',\n      classes: [\n        '--surface-bright', '--surface', '--surface-dim',\n        '--surface-container-lowest', '--surface-container-low', '--surface-container',\n        '--surface-container-high', '--surface-container-highest'\n      ]\n    },\n    {\n      name: 'On Surface Colors',\n      classes: [\n        '--on-surface-lowest', '--on-surface-low', '--on-surface'\n      ]\n    },\n    {\n      name: 'Outline Colors',\n      classes: [\n        '--outline-bright', '--outline', '--outline-dim'\n      ]\n    },\n    {\n      name: 'Primary Colors',\n      classes: [\n        '--primary', '--on-primary', '--primary-container', '--on-primary-container'\n      ]\n    },\n    {\n      name: 'Secondary Colors',\n      classes: [\n        '--secondary', '--on-secondary', '--secondary-container', '--on-secondary-container'\n      ]\n    },\n    {\n      name: 'Error Colors',\n      classes: [\n        '--error', '--on-error', '--error-container', '--on-error-container'\n      ]\n    },\n    {\n      name: 'Warning Colors',\n      classes: [\n        '--warning', '--on-warning', '--warning-container', '--on-warning-container'\n      ]\n    },\n    {\n      name: 'Success Colors',\n      classes: [\n        '--success', '--on-success', '--success-container', '--on-success-container'\n      ]\n    },\n    {\n      name: 'Extend 1 Colors',\n      classes: [\n        '--extend-1', '--on-extend-1', '--extend-1-container', '--on-extend-1-container'\n      ]\n    },\n    {\n      name: 'Extend 2 Colors',\n      classes: [\n        '--extend-2', '--on-extend-2', '--extend-2-container', '--on-extend-2-container'\n      ]\n    },\n    {\n      name: 'Extend 3 Colors',\n      classes: [\n        '--extend-3', '--on-extend-3', '--extend-3-container', '--on-extend-3-container'\n      ]\n    }\n  ];\n\n  getSelectedCategoryClasses(): string[] {\n    const category = this.classCategories.find(cat => cat.name === this.selectedCategory);\n    return category ? category.classes : [];\n  }\n\n  onCategoryChange() {\n    this.selectedClass = '';\n  }\n\n  onClassSelect() {\n    if (this.selectedClass) {\n      const category = this.classCategories.find(cat => cat.classes.includes(this.selectedClass));\n      this.examples.unshift({\n        className: this.selectedClass,\n        text: this.customText || this.defaultText,\n        applicationType: this.selectedApplicationType\n      });\n      this.selectedClass = '';\n      this.customText = '';\n    }\n  }\n\n  addClass() {\n    if (this.manualClass) {\n      const category = this.classCategories.find(cat => cat.classes.includes(this.manualClass));\n      this.examples.unshift({\n        className: this.manualClass,\n        text: this.customText || this.defaultText,\n        applicationType: this.selectedApplicationType\n      });\n      this.manualClass = '';\n      this.customText = '';\n    }\n  }\n\n  removeExample(index: number) {\n    this.examples.splice(index, 1);\n  }\n\n  getExampleStyle(example: ColorExample): { [key: string]: string } {\n    const styles: { [key: string]: string } = {};\n\n    if (!example.className.includes('--')) {\n        return styles;\n    }\n    \n    switch (example.applicationType) {\n      case 'background':\n        styles['background-color'] = `var(${example.className})`;\n        break;\n      case 'color':\n        styles['color'] = `var(${example.className})`;\n        break;\n      case 'border':\n        styles['border'] = `2px solid var(${example.className})`;\n        break;\n    }\n\n    return styles;\n  }\n\n  getExampleClasses(example: ColorExample): string {\n    return example.className;\n  }\n}\n",
            "properties": [
                {
                    "name": "classes",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string[]",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 12
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "ColorExample",
            "id": "interface-ColorExample-699de389b4acab20153c10e266d5a9c2e1b2da9d87d340e4ec3fed2410a00314cdee7a319cd0d292f0fefbf600b943705c6786f6ca8562d5f2215ea33b327115",
            "file": "src/app/components/colors-demo/colors-demo.component.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Component } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\ninterface ColorExample {\n  className: string;\n  text: string;\n  applicationType: 'background' | 'color' | 'border';\n}\n\ninterface ColorCategory {\n  name: string;\n  classes: string[];\n}\n\n@Component({\n  selector: 'app-colors-demo',\n  standalone: true,\n  imports: [CommonModule, FormsModule],\n  templateUrl: './colors-demo.component.html',\n  styleUrl: './colors-demo.component.scss'\n})\nexport class ColorsDemoComponent {\n  manualClass = '';\n  customText = '';\n  examples: ColorExample[] = [];\n  defaultText = 'Sample Text';\n\n  selectedCategory = '';\n  selectedClass = '';\n  selectedApplicationType: 'background' | 'color' | 'border' = 'background';\n\n  applicationTypes = [\n    { value: 'background', label: 'Background Color', disabled: false },\n    { value: 'color', label: 'Text Color', disabled: false },\n    { value: 'border', label: 'Border Color', disabled: false }\n  ];\n\n  isApplicationTypeDisabled = false;\n\n  classCategories: ColorCategory[] = [\n    {\n      name: 'Base Red Colors',\n      classes: [\n        // Text color classes\n        'global-red-50', 'global-red-100', 'global-red-200', 'global-red-300', \n        'global-red-400', 'global-red-500', 'global-red-600', 'global-red-700', \n        'global-red-800', 'global-red-900', 'global-red-1000',\n        'global-red-a50', 'global-red-a100', 'global-red-a150', 'global-red-a200',\n        \n        // Background color classes\n        'global-red-bg-50', 'global-red-bg-100', 'global-red-bg-200', 'global-red-bg-300', \n        'global-red-bg-400', 'global-red-bg-500', 'global-red-bg-600', 'global-red-bg-700', \n        'global-red-bg-800', 'global-red-bg-900', 'global-red-bg-1000',\n        'global-red-bg-a50', 'global-red-bg-a100', 'global-red-bg-a150', 'global-red-bg-a200',\n        \n        // Border color classes\n        'global-red-border-50', 'global-red-border-100', 'global-red-border-200', 'global-red-border-300', \n        'global-red-border-400', 'global-red-border-500', 'global-red-border-600', 'global-red-border-700', \n        'global-red-border-800', 'global-red-border-900', 'global-red-border-1000',\n        'global-red-border-a50', 'global-red-border-a100', 'global-red-border-a150', 'global-red-border-a200'\n      ]\n    },\n    {\n      name: 'Base Yellow Colors',\n      classes: [\n        // Text color classes\n        'global-yellow-50', 'global-yellow-100', 'global-yellow-200', 'global-yellow-300', \n        'global-yellow-400', 'global-yellow-500', 'global-yellow-600', 'global-yellow-700', \n        'global-yellow-800', 'global-yellow-900', 'global-yellow-1000',\n        'global-yellow-a50', 'global-yellow-a100', 'global-yellow-a150', 'global-yellow-a200',\n        \n        // Background color classes\n        'global-yellow-bg-50', 'global-yellow-bg-100', 'global-yellow-bg-200', 'global-yellow-bg-300', \n        'global-yellow-bg-400', 'global-yellow-bg-500', 'global-yellow-bg-600', 'global-yellow-bg-700', \n        'global-yellow-bg-800', 'global-yellow-bg-900', 'global-yellow-bg-1000',\n        'global-yellow-bg-a50', 'global-yellow-bg-a100', 'global-yellow-bg-a150', 'global-yellow-bg-a200',\n        \n        // Border color classes\n        'global-yellow-border-50', 'global-yellow-border-100', 'global-yellow-border-200', 'global-yellow-border-300', \n        'global-yellow-border-400', 'global-yellow-border-500', 'global-yellow-border-600', 'global-yellow-border-700', \n        'global-yellow-border-800', 'global-yellow-border-900', 'global-yellow-border-1000',\n        'global-yellow-border-a50', 'global-yellow-border-a100', 'global-yellow-border-a150', 'global-yellow-border-a200'\n      ]\n    },\n    {\n      name: 'Base Aqua Green Colors',\n      classes: [\n        // Text color classes\n        'global-aqua-green-50', 'global-aqua-green-100', 'global-aqua-green-200', 'global-aqua-green-300', \n        'global-aqua-green-400', 'global-aqua-green-500', 'global-aqua-green-600', 'global-aqua-green-700', \n        'global-aqua-green-800', 'global-aqua-green-900', 'global-aqua-green-1000',\n        'global-aqua-green-a50', 'global-aqua-green-a100', 'global-aqua-green-a150', 'global-aqua-green-a200',\n        \n        // Background color classes\n        'global-aqua-green-bg-50', 'global-aqua-green-bg-100', 'global-aqua-green-bg-200', 'global-aqua-green-bg-300', \n        'global-aqua-green-bg-400', 'global-aqua-green-bg-500', 'global-aqua-green-bg-600', 'global-aqua-green-bg-700', \n        'global-aqua-green-bg-800', 'global-aqua-green-bg-900', 'global-aqua-green-bg-1000',\n        'global-aqua-green-bg-a50', 'global-aqua-green-bg-a100', 'global-aqua-green-bg-a150', 'global-aqua-green-bg-a200',\n        \n        // Border color classes\n        'global-aqua-green-border-50', 'global-aqua-green-border-100', 'global-aqua-green-border-200', 'global-aqua-green-border-300', \n        'global-aqua-green-border-400', 'global-aqua-green-border-500', 'global-aqua-green-border-600', 'global-aqua-green-border-700', \n        'global-aqua-green-border-800', 'global-aqua-green-border-900', 'global-aqua-green-border-1000',\n        'global-aqua-green-border-a50', 'global-aqua-green-border-a100', 'global-aqua-green-border-a150', 'global-aqua-green-border-a200'\n      ]\n    },\n    {\n      name: 'Base Green Colors',\n      classes: [\n        // Text color classes\n        'global-green-50', 'global-green-100', 'global-green-200', 'global-green-300', \n        'global-green-400', 'global-green-500', 'global-green-600', 'global-green-700', \n        'global-green-800', 'global-green-900', 'global-green-1000',\n        'global-green-a50', 'global-green-a100', 'global-green-a150', 'global-green-a200',\n        \n        // Background color classes\n        'global-green-bg-50', 'global-green-bg-100', 'global-green-bg-200', 'global-green-bg-300', \n        'global-green-bg-400', 'global-green-bg-500', 'global-green-bg-600', 'global-green-bg-700', \n        'global-green-bg-800', 'global-green-bg-900', 'global-green-bg-1000',\n        'global-green-bg-a50', 'global-green-bg-a100', 'global-green-bg-a150', 'global-green-bg-a200',\n        \n        // Border color classes\n        'global-green-border-50', 'global-green-border-100', 'global-green-border-200', 'global-green-border-300', \n        'global-green-border-400', 'global-green-border-500', 'global-green-border-600', 'global-green-border-700', \n        'global-green-border-800', 'global-green-border-900', 'global-green-border-1000',\n        'global-green-border-a50', 'global-green-border-a100', 'global-green-border-a150', 'global-green-border-a200'\n      ]\n    },\n    {\n      name: 'Base Sky Blue Colors',\n      classes: [\n        // Text color classes\n        'global-sky-blue-50', 'global-sky-blue-100', 'global-sky-blue-200', 'global-sky-blue-300', \n        'global-sky-blue-400', 'global-sky-blue-500', 'global-sky-blue-600', 'global-sky-blue-700', \n        'global-sky-blue-800', 'global-sky-blue-900', 'global-sky-blue-1000',\n        'global-sky-blue-a50', 'global-sky-blue-a100', 'global-sky-blue-a150', 'global-sky-blue-a200',\n        \n        // Background color classes\n        'global-sky-blue-bg-50', 'global-sky-blue-bg-100', 'global-sky-blue-bg-200', 'global-sky-blue-bg-300', \n        'global-sky-blue-bg-400', 'global-sky-blue-bg-500', 'global-sky-blue-bg-600', 'global-sky-blue-bg-700', \n        'global-sky-blue-bg-800', 'global-sky-blue-bg-900', 'global-sky-blue-bg-1000',\n        'global-sky-blue-bg-a50', 'global-sky-blue-bg-a100', 'global-sky-blue-bg-a150', 'global-sky-blue-bg-a200',\n        \n        // Border color classes\n        'global-sky-blue-border-50', 'global-sky-blue-border-100', 'global-sky-blue-border-200', 'global-sky-blue-border-300', \n        'global-sky-blue-border-400', 'global-sky-blue-border-500', 'global-sky-blue-border-600', 'global-sky-blue-border-700', \n        'global-sky-blue-border-800', 'global-sky-blue-border-900', 'global-sky-blue-border-1000',\n        'global-sky-blue-border-a50', 'global-sky-blue-border-a100', 'global-sky-blue-border-a150', 'global-sky-blue-border-a200'\n      ]\n    },\n    {\n      name: 'Base Blue Colors',\n      classes: [\n        // Text color classes\n        'global-blue-50', 'global-blue-100', 'global-blue-200', 'global-blue-300', \n        'global-blue-400', 'global-blue-500', 'global-blue-600', 'global-blue-700', \n        'global-blue-800', 'global-blue-900', 'global-blue-1000',\n        'global-blue-a50', 'global-blue-a100', 'global-blue-a150', 'global-blue-a200',\n        \n        // Background color classes\n        'global-blue-bg-50', 'global-blue-bg-100', 'global-blue-bg-200', 'global-blue-bg-300', \n        'global-blue-bg-400', 'global-blue-bg-500', 'global-blue-bg-600', 'global-blue-bg-700', \n        'global-blue-bg-800', 'global-blue-bg-900', 'global-blue-bg-1000',\n        'global-blue-bg-a50', 'global-blue-bg-a100', 'global-blue-bg-a150', 'global-blue-bg-a200',\n        \n        // Border color classes\n        'global-blue-border-50', 'global-blue-border-100', 'global-blue-border-200', 'global-blue-border-300', \n        'global-blue-border-400', 'global-blue-border-500', 'global-blue-border-600', 'global-blue-border-700', \n        'global-blue-border-800', 'global-blue-border-900', 'global-blue-border-1000',\n        'global-blue-border-a50', 'global-blue-border-a100', 'global-blue-border-a150', 'global-blue-border-a200'\n      ]\n    },\n    {\n      name: 'Base Pink Colors',\n      classes: [\n        // Text color classes\n        'global-pink-50', 'global-pink-100', 'global-pink-200', 'global-pink-300', \n        'global-pink-400', 'global-pink-500', 'global-pink-600', 'global-pink-700', \n        'global-pink-800', 'global-pink-900', 'global-pink-1000',\n        'global-pink-a50', 'global-pink-a100', 'global-pink-a150', 'global-pink-a200',\n        \n        // Background color classes\n        'global-pink-bg-50', 'global-pink-bg-100', 'global-pink-bg-200', 'global-pink-bg-300', \n        'global-pink-bg-400', 'global-pink-bg-500', 'global-pink-bg-600', 'global-pink-bg-700', \n        'global-pink-bg-800', 'global-pink-bg-900', 'global-pink-bg-1000',\n        'global-pink-bg-a50', 'global-pink-bg-a100', 'global-pink-bg-a150', 'global-pink-bg-a200',\n        \n        // Border color classes\n        'global-pink-border-50', 'global-pink-border-100', 'global-pink-border-200', 'global-pink-border-300', \n        'global-pink-border-400', 'global-pink-border-500', 'global-pink-border-600', 'global-pink-border-700', \n        'global-pink-border-800', 'global-pink-border-900', 'global-pink-border-1000',\n        'global-pink-border-a50', 'global-pink-border-a100', 'global-pink-border-a150', 'global-pink-border-a200'\n      ]\n    },\n    {\n      name: 'Base Purple Colors',\n      classes: [\n        // Text color classes\n        'global-purple-50', 'global-purple-100', 'global-purple-200', 'global-purple-300', \n        'global-purple-400', 'global-purple-500', 'global-purple-600', 'global-purple-700', \n        'global-purple-800', 'global-purple-900', 'global-purple-1000',\n        'global-purple-a50', 'global-purple-a100', 'global-purple-a150', 'global-purple-a200',\n        \n        // Background color classes\n        'global-purple-bg-50', 'global-purple-bg-100', 'global-purple-bg-200', 'global-purple-bg-300', \n        'global-purple-bg-400', 'global-purple-bg-500', 'global-purple-bg-600', 'global-purple-bg-700', \n        'global-purple-bg-800', 'global-purple-bg-900', 'global-purple-bg-1000',\n        'global-purple-bg-a50', 'global-purple-bg-a100', 'global-purple-bg-a150', 'global-purple-bg-a200',\n        \n        // Border color classes\n        'global-purple-border-50', 'global-purple-border-100', 'global-purple-border-200', 'global-purple-border-300', \n        'global-purple-border-400', 'global-purple-border-500', 'global-purple-border-600', 'global-purple-border-700', \n        'global-purple-border-800', 'global-purple-border-900', 'global-purple-border-1000',\n        'global-purple-border-a50', 'global-purple-border-a100', 'global-purple-border-a150', 'global-purple-border-a200'\n      ]\n    },\n    {\n      name: 'Base Charcoal Blue Colors',\n      classes: [\n        // Text color classes\n        'global-charcoal-blue-50', 'global-charcoal-blue-100', 'global-charcoal-blue-200', 'global-charcoal-blue-300', \n        'global-charcoal-blue-400', 'global-charcoal-blue-500', 'global-charcoal-blue-600', 'global-charcoal-blue-700', \n        'global-charcoal-blue-800', 'global-charcoal-blue-900', 'global-charcoal-blue-1000',\n        'global-charcoal-blue-a50', 'global-charcoal-blue-a100', 'global-charcoal-blue-a150', 'global-charcoal-blue-a200',\n        \n        // Background color classes\n        'global-charcoal-blue-bg-50', 'global-charcoal-blue-bg-100', 'global-charcoal-blue-bg-200', 'global-charcoal-blue-bg-300', \n        'global-charcoal-blue-bg-400', 'global-charcoal-blue-bg-500', 'global-charcoal-blue-bg-600', 'global-charcoal-blue-bg-700', \n        'global-charcoal-blue-bg-800', 'global-charcoal-blue-bg-900', 'global-charcoal-blue-bg-1000',\n        'global-charcoal-blue-bg-a50', 'global-charcoal-blue-bg-a100', 'global-charcoal-blue-bg-a150', 'global-charcoal-blue-bg-a200',\n        \n        // Border color classes\n        'global-charcoal-blue-border-50', 'global-charcoal-blue-border-100', 'global-charcoal-blue-border-200', 'global-charcoal-blue-border-300', \n        'global-charcoal-blue-border-400', 'global-charcoal-blue-border-500', 'global-charcoal-blue-border-600', 'global-charcoal-blue-border-700', \n        'global-charcoal-blue-border-800', 'global-charcoal-blue-border-900', 'global-charcoal-blue-border-1000',\n        'global-charcoal-blue-border-a50', 'global-charcoal-blue-border-a100', 'global-charcoal-blue-border-a150', 'global-charcoal-blue-border-a200'\n      ]\n    },\n    {\n      name: 'Base Neutral Colors',\n      classes: [\n        // Text color classes\n        'global-neutral-10', 'global-neutral-20', 'global-neutral-30', 'global-neutral-40', \n        'global-neutral-50', 'global-neutral-100', 'global-neutral-200', 'global-neutral-300', \n        'global-neutral-400', 'global-neutral-500', 'global-neutral-600', 'global-neutral-700', \n        'global-neutral-800', 'global-neutral-900', 'global-neutral-1000',\n        \n        // Background color classes\n        'global-neutral-bg-10', 'global-neutral-bg-20', 'global-neutral-bg-30', 'global-neutral-bg-40', \n        'global-neutral-bg-50', 'global-neutral-bg-100', 'global-neutral-bg-200', 'global-neutral-bg-300', \n        'global-neutral-bg-400', 'global-neutral-bg-500', 'global-neutral-bg-600', 'global-neutral-bg-700', \n        'global-neutral-bg-800', 'global-neutral-bg-900', 'global-neutral-bg-1000',\n        \n        // Border color classes\n        'global-neutral-border-10', 'global-neutral-border-20', 'global-neutral-border-30', 'global-neutral-border-40', \n        'global-neutral-border-50', 'global-neutral-border-100', 'global-neutral-border-200', 'global-neutral-border-300', \n        'global-neutral-border-400', 'global-neutral-border-500', 'global-neutral-border-600', 'global-neutral-border-700', \n        'global-neutral-border-800', 'global-neutral-border-900', 'global-neutral-border-1000'\n      ]\n    },\n    {\n      name: 'Base Black and White Colors',\n      classes: [\n        // Text color classes\n        'global-black', 'global-white',\n        \n        // Background color classes\n        'global-bg-black', 'global-bg-white',\n        \n        // Border color classes\n        'global-border-black', 'global-border-white'\n      ]\n    },\n    {\n      name: 'Surface Colors',\n      classes: [\n        '--surface-bright', '--surface', '--surface-dim',\n        '--surface-container-lowest', '--surface-container-low', '--surface-container',\n        '--surface-container-high', '--surface-container-highest'\n      ]\n    },\n    {\n      name: 'On Surface Colors',\n      classes: [\n        '--on-surface-lowest', '--on-surface-low', '--on-surface'\n      ]\n    },\n    {\n      name: 'Outline Colors',\n      classes: [\n        '--outline-bright', '--outline', '--outline-dim'\n      ]\n    },\n    {\n      name: 'Primary Colors',\n      classes: [\n        '--primary', '--on-primary', '--primary-container', '--on-primary-container'\n      ]\n    },\n    {\n      name: 'Secondary Colors',\n      classes: [\n        '--secondary', '--on-secondary', '--secondary-container', '--on-secondary-container'\n      ]\n    },\n    {\n      name: 'Error Colors',\n      classes: [\n        '--error', '--on-error', '--error-container', '--on-error-container'\n      ]\n    },\n    {\n      name: 'Warning Colors',\n      classes: [\n        '--warning', '--on-warning', '--warning-container', '--on-warning-container'\n      ]\n    },\n    {\n      name: 'Success Colors',\n      classes: [\n        '--success', '--on-success', '--success-container', '--on-success-container'\n      ]\n    },\n    {\n      name: 'Extend 1 Colors',\n      classes: [\n        '--extend-1', '--on-extend-1', '--extend-1-container', '--on-extend-1-container'\n      ]\n    },\n    {\n      name: 'Extend 2 Colors',\n      classes: [\n        '--extend-2', '--on-extend-2', '--extend-2-container', '--on-extend-2-container'\n      ]\n    },\n    {\n      name: 'Extend 3 Colors',\n      classes: [\n        '--extend-3', '--on-extend-3', '--extend-3-container', '--on-extend-3-container'\n      ]\n    }\n  ];\n\n  getSelectedCategoryClasses(): string[] {\n    const category = this.classCategories.find(cat => cat.name === this.selectedCategory);\n    return category ? category.classes : [];\n  }\n\n  onCategoryChange() {\n    this.selectedClass = '';\n  }\n\n  onClassSelect() {\n    if (this.selectedClass) {\n      const category = this.classCategories.find(cat => cat.classes.includes(this.selectedClass));\n      this.examples.unshift({\n        className: this.selectedClass,\n        text: this.customText || this.defaultText,\n        applicationType: this.selectedApplicationType\n      });\n      this.selectedClass = '';\n      this.customText = '';\n    }\n  }\n\n  addClass() {\n    if (this.manualClass) {\n      const category = this.classCategories.find(cat => cat.classes.includes(this.manualClass));\n      this.examples.unshift({\n        className: this.manualClass,\n        text: this.customText || this.defaultText,\n        applicationType: this.selectedApplicationType\n      });\n      this.manualClass = '';\n      this.customText = '';\n    }\n  }\n\n  removeExample(index: number) {\n    this.examples.splice(index, 1);\n  }\n\n  getExampleStyle(example: ColorExample): { [key: string]: string } {\n    const styles: { [key: string]: string } = {};\n\n    if (!example.className.includes('--')) {\n        return styles;\n    }\n    \n    switch (example.applicationType) {\n      case 'background':\n        styles['background-color'] = `var(${example.className})`;\n        break;\n      case 'color':\n        styles['color'] = `var(${example.className})`;\n        break;\n      case 'border':\n        styles['border'] = `2px solid var(${example.className})`;\n        break;\n    }\n\n    return styles;\n  }\n\n  getExampleClasses(example: ColorExample): string {\n    return example.className;\n  }\n}\n",
            "properties": [
                {
                    "name": "applicationType",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "\"background\" | \"color\" | \"border\"",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "className",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "text",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 7
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "ElevationExample",
            "id": "interface-ElevationExample-80e975c59b8339cc609e30d703d83cf0787f87df351c65901e4848bb59ac4f18f56e0347f91b21174c75be534e32cfd3b03b367d776689c9af90051c4f699e4e",
            "file": "src/app/components/elevation-demo/elevation-demo.component.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { CommonModule } from '@angular/common';\nimport { Component } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\n\ninterface ElevationExample {\n  className: string;\n  text: string;\n}\n\ninterface ClassCategory {\n  name: string;\n  classes: string[];\n}\n\n@Component({\n  selector: 'app-elevation-demo',\n  standalone: true,\n  imports: [FormsModule, CommonModule],\n  templateUrl: './elevation-demo.component.html',\n  styleUrl: './elevation-demo.component.scss'\n})\nexport class ElevationDemoComponent {\n  manualClass = '';\n  customText = '';\n  examples: ElevationExample[] = [];\n  defaultText = 'Elevation Example';\n  selectedCategory = '';\n  selectedClass = '';\n  \n  classCategories: ClassCategory[] = [\n    {\n      name: 'Shadows (Global)',\n      classes: [\n        'global-el-ultraLowRaised',\n        'global-el-lowRaised',\n        'global-el-midRaised',\n        'global-el-highRaised',\n        'global-el-ultraHighRaised'\n      ]\n    },\n  ];\n\n  getSelectedCategoryClasses(): string[] {\n    const category = this.classCategories.find(c => c.name === this.selectedCategory);\n    return category ? category.classes : [];\n  }\n\n  onCategoryChange() {\n    this.selectedClass = '';\n  }\n\n  onClassSelect() {\n    if (this.selectedClass) {\n      this.examples.unshift({\n        className: this.selectedClass,\n        text: this.customText || this.defaultText\n      });\n      this.selectedClass = '';\n      this.customText = '';\n    }\n  }\n\n  addClass() {\n    if (this.manualClass) {\n      this.examples.unshift({\n        className: this.manualClass,\n        text: this.customText || this.defaultText\n      });\n      this.manualClass = '';\n      this.customText = '';\n    }\n  }\n\n  removeExample(index: number) {\n    this.examples.splice(index, 1);\n  }\n}\n",
            "properties": [
                {
                    "name": "className",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "text",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 7
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "SpacingExample",
            "id": "interface-SpacingExample-af25fdfbedfc09875af86f7efde5eeba669d2468907caf3f8fc7b82f87ee1194f4fb2f4c051d21f6c8e1303970fd7786fef2f2f970898c385069af8898c5e30b",
            "file": "src/app/components/spacing-demo/spacing-demo.component.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { CommonModule } from '@angular/common';\nimport { Component } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\n\ninterface SpacingExample {\n  className: string;\n  text: string;\n}\n\ninterface ClassCategory {\n  name: string;\n  classes: string[];\n}\n\n@Component({\n  selector: 'app-spacing-demo',\n  standalone: true,\n  imports: [FormsModule, CommonModule],\n  templateUrl: './spacing-demo.component.html',\n  styleUrl: './spacing-demo.component.scss'\n})\nexport class SpacingDemoComponent {\n  manualClass = '';\n  customText = '';\n  examples: SpacingExample[] = [];\n  defaultText = 'Spacing Example';\n  selectedCategory = '';\n  selectedClass = '';\n  \n  classCategories: ClassCategory[] = [\n    {\n      name: 'Margin',\n      classes: [\n        'global-m-00', 'global-m-01', 'global-m-02', 'global-m-03', 'global-m-04',\n        'global-m-05', 'global-m-06', 'global-m-07', 'global-m-08', 'global-m-09',\n        'global-m-10', 'global-m-11'\n      ]\n    },\n    {\n      name: 'Margin (Top)',\n      classes: [\n        'global-mt-00', 'global-mt-01', 'global-mt-02', 'global-mt-03', 'global-mt-04',\n        'global-mt-05', 'global-mt-06', 'global-mt-07', 'global-mt-08', 'global-mt-09',\n        'global-mt-10', 'global-mt-11'\n      ]\n    },\n    {\n      name: 'Margin (Right)',\n      classes: [\n        'global-mr-00', 'global-mr-01', 'global-mr-02', 'global-mr-03', 'global-mr-04',\n        'global-mr-05', 'global-mr-06', 'global-mr-07', 'global-mr-08', 'global-mr-09',\n        'global-mr-10', 'global-mr-11'\n      ]\n    },\n    {\n      name: 'Margin (Bottom)',\n      classes: [\n        'global-mb-00', 'global-mb-01', 'global-mb-02', 'global-mb-03', 'global-mb-04',\n        'global-mb-05', 'global-mb-06', 'global-mb-07', 'global-mb-08', 'global-mb-09',\n        'global-mb-10', 'global-mb-11'\n      ]\n    },\n    {\n      name: 'Margin (Left)',\n      classes: [\n        'global-ml-00', 'global-ml-01', 'global-ml-02', 'global-ml-03', 'global-ml-04',\n        'global-ml-05', 'global-ml-06', 'global-ml-07', 'global-ml-08', 'global-ml-09',\n        'global-ml-10', 'global-ml-11'\n      ]\n    },\n    {\n      name: 'Margin (X-Axis)',\n      classes: [\n        'global-mx-00', 'global-mx-01', 'global-mx-02', 'global-mx-03', 'global-mx-04',\n        'global-mx-05', 'global-mx-06', 'global-mx-07', 'global-mx-08', 'global-mx-09',\n        'global-mx-10', 'global-mx-11'\n      ]\n    },\n    {\n      name: 'Margin (Y-Axis)',\n      classes: [\n        'global-my-00', 'global-my-01', 'global-my-02', 'global-my-03', 'global-my-04',\n        'global-my-05', 'global-my-06', 'global-my-07', 'global-my-08', 'global-my-09',\n        'global-my-10', 'global-my-11'\n      ]\n    },\n    {\n      name: 'Padding',\n      classes: [\n        'global-p-00', 'global-p-01', 'global-p-02', 'global-p-03', 'global-p-04',\n        'global-p-05', 'global-p-06', 'global-p-07', 'global-p-08', 'global-p-09',\n        'global-p-10', 'global-p-11'\n      ]\n    },\n    {\n      name: 'Padding (Top)',\n      classes: [\n        'global-pt-00', 'global-pt-01', 'global-pt-02', 'global-pt-03', 'global-pt-04',\n        'global-pt-05', 'global-pt-06', 'global-pt-07', 'global-pt-08', 'global-pt-09',\n        'global-pt-10', 'global-pt-11'\n      ]\n    },\n    {\n      name: 'Padding (Right)',\n      classes: [\n        'global-pr-00', 'global-pr-01', 'global-pr-02', 'global-pr-03', 'global-pr-04',\n        'global-pr-05', 'global-pr-06', 'global-pr-07', 'global-pr-08', 'global-pr-09',\n        'global-pr-10', 'global-pr-11'\n      ]\n    },\n    {\n      name: 'Padding (Bottom)',\n      classes: [\n        'global-pb-00', 'global-pb-01', 'global-pb-02', 'global-pb-03', 'global-pb-04',\n        'global-pb-05', 'global-pb-06', 'global-pb-07', 'global-pb-08', 'global-pb-09',\n        'global-pb-10', 'global-pb-11'\n      ]\n    },\n    {\n      name: 'Padding (Left)',\n      classes: [\n        'global-pl-00', 'global-pl-01', 'global-pl-02', 'global-pl-03', 'global-pl-04',\n        'global-pl-05', 'global-pl-06', 'global-pl-07', 'global-pl-08', 'global-pl-09',\n        'global-pl-10', 'global-pl-11'\n      ]\n    },\n    {\n      name: 'Padding (X-Axis)',\n      classes: [\n        'global-px-00', 'global-px-01', 'global-px-02', 'global-px-03', 'global-px-04',\n        'global-px-05', 'global-px-06', 'global-px-07', 'global-px-08', 'global-px-09',\n        'global-px-10', 'global-px-11'\n      ]\n    },\n    {\n      name: 'Padding (Y-Axis)',\n      classes: [\n        'global-py-00', 'global-py-01', 'global-py-02', 'global-py-03', 'global-py-04',\n        'global-py-05', 'global-py-06', 'global-py-07', 'global-py-08', 'global-py-09',\n        'global-py-10', 'global-py-11'\n      ]\n    },\n    {\n      name: 'Gap',\n      classes: [\n        'global-gap-00', 'global-gap-01', 'global-gap-02', 'global-gap-03',\n        'global-gap-04', 'global-gap-05', 'global-gap-06', 'global-gap-07',\n        'global-gap-08', 'global-gap-09', 'global-gap-10', 'global-gap-11'\n      ]\n    },\n    {\n      name: 'Gap (X-Axis)',\n      classes: [\n        'global-gap-x-00', 'global-gap-x-01', 'global-gap-x-02', 'global-gap-x-03',\n        'global-gap-x-04', 'global-gap-x-05', 'global-gap-x-06', 'global-gap-x-07',\n        'global-gap-x-08', 'global-gap-x-09', 'global-gap-x-10', 'global-gap-x-11'\n      ]\n    },\n    {\n      name: 'Gap (Y-Axis)',\n      classes: [\n        'global-gap-y-00', 'global-gap-y-01', 'global-gap-y-02', 'global-gap-y-03',\n        'global-gap-y-04', 'global-gap-y-05', 'global-gap-y-06', 'global-gap-y-07',\n        'global-gap-y-08', 'global-gap-y-09', 'global-gap-y-10', 'global-gap-y-11'\n      ]\n    },\n    {\n      name: 'Gutter',\n      classes: [\n        'global-gutter-00', 'global-gutter-01', 'global-gutter-02', 'global-gutter-03',\n        'global-gutter-04', 'global-gutter-05', 'global-gutter-06', 'global-gutter-07',\n        'global-gutter-08', 'global-gutter-09', 'global-gutter-10', 'global-gutter-11'\n      ]\n    },\n    {\n      name: 'Gutter (X-Axis)',\n      classes: [\n        'global-gutter-x-00', 'global-gutter-x-01', 'global-gutter-x-02', 'global-gutter-x-03',\n        'global-gutter-x-04', 'global-gutter-x-05', 'global-gutter-x-06', 'global-gutter-x-07',\n        'global-gutter-x-08', 'global-gutter-x-09', 'global-gutter-x-10', 'global-gutter-x-11'\n      ]\n    },\n    {\n      name: 'Gutter (Y-Axis)',\n      classes: [\n        'global-gutter-y-00', 'global-gutter-y-01', 'global-gutter-y-02', 'global-gutter-y-03',\n        'global-gutter-y-04', 'global-gutter-y-05', 'global-gutter-y-06', 'global-gutter-y-07',\n        'global-gutter-y-08', 'global-gutter-y-09', 'global-gutter-y-10', 'global-gutter-y-11'\n      ]\n    }\n  ];\n\n  getSelectedCategoryClasses(): string[] {\n    const category = this.classCategories.find(c => c.name === this.selectedCategory);\n    return category ? category.classes : [];\n  }\n\n  onCategoryChange() {\n    this.selectedClass = '';\n  }\n\n  onClassSelect() {\n    if (this.selectedClass) {\n      this.examples.unshift({\n        className: this.selectedClass,\n        text: this.customText || this.defaultText\n      });\n      this.selectedClass = '';\n      this.customText = '';\n    }\n  }\n\n  addClass() {\n    if (this.manualClass) {\n      this.examples.unshift({\n        className: this.manualClass,\n        text: this.customText || this.defaultText\n      });\n      this.manualClass = '';\n      this.customText = '';\n    }\n  }\n\n  removeExample(index: number) {\n    this.examples.splice(index, 1);\n  }\n}\n",
            "properties": [
                {
                    "name": "className",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "text",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 7
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "TypographyExample",
            "id": "interface-TypographyExample-1f7309991cee3d2a3086f0cdc514ed710a08fac528197d71142d088e88e1bdb95f645a7338908ddf6ec4f514855ff0f45f4ce9a1a4c5cd22c577ee4d37dcf75d",
            "file": "src/app/components/typography-demo/typography-demo.component.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { CommonModule } from '@angular/common';\nimport { Component } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\n\ninterface TypographyExample {\n  className: string;\n  text: string;\n}\n\ninterface ClassCategory {\n  name: string;\n  classes: string[];\n}\n\n@Component({\n  selector: 'app-typography-demo',\n  imports: [FormsModule, CommonModule],\n  templateUrl: './typography-demo.component.html',\n  styleUrl: './typography-demo.component.scss'\n})\nexport class TypographyDemoComponent {\n  manualClass = '';\n  customText = '';\n  examples: TypographyExample[] = [];\n  defaultText = 'Typography Example';\n  selectedCategory = '';\n  selectedClass = '';\n  \n  classCategories: ClassCategory[] = [\n    {\n      name: 'Font Size (Global)',\n      classes: [\n        'global-fz-10', 'global-fz-12', 'global-fz-14', 'global-fz-16', 'global-fz-18',\n        'global-fz-20', 'global-fz-24', 'global-fz-32', 'global-fz-34', 'global-fz-36',\n        'global-fz-38', 'global-fz-40', 'global-fz-48', 'global-fz-56', 'global-fz-64',\n        'global-fz-72'\n      ]\n    },\n    {\n      name: 'Font Size (Scale)',\n      classes: [\n        'font-size-25', 'font-size-50', 'font-size-100', 'font-size-200', 'font-size-300',\n        'font-size-400', 'font-size-500', 'font-size-600', 'font-size-700', 'font-size-800',\n        'font-size-900', 'font-size-1000', 'font-size-1100'\n      ]\n    },\n    {\n      name: 'Line Height (Global)',\n      classes: [\n        'global-lh-00', 'global-lh-14', 'global-lh-16', 'global-lh-18', 'global-lh-20',\n        'global-lh-22', 'global-lh-24', 'global-lh-26', 'global-lh-32', 'global-lh-38',\n        'global-lh-42', 'global-lh-46', 'global-lh-48', 'global-lh-56', 'global-lh-64',\n        'global-lh-70', 'global-lh-78'\n      ]\n    },\n    {\n      name: 'Line Height (Scale)',\n      classes: [\n        'line-height-00', 'line-height-25', 'line-height-50', 'line-height-75',\n        'line-height-100', 'line-height-200', 'line-height-300', 'line-height-400',\n        'line-height-500', 'line-height-600', 'line-height-700', 'line-height-800',\n        'line-height-900', 'line-height-1000', 'line-height-1100'\n      ]\n    },\n    {\n      name: 'Letter Spacing (Global)',\n      classes: [\n        'global-ls-compressed', 'global-ls-condensed', 'global-ls-normal',\n        'global-ls-expanded', 'global-ls-extended'\n      ]\n    },\n    {\n      name: 'Letter Spacing (Scale)',\n      classes: [\n        'letter-spacing-50', 'letter-spacing-100'\n      ]\n    },\n    {\n      name: 'Font Weight (Global)',\n      classes: [\n        'global-fw-100', 'global-fw-200', 'global-fw-300', 'global-fw-400',\n        'global-fw-500', 'global-fw-600', 'global-fw-700', 'global-fw-800',\n        'global-fw-900'\n      ]\n    },\n    {\n      name: 'Font Weight (Scale)',\n      classes: [\n        'font-weight-400',\n        'font-weight-500',\n        'font-weight-600',\n        'font-weight-700'\n      ]\n    },\n    {\n      name: 'Paragraph Spacing (Global)',\n      classes: [\n        'global-ps-00', 'global-ps-08', 'global-ps-10', 'global-ps-11', 'global-ps-12'\n      ]\n    },\n    {\n      name: 'Paragraph Spacing (Scale)',\n      classes: [\n        'paragraph-spacing-00', 'paragraph-spacing-100', 'paragraph-spacing-200',\n        'paragraph-spacing-300', 'paragraph-spacing-400'\n      ]\n    },\n    {\n      name: 'List Spacing (Global)',\n      classes: [\n        'global-lis-00', 'global-lis-04', 'global-lis-08', 'global-lis-12',\n        'global-lis-16', 'global-lis-20', 'global-lis-24'\n      ]\n    },\n    {\n      name: 'List Spacing (Scale)',\n      classes: [\n        'list-spacing-00', 'list-spacing-100'\n      ]\n    },\n    {\n      name: 'Type Scale (Display)',\n      classes: [\n        'DisplayXLargeRegular', 'DisplayXLargeMedium', 'DisplayXLargeSemibold',\n        'DisplayLargeRegular', 'DisplayLargeMedium', 'DisplayLargeSemibold',\n        'DisplayMediumRegular', 'DisplayMediumMedium', 'DisplayMediumSemibold',\n        'DisplaySmallRegular', 'DisplaySmallMedium', 'DisplaySmallSemibold'\n      ]\n    },\n    {\n      name: 'Type Scale (Heading)',\n      classes: [\n        'Heading2XLargeRegular', 'Heading2XLargeSemibold',\n        'HeadingXLargeRegular', 'HeadingXLargeSemibold',\n        'HeadingLargeRegular', 'HeadingLargeSemibold',\n        'HeadingMediumRegular', 'HeadingMediumSemibold',\n        'HeadingSmallRegular', 'HeadingSmallSemibold'\n      ]\n    },\n    {\n      name: 'Type Scale (Body)',\n      classes: [\n        'BodyLargeRegular', 'BodyLargeMedium', 'BodyLargeSemibold',\n        'BodyMediumRegular', 'BodyMediumMedium', 'BodyMediumSemibold',\n        'BodySmallRegular', 'BodySmallMedium', 'BodySmallSemibold',\n        'BodyXSmallRegular', 'BodyXSmallMedium', 'BodyXSmallSemibold'\n      ]\n    }\n  ];\n\n  getSelectedCategoryClasses(): string[] {\n    const category = this.classCategories.find(c => c.name === this.selectedCategory);\n    return category ? category.classes : [];\n  }\n\n  onCategoryChange() {\n    this.selectedClass = '';\n  }\n\n  onClassSelect() {\n    if (this.selectedClass) {\n      this.examples.unshift({\n        className: this.selectedClass,\n        text: this.customText || this.defaultText\n      });\n      this.selectedClass = '';\n      this.customText = '';\n    }\n  }\n\n  addClass() {\n    if (this.manualClass) {\n      this.examples.unshift({\n        className: this.manualClass,\n        text: this.customText || this.defaultText\n      });\n      this.manualClass = '';\n      this.customText = '';\n    }\n  }\n\n  removeExample(index: number) {\n    this.examples.splice(index, 1);\n  }\n}\n",
            "properties": [
                {
                    "name": "className",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "text",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 7
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "User",
            "id": "interface-User-d4821beac0e4a852e513391b7470981c4353fdd95a18628bb68136c8695b489ee15b926e2e5031bc26cf30e1508e0a362c3ee13a06734702b4d15af140e485d5",
            "file": "src/stories/user.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface User {\n  name: string;\n}\n",
            "properties": [
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 2
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        }
    ],
    "injectables": [],
    "guards": [],
    "interceptors": [],
    "classes": [],
    "directives": [],
    "components": [
        {
            "name": "AppComponent",
            "id": "component-AppComponent-9c48b1274322e74c3833dfaa97cb06886a31e3fb2d17e3307cba20a7b3c698b96e1f5660e0a543c1c4c7650bd055be02be9233999b4c542417846b3058768744",
            "file": "src/app/app.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-root",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./app.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "isSidebarOpen",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "title",
                    "defaultValue": "'iosense-design-system'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 16
                }
            ],
            "methodsClass": [
                {
                    "name": "toggleSidebar",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 19,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "RouterOutlet"
                },
                {
                    "name": "RouterLink"
                },
                {
                    "name": "RouterLinkActive"
                },
                {
                    "name": "MaterialInputComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { RouterOutlet, RouterLink, RouterLinkActive } from '@angular/router';\nimport { TypographyExamplesComponent } from './components/typography-examples/typography-examples.component';\nimport { TypographyDemoComponent } from './components/typography-demo/typography-demo.component';\nimport { MaterialInputComponent } from './components/material-input/material-input.component';\n\n\n@Component({\n  selector: 'app-root',\n  standalone: true,\n  imports: [RouterOutlet, RouterLink, RouterLinkActive, MaterialInputComponent],\n  templateUrl: './app.component.html',\n  styleUrl: './app.component.scss'\n})\nexport class AppComponent {\n  title = 'iosense-design-system';\n  isSidebarOpen = false;\n\n  toggleSidebar() {\n    this.isSidebarOpen = !this.isSidebarOpen;\n  }\n}\n",
            "styleUrl": "./app.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<!-- <div class=\"app-container\">\n  <button class=\"sidebar-toggle\" (click)=\"toggleSidebar()\">\n    <span class=\"hamburger\"></span>\n    <span class=\"hamburger\"></span>\n    <span class=\"hamburger\"></span>\n  </button>\n  \n  <nav class=\"sidebar\" [class.open]=\"isSidebarOpen\">\n    <ul>\n      <li><a routerLink=\"/typography\" routerLinkActive=\"active\" (click)=\"toggleSidebar()\">Typography</a></li>\n      <li><a routerLink=\"/borders\" routerLinkActive=\"active\" (click)=\"toggleSidebar()\">Borders</a></li>\n      <li><a routerLink=\"/elevation\" routerLinkActive=\"active\" (click)=\"toggleSidebar()\">Elevation</a></li>\n      <li><a routerLink=\"/spacing\" routerLinkActive=\"active\" (click)=\"toggleSidebar()\">Spacing</a></li>\n      <li><a routerLink=\"/colors\" routerLinkActive=\"active\" (click)=\"toggleSidebar()\">Colors</a></li>\n    </ul>\n  </nav>\n  \n  <div class=\"main-wrapper\">\n    <header class=\"app-header\">\n      <h1>Faclon Design System Testing</h1>\n    </header>\n    <main class=\"content\">\n      <router-outlet></router-outlet>\n    </main>\n  </div>\n</div> -->\n\n\n<app-material-input></app-material-input>"
        },
        {
            "name": "BordersDemoComponent",
            "id": "component-BordersDemoComponent-a9a25a333bc68dbf1d79d86cb59c076c55ec2f17f90a835bef0a20515e261aba91c51dce81532942d7e172a4d22f5962b0f03ca32e26eef512a7187290fa22cc",
            "file": "src/app/components/borders-demo/borders-demo.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-borders-demo",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./borders-demo.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "classCategories",
                    "defaultValue": "[\n    {\n      name: 'Border Width (Global)',\n      classes: [\n        'global-bw-none',\n        'global-bw-thinner',\n        'global-bw-thin',\n        'global-bw-thick',\n        'global-bw-thicker'\n      ]\n    },\n    {\n      name: 'Border Width (Top)',\n      classes: [\n        'global-bw-t-none',\n        'global-bw-t-thinner',\n        'global-bw-t-thin',\n        'global-bw-t-thick',\n        'global-bw-t-thicker'\n      ]\n    },\n    {\n      name: 'Border Width (Right)',\n      classes: [\n        'global-bw-r-none',\n        'global-bw-r-thinner',\n        'global-bw-r-thin',\n        'global-bw-r-thick',\n        'global-bw-r-thicker'\n      ]\n    },\n    {\n      name: 'Border Width (Bottom)',\n      classes: [\n        'global-bw-b-none',\n        'global-bw-b-thinner',\n        'global-bw-b-thin',\n        'global-bw-b-thick',\n        'global-bw-b-thicker'\n      ]\n    },\n    {\n      name: 'Border Width (Left)',\n      classes: [\n        'global-bw-l-none',\n        'global-bw-l-thinner',\n        'global-bw-l-thin',\n        'global-bw-l-thick',\n        'global-bw-l-thicker'\n      ]\n    },\n    {\n      name: 'Border Style',\n      classes: [\n        'global-bs-solid',\n        'global-bs-dashed',\n        'global-bs-dotted',\n        'global-bs-double',\n        'global-bs-none'\n      ]\n    },\n    {\n      name: 'Border Radius (Global)',\n      classes: [\n        'global-br-none',\n        'global-br-xsmall',\n        'global-br-small',\n        'global-br-medium',\n        'global-br-large',\n        'global-br-xlarge',\n        'global-br-2xlarge',\n        'global-br-max'\n      ]\n    },\n    {\n      name: 'Border Radius (Top Left)',\n      classes: [\n        'global-br-tl-none',\n        'global-br-tl-xsmall',\n        'global-br-tl-small',\n        'global-br-tl-medium',\n        'global-br-tl-large',\n        'global-br-tl-xlarge',\n        'global-br-tl-2xlarge',\n        'global-br-tl-max'\n      ]\n    },\n    {\n      name: 'Border Radius (Top Right)',\n      classes: [\n        'global-br-tr-none',\n        'global-br-tr-xsmall',\n        'global-br-tr-small',\n        'global-br-tr-medium',\n        'global-br-tr-large',\n        'global-br-tr-xlarge',\n        'global-br-tr-2xlarge',\n        'global-br-tr-max'\n      ]\n    },\n    {\n      name: 'Border Radius (Bottom Left)',\n      classes: [\n        'global-br-bl-none',\n        'global-br-bl-xsmall',\n        'global-br-bl-small',\n        'global-br-bl-medium',\n        'global-br-bl-large',\n        'global-br-bl-xlarge',\n        'global-br-bl-2xlarge',\n        'global-br-bl-max'\n      ]\n    },\n    {\n      name: 'Border Radius (Bottom Right)',\n      classes: [\n        'global-br-br-none',\n        'global-br-br-xsmall',\n        'global-br-br-small',\n        'global-br-br-medium',\n        'global-br-br-large',\n        'global-br-br-xlarge',\n        'global-br-br-2xlarge',\n        'global-br-br-max'\n      ]\n    },\n    {\n      name: 'Border Radius (Top)',\n      classes: [\n        'global-br-t-none',\n        'global-br-t-xsmall',\n        'global-br-t-small',\n        'global-br-t-medium',\n        'global-br-t-large',\n        'global-br-t-xlarge',\n        'global-br-t-2xlarge',\n        'global-br-t-max'\n      ]\n    },\n    {\n      name: 'Border Radius (Bottom)',\n      classes: [\n        'global-br-b-none',\n        'global-br-b-xsmall',\n        'global-br-b-small',\n        'global-br-b-medium',\n        'global-br-b-large',\n        'global-br-b-xlarge',\n        'global-br-b-2xlarge',\n        'global-br-b-max'\n      ]\n    },\n    {\n      name: 'Border Radius (Left)',\n      classes: [\n        'global-br-l-none',\n        'global-br-l-xsmall',\n        'global-br-l-small',\n        'global-br-l-medium',\n        'global-br-l-large',\n        'global-br-l-xlarge',\n        'global-br-l-2xlarge',\n        'global-br-l-max'\n      ]\n    },\n    {\n      name: 'Border Radius (Right)',\n      classes: [\n        'global-br-r-none',\n        'global-br-r-xsmall',\n        'global-br-r-small',\n        'global-br-r-medium',\n        'global-br-r-large',\n        'global-br-r-xlarge',\n        'global-br-r-2xlarge',\n        'global-br-r-max'\n      ]\n    }\n  ]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ClassCategory[]",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 30
                },
                {
                    "name": "customText",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 24
                },
                {
                    "name": "defaultText",
                    "defaultValue": "'Border Example'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 26
                },
                {
                    "name": "examples",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "BorderExample[]",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 25
                },
                {
                    "name": "manualClass",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 23
                },
                {
                    "name": "selectedCategory",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 27
                },
                {
                    "name": "selectedClass",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 28
                }
            ],
            "methodsClass": [
                {
                    "name": "addClass",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 230,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "getSelectedCategoryClasses",
                    "args": [],
                    "optional": false,
                    "returnType": "string[]",
                    "typeParameters": [],
                    "line": 210,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onCategoryChange",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 215,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onClassSelect",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 219,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "removeExample",
                    "args": [
                        {
                            "name": "index",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 241,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "index",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "FormsModule",
                    "type": "module"
                },
                {
                    "name": "CommonModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\nimport { Component } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\n\ninterface BorderExample {\n  className: string;\n  text: string;\n}\n\ninterface ClassCategory {\n  name: string;\n  classes: string[];\n}\n\n@Component({\n  selector: 'app-borders-demo',\n  standalone: true,\n  imports: [FormsModule, CommonModule],\n  templateUrl: './borders-demo.component.html',\n  styleUrl: './borders-demo.component.scss'\n})\nexport class BordersDemoComponent {\n  manualClass = '';\n  customText = '';\n  examples: BorderExample[] = [];\n  defaultText = 'Border Example';\n  selectedCategory = '';\n  selectedClass = '';\n  \n  classCategories: ClassCategory[] = [\n    {\n      name: 'Border Width (Global)',\n      classes: [\n        'global-bw-none',\n        'global-bw-thinner',\n        'global-bw-thin',\n        'global-bw-thick',\n        'global-bw-thicker'\n      ]\n    },\n    {\n      name: 'Border Width (Top)',\n      classes: [\n        'global-bw-t-none',\n        'global-bw-t-thinner',\n        'global-bw-t-thin',\n        'global-bw-t-thick',\n        'global-bw-t-thicker'\n      ]\n    },\n    {\n      name: 'Border Width (Right)',\n      classes: [\n        'global-bw-r-none',\n        'global-bw-r-thinner',\n        'global-bw-r-thin',\n        'global-bw-r-thick',\n        'global-bw-r-thicker'\n      ]\n    },\n    {\n      name: 'Border Width (Bottom)',\n      classes: [\n        'global-bw-b-none',\n        'global-bw-b-thinner',\n        'global-bw-b-thin',\n        'global-bw-b-thick',\n        'global-bw-b-thicker'\n      ]\n    },\n    {\n      name: 'Border Width (Left)',\n      classes: [\n        'global-bw-l-none',\n        'global-bw-l-thinner',\n        'global-bw-l-thin',\n        'global-bw-l-thick',\n        'global-bw-l-thicker'\n      ]\n    },\n    {\n      name: 'Border Style',\n      classes: [\n        'global-bs-solid',\n        'global-bs-dashed',\n        'global-bs-dotted',\n        'global-bs-double',\n        'global-bs-none'\n      ]\n    },\n    {\n      name: 'Border Radius (Global)',\n      classes: [\n        'global-br-none',\n        'global-br-xsmall',\n        'global-br-small',\n        'global-br-medium',\n        'global-br-large',\n        'global-br-xlarge',\n        'global-br-2xlarge',\n        'global-br-max'\n      ]\n    },\n    {\n      name: 'Border Radius (Top Left)',\n      classes: [\n        'global-br-tl-none',\n        'global-br-tl-xsmall',\n        'global-br-tl-small',\n        'global-br-tl-medium',\n        'global-br-tl-large',\n        'global-br-tl-xlarge',\n        'global-br-tl-2xlarge',\n        'global-br-tl-max'\n      ]\n    },\n    {\n      name: 'Border Radius (Top Right)',\n      classes: [\n        'global-br-tr-none',\n        'global-br-tr-xsmall',\n        'global-br-tr-small',\n        'global-br-tr-medium',\n        'global-br-tr-large',\n        'global-br-tr-xlarge',\n        'global-br-tr-2xlarge',\n        'global-br-tr-max'\n      ]\n    },\n    {\n      name: 'Border Radius (Bottom Left)',\n      classes: [\n        'global-br-bl-none',\n        'global-br-bl-xsmall',\n        'global-br-bl-small',\n        'global-br-bl-medium',\n        'global-br-bl-large',\n        'global-br-bl-xlarge',\n        'global-br-bl-2xlarge',\n        'global-br-bl-max'\n      ]\n    },\n    {\n      name: 'Border Radius (Bottom Right)',\n      classes: [\n        'global-br-br-none',\n        'global-br-br-xsmall',\n        'global-br-br-small',\n        'global-br-br-medium',\n        'global-br-br-large',\n        'global-br-br-xlarge',\n        'global-br-br-2xlarge',\n        'global-br-br-max'\n      ]\n    },\n    {\n      name: 'Border Radius (Top)',\n      classes: [\n        'global-br-t-none',\n        'global-br-t-xsmall',\n        'global-br-t-small',\n        'global-br-t-medium',\n        'global-br-t-large',\n        'global-br-t-xlarge',\n        'global-br-t-2xlarge',\n        'global-br-t-max'\n      ]\n    },\n    {\n      name: 'Border Radius (Bottom)',\n      classes: [\n        'global-br-b-none',\n        'global-br-b-xsmall',\n        'global-br-b-small',\n        'global-br-b-medium',\n        'global-br-b-large',\n        'global-br-b-xlarge',\n        'global-br-b-2xlarge',\n        'global-br-b-max'\n      ]\n    },\n    {\n      name: 'Border Radius (Left)',\n      classes: [\n        'global-br-l-none',\n        'global-br-l-xsmall',\n        'global-br-l-small',\n        'global-br-l-medium',\n        'global-br-l-large',\n        'global-br-l-xlarge',\n        'global-br-l-2xlarge',\n        'global-br-l-max'\n      ]\n    },\n    {\n      name: 'Border Radius (Right)',\n      classes: [\n        'global-br-r-none',\n        'global-br-r-xsmall',\n        'global-br-r-small',\n        'global-br-r-medium',\n        'global-br-r-large',\n        'global-br-r-xlarge',\n        'global-br-r-2xlarge',\n        'global-br-r-max'\n      ]\n    }\n  ];\n\n  getSelectedCategoryClasses(): string[] {\n    const category = this.classCategories.find(c => c.name === this.selectedCategory);\n    return category ? category.classes : [];\n  }\n\n  onCategoryChange() {\n    this.selectedClass = '';\n  }\n\n  onClassSelect() {\n    if (this.selectedClass) {\n      this.examples.unshift({\n        className: this.selectedClass,\n        text: this.customText || this.defaultText\n      });\n      this.selectedClass = '';\n      this.customText = '';\n    }\n  }\n\n  addClass() {\n    if (this.manualClass) {\n      this.examples.unshift({\n        className: this.manualClass,\n        text: this.customText || this.defaultText\n      });\n      this.manualClass = '';\n      this.customText = '';\n    }\n  }\n\n  removeExample(index: number) {\n    this.examples.splice(index, 1);\n  }\n}\n",
            "styleUrl": "./borders-demo.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<div class=\"borders-demo\">\n  <div class=\"input-section\">\n    <div class=\"manual-input\">\n      <h3>Test Border Classes</h3>\n      <div class=\"input-group\">\n        <select [(ngModel)]=\"selectedCategory\" (ngModelChange)=\"onCategoryChange()\">\n          <option value=\"\">Select Category</option>\n          <option *ngFor=\"let category of classCategories\" [value]=\"category.name\">\n            {{ category.name }}\n          </option>\n        </select>\n        <select [(ngModel)]=\"selectedClass\" [disabled]=\"!selectedCategory\">\n          <option value=\"\">Select Class</option>\n          <option *ngFor=\"let classItem of getSelectedCategoryClasses()\" [value]=\"classItem\">\n            {{ classItem }}\n          </option>\n        </select>\n        <input\n          type=\"text\"\n          [(ngModel)]=\"customText\"\n          placeholder=\"Enter custom text (optional)\"\n        />\n        <button (click)=\"onClassSelect()\" [disabled]=\"!selectedClass\">Add Class</button>\n      </div>\n      <div class=\"manual-class-input\">\n        <div class=\"input-group\">\n          <input\n            type=\"text\"\n            [(ngModel)]=\"manualClass\"\n            placeholder=\"Or enter class name manually\"\n            (keyup.enter)=\"addClass()\"\n          />\n          <button (click)=\"addClass()\" [disabled]=\"!manualClass\">Add Class</button>\n        </div>\n      </div>\n    </div>\n  </div>\n  \n  <div class=\"examples-section\" *ngIf=\"examples.length > 0\">\n    <h3>Examples</h3>\n    <div class=\"examples-list\">\n      <div class=\"example-item\" *ngFor=\"let example of examples; let i = index\">\n        <div class=\"example-header\">\n          <code>{{ example.className }}</code>\n          <button class=\"remove-btn\" (click)=\"removeExample(i)\">×</button>\n        </div>\n        <div class=\"border-example\" [class]=\"example.className\">{{ example.text }}</div>\n      </div>\n    </div>\n  </div>\n</div>"
        },
        {
            "name": "ColorsDemoComponent",
            "id": "component-ColorsDemoComponent-699de389b4acab20153c10e266d5a9c2e1b2da9d87d340e4ec3fed2410a00314cdee7a319cd0d292f0fefbf600b943705c6786f6ca8562d5f2215ea33b327115",
            "file": "src/app/components/colors-demo/colors-demo.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-colors-demo",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./colors-demo.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "applicationTypes",
                    "defaultValue": "[\n    { value: 'background', label: 'Background Color', disabled: false },\n    { value: 'color', label: 'Text Color', disabled: false },\n    { value: 'border', label: 'Border Color', disabled: false }\n  ]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 33
                },
                {
                    "name": "classCategories",
                    "defaultValue": "[\n    {\n      name: 'Base Red Colors',\n      classes: [\n        // Text color classes\n        'global-red-50', 'global-red-100', 'global-red-200', 'global-red-300', \n        'global-red-400', 'global-red-500', 'global-red-600', 'global-red-700', \n        'global-red-800', 'global-red-900', 'global-red-1000',\n        'global-red-a50', 'global-red-a100', 'global-red-a150', 'global-red-a200',\n        \n        // Background color classes\n        'global-red-bg-50', 'global-red-bg-100', 'global-red-bg-200', 'global-red-bg-300', \n        'global-red-bg-400', 'global-red-bg-500', 'global-red-bg-600', 'global-red-bg-700', \n        'global-red-bg-800', 'global-red-bg-900', 'global-red-bg-1000',\n        'global-red-bg-a50', 'global-red-bg-a100', 'global-red-bg-a150', 'global-red-bg-a200',\n        \n        // Border color classes\n        'global-red-border-50', 'global-red-border-100', 'global-red-border-200', 'global-red-border-300', \n        'global-red-border-400', 'global-red-border-500', 'global-red-border-600', 'global-red-border-700', \n        'global-red-border-800', 'global-red-border-900', 'global-red-border-1000',\n        'global-red-border-a50', 'global-red-border-a100', 'global-red-border-a150', 'global-red-border-a200'\n      ]\n    },\n    {\n      name: 'Base Yellow Colors',\n      classes: [\n        // Text color classes\n        'global-yellow-50', 'global-yellow-100', 'global-yellow-200', 'global-yellow-300', \n        'global-yellow-400', 'global-yellow-500', 'global-yellow-600', 'global-yellow-700', \n        'global-yellow-800', 'global-yellow-900', 'global-yellow-1000',\n        'global-yellow-a50', 'global-yellow-a100', 'global-yellow-a150', 'global-yellow-a200',\n        \n        // Background color classes\n        'global-yellow-bg-50', 'global-yellow-bg-100', 'global-yellow-bg-200', 'global-yellow-bg-300', \n        'global-yellow-bg-400', 'global-yellow-bg-500', 'global-yellow-bg-600', 'global-yellow-bg-700', \n        'global-yellow-bg-800', 'global-yellow-bg-900', 'global-yellow-bg-1000',\n        'global-yellow-bg-a50', 'global-yellow-bg-a100', 'global-yellow-bg-a150', 'global-yellow-bg-a200',\n        \n        // Border color classes\n        'global-yellow-border-50', 'global-yellow-border-100', 'global-yellow-border-200', 'global-yellow-border-300', \n        'global-yellow-border-400', 'global-yellow-border-500', 'global-yellow-border-600', 'global-yellow-border-700', \n        'global-yellow-border-800', 'global-yellow-border-900', 'global-yellow-border-1000',\n        'global-yellow-border-a50', 'global-yellow-border-a100', 'global-yellow-border-a150', 'global-yellow-border-a200'\n      ]\n    },\n    {\n      name: 'Base Aqua Green Colors',\n      classes: [\n        // Text color classes\n        'global-aqua-green-50', 'global-aqua-green-100', 'global-aqua-green-200', 'global-aqua-green-300', \n        'global-aqua-green-400', 'global-aqua-green-500', 'global-aqua-green-600', 'global-aqua-green-700', \n        'global-aqua-green-800', 'global-aqua-green-900', 'global-aqua-green-1000',\n        'global-aqua-green-a50', 'global-aqua-green-a100', 'global-aqua-green-a150', 'global-aqua-green-a200',\n        \n        // Background color classes\n        'global-aqua-green-bg-50', 'global-aqua-green-bg-100', 'global-aqua-green-bg-200', 'global-aqua-green-bg-300', \n        'global-aqua-green-bg-400', 'global-aqua-green-bg-500', 'global-aqua-green-bg-600', 'global-aqua-green-bg-700', \n        'global-aqua-green-bg-800', 'global-aqua-green-bg-900', 'global-aqua-green-bg-1000',\n        'global-aqua-green-bg-a50', 'global-aqua-green-bg-a100', 'global-aqua-green-bg-a150', 'global-aqua-green-bg-a200',\n        \n        // Border color classes\n        'global-aqua-green-border-50', 'global-aqua-green-border-100', 'global-aqua-green-border-200', 'global-aqua-green-border-300', \n        'global-aqua-green-border-400', 'global-aqua-green-border-500', 'global-aqua-green-border-600', 'global-aqua-green-border-700', \n        'global-aqua-green-border-800', 'global-aqua-green-border-900', 'global-aqua-green-border-1000',\n        'global-aqua-green-border-a50', 'global-aqua-green-border-a100', 'global-aqua-green-border-a150', 'global-aqua-green-border-a200'\n      ]\n    },\n    {\n      name: 'Base Green Colors',\n      classes: [\n        // Text color classes\n        'global-green-50', 'global-green-100', 'global-green-200', 'global-green-300', \n        'global-green-400', 'global-green-500', 'global-green-600', 'global-green-700', \n        'global-green-800', 'global-green-900', 'global-green-1000',\n        'global-green-a50', 'global-green-a100', 'global-green-a150', 'global-green-a200',\n        \n        // Background color classes\n        'global-green-bg-50', 'global-green-bg-100', 'global-green-bg-200', 'global-green-bg-300', \n        'global-green-bg-400', 'global-green-bg-500', 'global-green-bg-600', 'global-green-bg-700', \n        'global-green-bg-800', 'global-green-bg-900', 'global-green-bg-1000',\n        'global-green-bg-a50', 'global-green-bg-a100', 'global-green-bg-a150', 'global-green-bg-a200',\n        \n        // Border color classes\n        'global-green-border-50', 'global-green-border-100', 'global-green-border-200', 'global-green-border-300', \n        'global-green-border-400', 'global-green-border-500', 'global-green-border-600', 'global-green-border-700', \n        'global-green-border-800', 'global-green-border-900', 'global-green-border-1000',\n        'global-green-border-a50', 'global-green-border-a100', 'global-green-border-a150', 'global-green-border-a200'\n      ]\n    },\n    {\n      name: 'Base Sky Blue Colors',\n      classes: [\n        // Text color classes\n        'global-sky-blue-50', 'global-sky-blue-100', 'global-sky-blue-200', 'global-sky-blue-300', \n        'global-sky-blue-400', 'global-sky-blue-500', 'global-sky-blue-600', 'global-sky-blue-700', \n        'global-sky-blue-800', 'global-sky-blue-900', 'global-sky-blue-1000',\n        'global-sky-blue-a50', 'global-sky-blue-a100', 'global-sky-blue-a150', 'global-sky-blue-a200',\n        \n        // Background color classes\n        'global-sky-blue-bg-50', 'global-sky-blue-bg-100', 'global-sky-blue-bg-200', 'global-sky-blue-bg-300', \n        'global-sky-blue-bg-400', 'global-sky-blue-bg-500', 'global-sky-blue-bg-600', 'global-sky-blue-bg-700', \n        'global-sky-blue-bg-800', 'global-sky-blue-bg-900', 'global-sky-blue-bg-1000',\n        'global-sky-blue-bg-a50', 'global-sky-blue-bg-a100', 'global-sky-blue-bg-a150', 'global-sky-blue-bg-a200',\n        \n        // Border color classes\n        'global-sky-blue-border-50', 'global-sky-blue-border-100', 'global-sky-blue-border-200', 'global-sky-blue-border-300', \n        'global-sky-blue-border-400', 'global-sky-blue-border-500', 'global-sky-blue-border-600', 'global-sky-blue-border-700', \n        'global-sky-blue-border-800', 'global-sky-blue-border-900', 'global-sky-blue-border-1000',\n        'global-sky-blue-border-a50', 'global-sky-blue-border-a100', 'global-sky-blue-border-a150', 'global-sky-blue-border-a200'\n      ]\n    },\n    {\n      name: 'Base Blue Colors',\n      classes: [\n        // Text color classes\n        'global-blue-50', 'global-blue-100', 'global-blue-200', 'global-blue-300', \n        'global-blue-400', 'global-blue-500', 'global-blue-600', 'global-blue-700', \n        'global-blue-800', 'global-blue-900', 'global-blue-1000',\n        'global-blue-a50', 'global-blue-a100', 'global-blue-a150', 'global-blue-a200',\n        \n        // Background color classes\n        'global-blue-bg-50', 'global-blue-bg-100', 'global-blue-bg-200', 'global-blue-bg-300', \n        'global-blue-bg-400', 'global-blue-bg-500', 'global-blue-bg-600', 'global-blue-bg-700', \n        'global-blue-bg-800', 'global-blue-bg-900', 'global-blue-bg-1000',\n        'global-blue-bg-a50', 'global-blue-bg-a100', 'global-blue-bg-a150', 'global-blue-bg-a200',\n        \n        // Border color classes\n        'global-blue-border-50', 'global-blue-border-100', 'global-blue-border-200', 'global-blue-border-300', \n        'global-blue-border-400', 'global-blue-border-500', 'global-blue-border-600', 'global-blue-border-700', \n        'global-blue-border-800', 'global-blue-border-900', 'global-blue-border-1000',\n        'global-blue-border-a50', 'global-blue-border-a100', 'global-blue-border-a150', 'global-blue-border-a200'\n      ]\n    },\n    {\n      name: 'Base Pink Colors',\n      classes: [\n        // Text color classes\n        'global-pink-50', 'global-pink-100', 'global-pink-200', 'global-pink-300', \n        'global-pink-400', 'global-pink-500', 'global-pink-600', 'global-pink-700', \n        'global-pink-800', 'global-pink-900', 'global-pink-1000',\n        'global-pink-a50', 'global-pink-a100', 'global-pink-a150', 'global-pink-a200',\n        \n        // Background color classes\n        'global-pink-bg-50', 'global-pink-bg-100', 'global-pink-bg-200', 'global-pink-bg-300', \n        'global-pink-bg-400', 'global-pink-bg-500', 'global-pink-bg-600', 'global-pink-bg-700', \n        'global-pink-bg-800', 'global-pink-bg-900', 'global-pink-bg-1000',\n        'global-pink-bg-a50', 'global-pink-bg-a100', 'global-pink-bg-a150', 'global-pink-bg-a200',\n        \n        // Border color classes\n        'global-pink-border-50', 'global-pink-border-100', 'global-pink-border-200', 'global-pink-border-300', \n        'global-pink-border-400', 'global-pink-border-500', 'global-pink-border-600', 'global-pink-border-700', \n        'global-pink-border-800', 'global-pink-border-900', 'global-pink-border-1000',\n        'global-pink-border-a50', 'global-pink-border-a100', 'global-pink-border-a150', 'global-pink-border-a200'\n      ]\n    },\n    {\n      name: 'Base Purple Colors',\n      classes: [\n        // Text color classes\n        'global-purple-50', 'global-purple-100', 'global-purple-200', 'global-purple-300', \n        'global-purple-400', 'global-purple-500', 'global-purple-600', 'global-purple-700', \n        'global-purple-800', 'global-purple-900', 'global-purple-1000',\n        'global-purple-a50', 'global-purple-a100', 'global-purple-a150', 'global-purple-a200',\n        \n        // Background color classes\n        'global-purple-bg-50', 'global-purple-bg-100', 'global-purple-bg-200', 'global-purple-bg-300', \n        'global-purple-bg-400', 'global-purple-bg-500', 'global-purple-bg-600', 'global-purple-bg-700', \n        'global-purple-bg-800', 'global-purple-bg-900', 'global-purple-bg-1000',\n        'global-purple-bg-a50', 'global-purple-bg-a100', 'global-purple-bg-a150', 'global-purple-bg-a200',\n        \n        // Border color classes\n        'global-purple-border-50', 'global-purple-border-100', 'global-purple-border-200', 'global-purple-border-300', \n        'global-purple-border-400', 'global-purple-border-500', 'global-purple-border-600', 'global-purple-border-700', \n        'global-purple-border-800', 'global-purple-border-900', 'global-purple-border-1000',\n        'global-purple-border-a50', 'global-purple-border-a100', 'global-purple-border-a150', 'global-purple-border-a200'\n      ]\n    },\n    {\n      name: 'Base Charcoal Blue Colors',\n      classes: [\n        // Text color classes\n        'global-charcoal-blue-50', 'global-charcoal-blue-100', 'global-charcoal-blue-200', 'global-charcoal-blue-300', \n        'global-charcoal-blue-400', 'global-charcoal-blue-500', 'global-charcoal-blue-600', 'global-charcoal-blue-700', \n        'global-charcoal-blue-800', 'global-charcoal-blue-900', 'global-charcoal-blue-1000',\n        'global-charcoal-blue-a50', 'global-charcoal-blue-a100', 'global-charcoal-blue-a150', 'global-charcoal-blue-a200',\n        \n        // Background color classes\n        'global-charcoal-blue-bg-50', 'global-charcoal-blue-bg-100', 'global-charcoal-blue-bg-200', 'global-charcoal-blue-bg-300', \n        'global-charcoal-blue-bg-400', 'global-charcoal-blue-bg-500', 'global-charcoal-blue-bg-600', 'global-charcoal-blue-bg-700', \n        'global-charcoal-blue-bg-800', 'global-charcoal-blue-bg-900', 'global-charcoal-blue-bg-1000',\n        'global-charcoal-blue-bg-a50', 'global-charcoal-blue-bg-a100', 'global-charcoal-blue-bg-a150', 'global-charcoal-blue-bg-a200',\n        \n        // Border color classes\n        'global-charcoal-blue-border-50', 'global-charcoal-blue-border-100', 'global-charcoal-blue-border-200', 'global-charcoal-blue-border-300', \n        'global-charcoal-blue-border-400', 'global-charcoal-blue-border-500', 'global-charcoal-blue-border-600', 'global-charcoal-blue-border-700', \n        'global-charcoal-blue-border-800', 'global-charcoal-blue-border-900', 'global-charcoal-blue-border-1000',\n        'global-charcoal-blue-border-a50', 'global-charcoal-blue-border-a100', 'global-charcoal-blue-border-a150', 'global-charcoal-blue-border-a200'\n      ]\n    },\n    {\n      name: 'Base Neutral Colors',\n      classes: [\n        // Text color classes\n        'global-neutral-10', 'global-neutral-20', 'global-neutral-30', 'global-neutral-40', \n        'global-neutral-50', 'global-neutral-100', 'global-neutral-200', 'global-neutral-300', \n        'global-neutral-400', 'global-neutral-500', 'global-neutral-600', 'global-neutral-700', \n        'global-neutral-800', 'global-neutral-900', 'global-neutral-1000',\n        \n        // Background color classes\n        'global-neutral-bg-10', 'global-neutral-bg-20', 'global-neutral-bg-30', 'global-neutral-bg-40', \n        'global-neutral-bg-50', 'global-neutral-bg-100', 'global-neutral-bg-200', 'global-neutral-bg-300', \n        'global-neutral-bg-400', 'global-neutral-bg-500', 'global-neutral-bg-600', 'global-neutral-bg-700', \n        'global-neutral-bg-800', 'global-neutral-bg-900', 'global-neutral-bg-1000',\n        \n        // Border color classes\n        'global-neutral-border-10', 'global-neutral-border-20', 'global-neutral-border-30', 'global-neutral-border-40', \n        'global-neutral-border-50', 'global-neutral-border-100', 'global-neutral-border-200', 'global-neutral-border-300', \n        'global-neutral-border-400', 'global-neutral-border-500', 'global-neutral-border-600', 'global-neutral-border-700', \n        'global-neutral-border-800', 'global-neutral-border-900', 'global-neutral-border-1000'\n      ]\n    },\n    {\n      name: 'Base Black and White Colors',\n      classes: [\n        // Text color classes\n        'global-black', 'global-white',\n        \n        // Background color classes\n        'global-bg-black', 'global-bg-white',\n        \n        // Border color classes\n        'global-border-black', 'global-border-white'\n      ]\n    },\n    {\n      name: 'Surface Colors',\n      classes: [\n        '--surface-bright', '--surface', '--surface-dim',\n        '--surface-container-lowest', '--surface-container-low', '--surface-container',\n        '--surface-container-high', '--surface-container-highest'\n      ]\n    },\n    {\n      name: 'On Surface Colors',\n      classes: [\n        '--on-surface-lowest', '--on-surface-low', '--on-surface'\n      ]\n    },\n    {\n      name: 'Outline Colors',\n      classes: [\n        '--outline-bright', '--outline', '--outline-dim'\n      ]\n    },\n    {\n      name: 'Primary Colors',\n      classes: [\n        '--primary', '--on-primary', '--primary-container', '--on-primary-container'\n      ]\n    },\n    {\n      name: 'Secondary Colors',\n      classes: [\n        '--secondary', '--on-secondary', '--secondary-container', '--on-secondary-container'\n      ]\n    },\n    {\n      name: 'Error Colors',\n      classes: [\n        '--error', '--on-error', '--error-container', '--on-error-container'\n      ]\n    },\n    {\n      name: 'Warning Colors',\n      classes: [\n        '--warning', '--on-warning', '--warning-container', '--on-warning-container'\n      ]\n    },\n    {\n      name: 'Success Colors',\n      classes: [\n        '--success', '--on-success', '--success-container', '--on-success-container'\n      ]\n    },\n    {\n      name: 'Extend 1 Colors',\n      classes: [\n        '--extend-1', '--on-extend-1', '--extend-1-container', '--on-extend-1-container'\n      ]\n    },\n    {\n      name: 'Extend 2 Colors',\n      classes: [\n        '--extend-2', '--on-extend-2', '--extend-2-container', '--on-extend-2-container'\n      ]\n    },\n    {\n      name: 'Extend 3 Colors',\n      classes: [\n        '--extend-3', '--on-extend-3', '--extend-3-container', '--on-extend-3-container'\n      ]\n    }\n  ]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ColorCategory[]",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 41
                },
                {
                    "name": "customText",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 25
                },
                {
                    "name": "defaultText",
                    "defaultValue": "'Sample Text'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 27
                },
                {
                    "name": "examples",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ColorExample[]",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 26
                },
                {
                    "name": "isApplicationTypeDisabled",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 39
                },
                {
                    "name": "manualClass",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 24
                },
                {
                    "name": "selectedApplicationType",
                    "defaultValue": "'background'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "\"background\" | \"color\" | \"border\"",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 31
                },
                {
                    "name": "selectedCategory",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 29
                },
                {
                    "name": "selectedClass",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 30
                }
            ],
            "methodsClass": [
                {
                    "name": "addClass",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 367,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "getExampleClasses",
                    "args": [
                        {
                            "name": "example",
                            "type": "ColorExample",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 406,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "example",
                            "type": "ColorExample",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getExampleStyle",
                    "args": [
                        {
                            "name": "example",
                            "type": "ColorExample",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "literal type",
                    "typeParameters": [],
                    "line": 384,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "example",
                            "type": "ColorExample",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getSelectedCategoryClasses",
                    "args": [],
                    "optional": false,
                    "returnType": "string[]",
                    "typeParameters": [],
                    "line": 345,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onCategoryChange",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 350,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onClassSelect",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 354,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "removeExample",
                    "args": [
                        {
                            "name": "index",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 380,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "index",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "FormsModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\ninterface ColorExample {\n  className: string;\n  text: string;\n  applicationType: 'background' | 'color' | 'border';\n}\n\ninterface ColorCategory {\n  name: string;\n  classes: string[];\n}\n\n@Component({\n  selector: 'app-colors-demo',\n  standalone: true,\n  imports: [CommonModule, FormsModule],\n  templateUrl: './colors-demo.component.html',\n  styleUrl: './colors-demo.component.scss'\n})\nexport class ColorsDemoComponent {\n  manualClass = '';\n  customText = '';\n  examples: ColorExample[] = [];\n  defaultText = 'Sample Text';\n\n  selectedCategory = '';\n  selectedClass = '';\n  selectedApplicationType: 'background' | 'color' | 'border' = 'background';\n\n  applicationTypes = [\n    { value: 'background', label: 'Background Color', disabled: false },\n    { value: 'color', label: 'Text Color', disabled: false },\n    { value: 'border', label: 'Border Color', disabled: false }\n  ];\n\n  isApplicationTypeDisabled = false;\n\n  classCategories: ColorCategory[] = [\n    {\n      name: 'Base Red Colors',\n      classes: [\n        // Text color classes\n        'global-red-50', 'global-red-100', 'global-red-200', 'global-red-300', \n        'global-red-400', 'global-red-500', 'global-red-600', 'global-red-700', \n        'global-red-800', 'global-red-900', 'global-red-1000',\n        'global-red-a50', 'global-red-a100', 'global-red-a150', 'global-red-a200',\n        \n        // Background color classes\n        'global-red-bg-50', 'global-red-bg-100', 'global-red-bg-200', 'global-red-bg-300', \n        'global-red-bg-400', 'global-red-bg-500', 'global-red-bg-600', 'global-red-bg-700', \n        'global-red-bg-800', 'global-red-bg-900', 'global-red-bg-1000',\n        'global-red-bg-a50', 'global-red-bg-a100', 'global-red-bg-a150', 'global-red-bg-a200',\n        \n        // Border color classes\n        'global-red-border-50', 'global-red-border-100', 'global-red-border-200', 'global-red-border-300', \n        'global-red-border-400', 'global-red-border-500', 'global-red-border-600', 'global-red-border-700', \n        'global-red-border-800', 'global-red-border-900', 'global-red-border-1000',\n        'global-red-border-a50', 'global-red-border-a100', 'global-red-border-a150', 'global-red-border-a200'\n      ]\n    },\n    {\n      name: 'Base Yellow Colors',\n      classes: [\n        // Text color classes\n        'global-yellow-50', 'global-yellow-100', 'global-yellow-200', 'global-yellow-300', \n        'global-yellow-400', 'global-yellow-500', 'global-yellow-600', 'global-yellow-700', \n        'global-yellow-800', 'global-yellow-900', 'global-yellow-1000',\n        'global-yellow-a50', 'global-yellow-a100', 'global-yellow-a150', 'global-yellow-a200',\n        \n        // Background color classes\n        'global-yellow-bg-50', 'global-yellow-bg-100', 'global-yellow-bg-200', 'global-yellow-bg-300', \n        'global-yellow-bg-400', 'global-yellow-bg-500', 'global-yellow-bg-600', 'global-yellow-bg-700', \n        'global-yellow-bg-800', 'global-yellow-bg-900', 'global-yellow-bg-1000',\n        'global-yellow-bg-a50', 'global-yellow-bg-a100', 'global-yellow-bg-a150', 'global-yellow-bg-a200',\n        \n        // Border color classes\n        'global-yellow-border-50', 'global-yellow-border-100', 'global-yellow-border-200', 'global-yellow-border-300', \n        'global-yellow-border-400', 'global-yellow-border-500', 'global-yellow-border-600', 'global-yellow-border-700', \n        'global-yellow-border-800', 'global-yellow-border-900', 'global-yellow-border-1000',\n        'global-yellow-border-a50', 'global-yellow-border-a100', 'global-yellow-border-a150', 'global-yellow-border-a200'\n      ]\n    },\n    {\n      name: 'Base Aqua Green Colors',\n      classes: [\n        // Text color classes\n        'global-aqua-green-50', 'global-aqua-green-100', 'global-aqua-green-200', 'global-aqua-green-300', \n        'global-aqua-green-400', 'global-aqua-green-500', 'global-aqua-green-600', 'global-aqua-green-700', \n        'global-aqua-green-800', 'global-aqua-green-900', 'global-aqua-green-1000',\n        'global-aqua-green-a50', 'global-aqua-green-a100', 'global-aqua-green-a150', 'global-aqua-green-a200',\n        \n        // Background color classes\n        'global-aqua-green-bg-50', 'global-aqua-green-bg-100', 'global-aqua-green-bg-200', 'global-aqua-green-bg-300', \n        'global-aqua-green-bg-400', 'global-aqua-green-bg-500', 'global-aqua-green-bg-600', 'global-aqua-green-bg-700', \n        'global-aqua-green-bg-800', 'global-aqua-green-bg-900', 'global-aqua-green-bg-1000',\n        'global-aqua-green-bg-a50', 'global-aqua-green-bg-a100', 'global-aqua-green-bg-a150', 'global-aqua-green-bg-a200',\n        \n        // Border color classes\n        'global-aqua-green-border-50', 'global-aqua-green-border-100', 'global-aqua-green-border-200', 'global-aqua-green-border-300', \n        'global-aqua-green-border-400', 'global-aqua-green-border-500', 'global-aqua-green-border-600', 'global-aqua-green-border-700', \n        'global-aqua-green-border-800', 'global-aqua-green-border-900', 'global-aqua-green-border-1000',\n        'global-aqua-green-border-a50', 'global-aqua-green-border-a100', 'global-aqua-green-border-a150', 'global-aqua-green-border-a200'\n      ]\n    },\n    {\n      name: 'Base Green Colors',\n      classes: [\n        // Text color classes\n        'global-green-50', 'global-green-100', 'global-green-200', 'global-green-300', \n        'global-green-400', 'global-green-500', 'global-green-600', 'global-green-700', \n        'global-green-800', 'global-green-900', 'global-green-1000',\n        'global-green-a50', 'global-green-a100', 'global-green-a150', 'global-green-a200',\n        \n        // Background color classes\n        'global-green-bg-50', 'global-green-bg-100', 'global-green-bg-200', 'global-green-bg-300', \n        'global-green-bg-400', 'global-green-bg-500', 'global-green-bg-600', 'global-green-bg-700', \n        'global-green-bg-800', 'global-green-bg-900', 'global-green-bg-1000',\n        'global-green-bg-a50', 'global-green-bg-a100', 'global-green-bg-a150', 'global-green-bg-a200',\n        \n        // Border color classes\n        'global-green-border-50', 'global-green-border-100', 'global-green-border-200', 'global-green-border-300', \n        'global-green-border-400', 'global-green-border-500', 'global-green-border-600', 'global-green-border-700', \n        'global-green-border-800', 'global-green-border-900', 'global-green-border-1000',\n        'global-green-border-a50', 'global-green-border-a100', 'global-green-border-a150', 'global-green-border-a200'\n      ]\n    },\n    {\n      name: 'Base Sky Blue Colors',\n      classes: [\n        // Text color classes\n        'global-sky-blue-50', 'global-sky-blue-100', 'global-sky-blue-200', 'global-sky-blue-300', \n        'global-sky-blue-400', 'global-sky-blue-500', 'global-sky-blue-600', 'global-sky-blue-700', \n        'global-sky-blue-800', 'global-sky-blue-900', 'global-sky-blue-1000',\n        'global-sky-blue-a50', 'global-sky-blue-a100', 'global-sky-blue-a150', 'global-sky-blue-a200',\n        \n        // Background color classes\n        'global-sky-blue-bg-50', 'global-sky-blue-bg-100', 'global-sky-blue-bg-200', 'global-sky-blue-bg-300', \n        'global-sky-blue-bg-400', 'global-sky-blue-bg-500', 'global-sky-blue-bg-600', 'global-sky-blue-bg-700', \n        'global-sky-blue-bg-800', 'global-sky-blue-bg-900', 'global-sky-blue-bg-1000',\n        'global-sky-blue-bg-a50', 'global-sky-blue-bg-a100', 'global-sky-blue-bg-a150', 'global-sky-blue-bg-a200',\n        \n        // Border color classes\n        'global-sky-blue-border-50', 'global-sky-blue-border-100', 'global-sky-blue-border-200', 'global-sky-blue-border-300', \n        'global-sky-blue-border-400', 'global-sky-blue-border-500', 'global-sky-blue-border-600', 'global-sky-blue-border-700', \n        'global-sky-blue-border-800', 'global-sky-blue-border-900', 'global-sky-blue-border-1000',\n        'global-sky-blue-border-a50', 'global-sky-blue-border-a100', 'global-sky-blue-border-a150', 'global-sky-blue-border-a200'\n      ]\n    },\n    {\n      name: 'Base Blue Colors',\n      classes: [\n        // Text color classes\n        'global-blue-50', 'global-blue-100', 'global-blue-200', 'global-blue-300', \n        'global-blue-400', 'global-blue-500', 'global-blue-600', 'global-blue-700', \n        'global-blue-800', 'global-blue-900', 'global-blue-1000',\n        'global-blue-a50', 'global-blue-a100', 'global-blue-a150', 'global-blue-a200',\n        \n        // Background color classes\n        'global-blue-bg-50', 'global-blue-bg-100', 'global-blue-bg-200', 'global-blue-bg-300', \n        'global-blue-bg-400', 'global-blue-bg-500', 'global-blue-bg-600', 'global-blue-bg-700', \n        'global-blue-bg-800', 'global-blue-bg-900', 'global-blue-bg-1000',\n        'global-blue-bg-a50', 'global-blue-bg-a100', 'global-blue-bg-a150', 'global-blue-bg-a200',\n        \n        // Border color classes\n        'global-blue-border-50', 'global-blue-border-100', 'global-blue-border-200', 'global-blue-border-300', \n        'global-blue-border-400', 'global-blue-border-500', 'global-blue-border-600', 'global-blue-border-700', \n        'global-blue-border-800', 'global-blue-border-900', 'global-blue-border-1000',\n        'global-blue-border-a50', 'global-blue-border-a100', 'global-blue-border-a150', 'global-blue-border-a200'\n      ]\n    },\n    {\n      name: 'Base Pink Colors',\n      classes: [\n        // Text color classes\n        'global-pink-50', 'global-pink-100', 'global-pink-200', 'global-pink-300', \n        'global-pink-400', 'global-pink-500', 'global-pink-600', 'global-pink-700', \n        'global-pink-800', 'global-pink-900', 'global-pink-1000',\n        'global-pink-a50', 'global-pink-a100', 'global-pink-a150', 'global-pink-a200',\n        \n        // Background color classes\n        'global-pink-bg-50', 'global-pink-bg-100', 'global-pink-bg-200', 'global-pink-bg-300', \n        'global-pink-bg-400', 'global-pink-bg-500', 'global-pink-bg-600', 'global-pink-bg-700', \n        'global-pink-bg-800', 'global-pink-bg-900', 'global-pink-bg-1000',\n        'global-pink-bg-a50', 'global-pink-bg-a100', 'global-pink-bg-a150', 'global-pink-bg-a200',\n        \n        // Border color classes\n        'global-pink-border-50', 'global-pink-border-100', 'global-pink-border-200', 'global-pink-border-300', \n        'global-pink-border-400', 'global-pink-border-500', 'global-pink-border-600', 'global-pink-border-700', \n        'global-pink-border-800', 'global-pink-border-900', 'global-pink-border-1000',\n        'global-pink-border-a50', 'global-pink-border-a100', 'global-pink-border-a150', 'global-pink-border-a200'\n      ]\n    },\n    {\n      name: 'Base Purple Colors',\n      classes: [\n        // Text color classes\n        'global-purple-50', 'global-purple-100', 'global-purple-200', 'global-purple-300', \n        'global-purple-400', 'global-purple-500', 'global-purple-600', 'global-purple-700', \n        'global-purple-800', 'global-purple-900', 'global-purple-1000',\n        'global-purple-a50', 'global-purple-a100', 'global-purple-a150', 'global-purple-a200',\n        \n        // Background color classes\n        'global-purple-bg-50', 'global-purple-bg-100', 'global-purple-bg-200', 'global-purple-bg-300', \n        'global-purple-bg-400', 'global-purple-bg-500', 'global-purple-bg-600', 'global-purple-bg-700', \n        'global-purple-bg-800', 'global-purple-bg-900', 'global-purple-bg-1000',\n        'global-purple-bg-a50', 'global-purple-bg-a100', 'global-purple-bg-a150', 'global-purple-bg-a200',\n        \n        // Border color classes\n        'global-purple-border-50', 'global-purple-border-100', 'global-purple-border-200', 'global-purple-border-300', \n        'global-purple-border-400', 'global-purple-border-500', 'global-purple-border-600', 'global-purple-border-700', \n        'global-purple-border-800', 'global-purple-border-900', 'global-purple-border-1000',\n        'global-purple-border-a50', 'global-purple-border-a100', 'global-purple-border-a150', 'global-purple-border-a200'\n      ]\n    },\n    {\n      name: 'Base Charcoal Blue Colors',\n      classes: [\n        // Text color classes\n        'global-charcoal-blue-50', 'global-charcoal-blue-100', 'global-charcoal-blue-200', 'global-charcoal-blue-300', \n        'global-charcoal-blue-400', 'global-charcoal-blue-500', 'global-charcoal-blue-600', 'global-charcoal-blue-700', \n        'global-charcoal-blue-800', 'global-charcoal-blue-900', 'global-charcoal-blue-1000',\n        'global-charcoal-blue-a50', 'global-charcoal-blue-a100', 'global-charcoal-blue-a150', 'global-charcoal-blue-a200',\n        \n        // Background color classes\n        'global-charcoal-blue-bg-50', 'global-charcoal-blue-bg-100', 'global-charcoal-blue-bg-200', 'global-charcoal-blue-bg-300', \n        'global-charcoal-blue-bg-400', 'global-charcoal-blue-bg-500', 'global-charcoal-blue-bg-600', 'global-charcoal-blue-bg-700', \n        'global-charcoal-blue-bg-800', 'global-charcoal-blue-bg-900', 'global-charcoal-blue-bg-1000',\n        'global-charcoal-blue-bg-a50', 'global-charcoal-blue-bg-a100', 'global-charcoal-blue-bg-a150', 'global-charcoal-blue-bg-a200',\n        \n        // Border color classes\n        'global-charcoal-blue-border-50', 'global-charcoal-blue-border-100', 'global-charcoal-blue-border-200', 'global-charcoal-blue-border-300', \n        'global-charcoal-blue-border-400', 'global-charcoal-blue-border-500', 'global-charcoal-blue-border-600', 'global-charcoal-blue-border-700', \n        'global-charcoal-blue-border-800', 'global-charcoal-blue-border-900', 'global-charcoal-blue-border-1000',\n        'global-charcoal-blue-border-a50', 'global-charcoal-blue-border-a100', 'global-charcoal-blue-border-a150', 'global-charcoal-blue-border-a200'\n      ]\n    },\n    {\n      name: 'Base Neutral Colors',\n      classes: [\n        // Text color classes\n        'global-neutral-10', 'global-neutral-20', 'global-neutral-30', 'global-neutral-40', \n        'global-neutral-50', 'global-neutral-100', 'global-neutral-200', 'global-neutral-300', \n        'global-neutral-400', 'global-neutral-500', 'global-neutral-600', 'global-neutral-700', \n        'global-neutral-800', 'global-neutral-900', 'global-neutral-1000',\n        \n        // Background color classes\n        'global-neutral-bg-10', 'global-neutral-bg-20', 'global-neutral-bg-30', 'global-neutral-bg-40', \n        'global-neutral-bg-50', 'global-neutral-bg-100', 'global-neutral-bg-200', 'global-neutral-bg-300', \n        'global-neutral-bg-400', 'global-neutral-bg-500', 'global-neutral-bg-600', 'global-neutral-bg-700', \n        'global-neutral-bg-800', 'global-neutral-bg-900', 'global-neutral-bg-1000',\n        \n        // Border color classes\n        'global-neutral-border-10', 'global-neutral-border-20', 'global-neutral-border-30', 'global-neutral-border-40', \n        'global-neutral-border-50', 'global-neutral-border-100', 'global-neutral-border-200', 'global-neutral-border-300', \n        'global-neutral-border-400', 'global-neutral-border-500', 'global-neutral-border-600', 'global-neutral-border-700', \n        'global-neutral-border-800', 'global-neutral-border-900', 'global-neutral-border-1000'\n      ]\n    },\n    {\n      name: 'Base Black and White Colors',\n      classes: [\n        // Text color classes\n        'global-black', 'global-white',\n        \n        // Background color classes\n        'global-bg-black', 'global-bg-white',\n        \n        // Border color classes\n        'global-border-black', 'global-border-white'\n      ]\n    },\n    {\n      name: 'Surface Colors',\n      classes: [\n        '--surface-bright', '--surface', '--surface-dim',\n        '--surface-container-lowest', '--surface-container-low', '--surface-container',\n        '--surface-container-high', '--surface-container-highest'\n      ]\n    },\n    {\n      name: 'On Surface Colors',\n      classes: [\n        '--on-surface-lowest', '--on-surface-low', '--on-surface'\n      ]\n    },\n    {\n      name: 'Outline Colors',\n      classes: [\n        '--outline-bright', '--outline', '--outline-dim'\n      ]\n    },\n    {\n      name: 'Primary Colors',\n      classes: [\n        '--primary', '--on-primary', '--primary-container', '--on-primary-container'\n      ]\n    },\n    {\n      name: 'Secondary Colors',\n      classes: [\n        '--secondary', '--on-secondary', '--secondary-container', '--on-secondary-container'\n      ]\n    },\n    {\n      name: 'Error Colors',\n      classes: [\n        '--error', '--on-error', '--error-container', '--on-error-container'\n      ]\n    },\n    {\n      name: 'Warning Colors',\n      classes: [\n        '--warning', '--on-warning', '--warning-container', '--on-warning-container'\n      ]\n    },\n    {\n      name: 'Success Colors',\n      classes: [\n        '--success', '--on-success', '--success-container', '--on-success-container'\n      ]\n    },\n    {\n      name: 'Extend 1 Colors',\n      classes: [\n        '--extend-1', '--on-extend-1', '--extend-1-container', '--on-extend-1-container'\n      ]\n    },\n    {\n      name: 'Extend 2 Colors',\n      classes: [\n        '--extend-2', '--on-extend-2', '--extend-2-container', '--on-extend-2-container'\n      ]\n    },\n    {\n      name: 'Extend 3 Colors',\n      classes: [\n        '--extend-3', '--on-extend-3', '--extend-3-container', '--on-extend-3-container'\n      ]\n    }\n  ];\n\n  getSelectedCategoryClasses(): string[] {\n    const category = this.classCategories.find(cat => cat.name === this.selectedCategory);\n    return category ? category.classes : [];\n  }\n\n  onCategoryChange() {\n    this.selectedClass = '';\n  }\n\n  onClassSelect() {\n    if (this.selectedClass) {\n      const category = this.classCategories.find(cat => cat.classes.includes(this.selectedClass));\n      this.examples.unshift({\n        className: this.selectedClass,\n        text: this.customText || this.defaultText,\n        applicationType: this.selectedApplicationType\n      });\n      this.selectedClass = '';\n      this.customText = '';\n    }\n  }\n\n  addClass() {\n    if (this.manualClass) {\n      const category = this.classCategories.find(cat => cat.classes.includes(this.manualClass));\n      this.examples.unshift({\n        className: this.manualClass,\n        text: this.customText || this.defaultText,\n        applicationType: this.selectedApplicationType\n      });\n      this.manualClass = '';\n      this.customText = '';\n    }\n  }\n\n  removeExample(index: number) {\n    this.examples.splice(index, 1);\n  }\n\n  getExampleStyle(example: ColorExample): { [key: string]: string } {\n    const styles: { [key: string]: string } = {};\n\n    if (!example.className.includes('--')) {\n        return styles;\n    }\n    \n    switch (example.applicationType) {\n      case 'background':\n        styles['background-color'] = `var(${example.className})`;\n        break;\n      case 'color':\n        styles['color'] = `var(${example.className})`;\n        break;\n      case 'border':\n        styles['border'] = `2px solid var(${example.className})`;\n        break;\n    }\n\n    return styles;\n  }\n\n  getExampleClasses(example: ColorExample): string {\n    return example.className;\n  }\n}\n",
            "styleUrl": "./colors-demo.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<div class=\"colors-demo\">\n  <!-- Input Section -->\n  <div class=\"input-section\">\n    <h3>Test Color Classes</h3>\n    \n    <div class=\"input-group\">\n      <select [(ngModel)]=\"selectedCategory\" (ngModelChange)=\"onCategoryChange()\">\n        <option value=\"\">Select Category</option>\n        <option *ngFor=\"let category of classCategories\" [value]=\"category.name\">\n          {{ category.name }}\n        </option>\n      </select>\n      \n      <select [(ngModel)]=\"selectedClass\" [disabled]=\"!selectedCategory\">\n        <option value=\"\">Select Class</option>\n        <option *ngFor=\"let classItem of getSelectedCategoryClasses()\" [value]=\"classItem\">\n          {{ classItem }}\n        </option>\n      </select>\n\n      <select [(ngModel)]=\"selectedApplicationType\">\n        <option *ngFor=\"let type of applicationTypes\" [value]=\"type.value\">\n          {{ type.label }}\n        </option>\n      </select>\n      \n      <input\n        type=\"text\"\n        [(ngModel)]=\"customText\"\n        placeholder=\"Enter custom text (optional)\"\n      />\n      \n      <button (click)=\"onClassSelect()\" [disabled]=\"!selectedClass\">Add Class</button>\n    </div>\n\n    <div class=\"manual-class-input\">\n      <div class=\"input-group\">\n        <input\n          type=\"text\"\n          [(ngModel)]=\"manualClass\"\n          placeholder=\"Or enter class name manually\"\n          (keyup.enter)=\"addClass()\"\n        />\n        <input\n          type=\"text\"\n          [(ngModel)]=\"customText\"\n          placeholder=\"Enter custom text (optional)\"\n          (keyup.enter)=\"addClass()\"\n        />\n        <button (click)=\"addClass()\" [disabled]=\"!manualClass\">Add Class</button>\n      </div>\n    </div>\n  </div>\n\n  <!-- Examples Section -->\n  <div class=\"examples-section\" *ngIf=\"examples.length > 0\">\n    <h3>Examples</h3>\n    <div class=\"examples-list\">\n      <div class=\"example-item\" *ngFor=\"let example of examples; let i = index\">\n        <div class=\"example-header\">\n          <code>{{ example.className }}</code>\n          <button class=\"remove-btn\" (click)=\"removeExample(i)\">×</button>\n        </div>\n        <div \n          [ngStyle]=\"getExampleStyle(example)\"\n          class=\"example-content\"\n          [ngClass]=\"{\n            'example-text': example.applicationType === 'color',\n            'example-background': example.applicationType === 'background',\n            'example-border': example.applicationType === 'border',\n          }\"\n          [ngClass]=\"getExampleClasses(example)\"\n        >\n          {{ example.text }}\n        </div>\n      </div>\n    </div>\n  </div>\n</div>"
        },
        {
            "name": "ElevationDemoComponent",
            "id": "component-ElevationDemoComponent-80e975c59b8339cc609e30d703d83cf0787f87df351c65901e4848bb59ac4f18f56e0347f91b21174c75be534e32cfd3b03b367d776689c9af90051c4f699e4e",
            "file": "src/app/components/elevation-demo/elevation-demo.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-elevation-demo",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./elevation-demo.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "classCategories",
                    "defaultValue": "[\n    {\n      name: 'Shadows (Global)',\n      classes: [\n        'global-el-ultraLowRaised',\n        'global-el-lowRaised',\n        'global-el-midRaised',\n        'global-el-highRaised',\n        'global-el-ultraHighRaised'\n      ]\n    },\n  ]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ClassCategory[]",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 30
                },
                {
                    "name": "customText",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 24
                },
                {
                    "name": "defaultText",
                    "defaultValue": "'Elevation Example'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 26
                },
                {
                    "name": "examples",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ElevationExample[]",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 25
                },
                {
                    "name": "manualClass",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 23
                },
                {
                    "name": "selectedCategory",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 27
                },
                {
                    "name": "selectedClass",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 28
                }
            ],
            "methodsClass": [
                {
                    "name": "addClass",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 63,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "getSelectedCategoryClasses",
                    "args": [],
                    "optional": false,
                    "returnType": "string[]",
                    "typeParameters": [],
                    "line": 43,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onCategoryChange",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 48,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onClassSelect",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 52,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "removeExample",
                    "args": [
                        {
                            "name": "index",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 74,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "index",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "FormsModule",
                    "type": "module"
                },
                {
                    "name": "CommonModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\nimport { Component } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\n\ninterface ElevationExample {\n  className: string;\n  text: string;\n}\n\ninterface ClassCategory {\n  name: string;\n  classes: string[];\n}\n\n@Component({\n  selector: 'app-elevation-demo',\n  standalone: true,\n  imports: [FormsModule, CommonModule],\n  templateUrl: './elevation-demo.component.html',\n  styleUrl: './elevation-demo.component.scss'\n})\nexport class ElevationDemoComponent {\n  manualClass = '';\n  customText = '';\n  examples: ElevationExample[] = [];\n  defaultText = 'Elevation Example';\n  selectedCategory = '';\n  selectedClass = '';\n  \n  classCategories: ClassCategory[] = [\n    {\n      name: 'Shadows (Global)',\n      classes: [\n        'global-el-ultraLowRaised',\n        'global-el-lowRaised',\n        'global-el-midRaised',\n        'global-el-highRaised',\n        'global-el-ultraHighRaised'\n      ]\n    },\n  ];\n\n  getSelectedCategoryClasses(): string[] {\n    const category = this.classCategories.find(c => c.name === this.selectedCategory);\n    return category ? category.classes : [];\n  }\n\n  onCategoryChange() {\n    this.selectedClass = '';\n  }\n\n  onClassSelect() {\n    if (this.selectedClass) {\n      this.examples.unshift({\n        className: this.selectedClass,\n        text: this.customText || this.defaultText\n      });\n      this.selectedClass = '';\n      this.customText = '';\n    }\n  }\n\n  addClass() {\n    if (this.manualClass) {\n      this.examples.unshift({\n        className: this.manualClass,\n        text: this.customText || this.defaultText\n      });\n      this.manualClass = '';\n      this.customText = '';\n    }\n  }\n\n  removeExample(index: number) {\n    this.examples.splice(index, 1);\n  }\n}\n",
            "styleUrl": "./elevation-demo.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<div class=\"elevation-demo\">\n  <div class=\"input-section\">\n    <div class=\"manual-input\">\n      <h3>Test Elevation Classes</h3>\n      <div class=\"input-group\">\n        <select [(ngModel)]=\"selectedCategory\" (ngModelChange)=\"onCategoryChange()\">\n          <option value=\"\">Select Category</option>\n          <option *ngFor=\"let category of classCategories\" [value]=\"category.name\">\n            {{ category.name }}\n          </option>\n        </select>\n        <select [(ngModel)]=\"selectedClass\" [disabled]=\"!selectedCategory\">\n          <option value=\"\">Select Class</option>\n          <option *ngFor=\"let classItem of getSelectedCategoryClasses()\" [value]=\"classItem\">\n            {{ classItem }}\n          </option>\n        </select>\n        <input\n          type=\"text\"\n          [(ngModel)]=\"customText\"\n          placeholder=\"Enter custom text (optional)\"\n        />\n        <button (click)=\"onClassSelect()\" [disabled]=\"!selectedClass\">Add Class</button>\n      </div>\n      <div class=\"manual-class-input\">\n        <div class=\"input-group\">\n          <input\n            type=\"text\"\n            [(ngModel)]=\"manualClass\"\n            placeholder=\"Or enter class name manually\"\n            (keyup.enter)=\"addClass()\"\n          />\n          <button (click)=\"addClass()\" [disabled]=\"!manualClass\">Add Class</button>\n        </div>\n      </div>\n    </div>\n  </div>\n  \n  <div class=\"examples-section\" *ngIf=\"examples.length > 0\">\n    <h3>Examples</h3>\n    <div class=\"examples-list\">\n      <div class=\"example-item\" *ngFor=\"let example of examples; let i = index\">\n        <div class=\"example-header\">\n          <code>{{ example.className }}</code>\n          <button class=\"remove-btn\" (click)=\"removeExample(i)\">×</button>\n        </div>\n        <div class=\"elevation-example\" [class]=\"example.className\">{{ example.text }}</div>\n      </div>\n    </div>\n  </div>\n</div>"
        },
        {
            "name": "MaterialInputComponent",
            "id": "component-MaterialInputComponent-d005eb7d9af4fc4a634f30488afb8f21c71d3bf742708a47b0ad7c4dd2d87c41a799a2cdd30c6a0bf596bb4f9baca23c9d308d2d35aeb9275338f48b98eb1e41",
            "file": "src/app/components/material-input/material-input.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-material-input",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./material-input.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "disabled",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 22,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "error",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "formControl",
                    "defaultValue": "new FormControl()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 26,
                    "type": "FormControl",
                    "decorators": []
                },
                {
                    "name": "hint",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 18,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "label",
                    "defaultValue": "'Hello'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "maxlength",
                    "defaultValue": "100",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 23,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "placeholder",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "prefixIcon",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 24,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "readonly",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 21,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "suffixIcon",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 25,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "type",
                    "defaultValue": "'text'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 20,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "value",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "valueChange",
                    "defaultValue": "new EventEmitter<any>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 28,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "onInput",
                    "args": [
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 34,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [
                {
                    "name": "MatFormFieldModule",
                    "type": "module"
                },
                {
                    "name": "MatInputModule",
                    "type": "module"
                },
                {
                    "name": "MatIconModule",
                    "type": "module"
                },
                {
                    "name": "FormsModule",
                    "type": "module"
                },
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "ReactiveFormsModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\nimport { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { FormControl, FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\n\n@Component({\n  selector: 'app-material-input',\n  imports: [MatFormFieldModule, MatInputModule, MatIconModule, FormsModule, CommonModule, ReactiveFormsModule],\n  templateUrl: './material-input.component.html',\n  styleUrl: './material-input.component.scss'\n})\nexport class MaterialInputComponent {\n  @Input() label: string = 'Hello';\n  @Input() placeholder: string = '';\n  @Input() error: string = '';\n  @Input() hint: string = '';\n  @Input() value: string = '';\n  @Input() type: string = 'text';\n  @Input() readonly: boolean = false;\n  @Input() disabled: boolean = false;\n  @Input() maxlength: number = 100;\n  @Input() prefixIcon: string = '';\n  @Input() suffixIcon: string = '';\n  @Input() formControl: FormControl = new FormControl();\n\n  @Output() valueChange = new EventEmitter<any>();\n\n  get showError(): boolean {\n    return this.formControl && this.formControl.invalid && this.formControl.touched;\n  }\n\n  onInput(event: any) {\n    this.valueChange.emit(event.target.value);\n  }\n}\n",
            "styleUrl": "./material-input.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "accessors": {
                "showError": {
                    "name": "showError",
                    "getSignature": {
                        "name": "showError",
                        "type": "boolean",
                        "returnType": "boolean",
                        "line": 30
                    }
                }
            },
            "templateData": "<mat-form-field>\n  <mat-label *ngIf=\"label\" class=\"BodyLargeRegular\">\n    {{ label }}\n  </mat-label>\n  <mat-icon matPrefix *ngIf=\"prefixIcon\" class=\"material-icons\">{{ prefixIcon }}</mat-icon>\n  <input\n    matInput\n    [type]=\"type\"\n    [formControl]=\"formControl\"\n    [readonly]=\"readonly\"\n    [disabled]=\"disabled\"\n    [placeholder]=\"placeholder\"\n    [maxlength]=\"maxlength\"\n    (input)=\"onInput($event)\" />\n  <mat-icon matSuffix *ngIf=\"suffixIcon\" class=\"material-icons\">{{ suffixIcon }}</mat-icon>\n  <mat-hint *ngIf=\"hint\" class=\"on-surface-low\">{{ hint }}</mat-hint>\n  <mat-error *ngIf=\"showError\" class=\"BodySmallRegular\">\n    <ng-container *ngIf=\"formControl.errors?.['required']\">\n      {{ label }} is <strong>required</strong>\n    </ng-container>\n    <ng-container *ngIf=\"formControl.errors?.['email']\">\n      Please enter a <strong>valid</strong> email address\n    </ng-container>\n    <ng-container *ngIf=\"formControl.errors?.['maxlength']\">\n      Maximum {{ maxlength }} characters allowed\n    </ng-container>\n  </mat-error>\n</mat-form-field>\n"
        },
        {
            "name": "SpacingDemoComponent",
            "id": "component-SpacingDemoComponent-af25fdfbedfc09875af86f7efde5eeba669d2468907caf3f8fc7b82f87ee1194f4fb2f4c051d21f6c8e1303970fd7786fef2f2f970898c385069af8898c5e30b",
            "file": "src/app/components/spacing-demo/spacing-demo.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-spacing-demo",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./spacing-demo.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "classCategories",
                    "defaultValue": "[\n    {\n      name: 'Margin',\n      classes: [\n        'global-m-00', 'global-m-01', 'global-m-02', 'global-m-03', 'global-m-04',\n        'global-m-05', 'global-m-06', 'global-m-07', 'global-m-08', 'global-m-09',\n        'global-m-10', 'global-m-11'\n      ]\n    },\n    {\n      name: 'Margin (Top)',\n      classes: [\n        'global-mt-00', 'global-mt-01', 'global-mt-02', 'global-mt-03', 'global-mt-04',\n        'global-mt-05', 'global-mt-06', 'global-mt-07', 'global-mt-08', 'global-mt-09',\n        'global-mt-10', 'global-mt-11'\n      ]\n    },\n    {\n      name: 'Margin (Right)',\n      classes: [\n        'global-mr-00', 'global-mr-01', 'global-mr-02', 'global-mr-03', 'global-mr-04',\n        'global-mr-05', 'global-mr-06', 'global-mr-07', 'global-mr-08', 'global-mr-09',\n        'global-mr-10', 'global-mr-11'\n      ]\n    },\n    {\n      name: 'Margin (Bottom)',\n      classes: [\n        'global-mb-00', 'global-mb-01', 'global-mb-02', 'global-mb-03', 'global-mb-04',\n        'global-mb-05', 'global-mb-06', 'global-mb-07', 'global-mb-08', 'global-mb-09',\n        'global-mb-10', 'global-mb-11'\n      ]\n    },\n    {\n      name: 'Margin (Left)',\n      classes: [\n        'global-ml-00', 'global-ml-01', 'global-ml-02', 'global-ml-03', 'global-ml-04',\n        'global-ml-05', 'global-ml-06', 'global-ml-07', 'global-ml-08', 'global-ml-09',\n        'global-ml-10', 'global-ml-11'\n      ]\n    },\n    {\n      name: 'Margin (X-Axis)',\n      classes: [\n        'global-mx-00', 'global-mx-01', 'global-mx-02', 'global-mx-03', 'global-mx-04',\n        'global-mx-05', 'global-mx-06', 'global-mx-07', 'global-mx-08', 'global-mx-09',\n        'global-mx-10', 'global-mx-11'\n      ]\n    },\n    {\n      name: 'Margin (Y-Axis)',\n      classes: [\n        'global-my-00', 'global-my-01', 'global-my-02', 'global-my-03', 'global-my-04',\n        'global-my-05', 'global-my-06', 'global-my-07', 'global-my-08', 'global-my-09',\n        'global-my-10', 'global-my-11'\n      ]\n    },\n    {\n      name: 'Padding',\n      classes: [\n        'global-p-00', 'global-p-01', 'global-p-02', 'global-p-03', 'global-p-04',\n        'global-p-05', 'global-p-06', 'global-p-07', 'global-p-08', 'global-p-09',\n        'global-p-10', 'global-p-11'\n      ]\n    },\n    {\n      name: 'Padding (Top)',\n      classes: [\n        'global-pt-00', 'global-pt-01', 'global-pt-02', 'global-pt-03', 'global-pt-04',\n        'global-pt-05', 'global-pt-06', 'global-pt-07', 'global-pt-08', 'global-pt-09',\n        'global-pt-10', 'global-pt-11'\n      ]\n    },\n    {\n      name: 'Padding (Right)',\n      classes: [\n        'global-pr-00', 'global-pr-01', 'global-pr-02', 'global-pr-03', 'global-pr-04',\n        'global-pr-05', 'global-pr-06', 'global-pr-07', 'global-pr-08', 'global-pr-09',\n        'global-pr-10', 'global-pr-11'\n      ]\n    },\n    {\n      name: 'Padding (Bottom)',\n      classes: [\n        'global-pb-00', 'global-pb-01', 'global-pb-02', 'global-pb-03', 'global-pb-04',\n        'global-pb-05', 'global-pb-06', 'global-pb-07', 'global-pb-08', 'global-pb-09',\n        'global-pb-10', 'global-pb-11'\n      ]\n    },\n    {\n      name: 'Padding (Left)',\n      classes: [\n        'global-pl-00', 'global-pl-01', 'global-pl-02', 'global-pl-03', 'global-pl-04',\n        'global-pl-05', 'global-pl-06', 'global-pl-07', 'global-pl-08', 'global-pl-09',\n        'global-pl-10', 'global-pl-11'\n      ]\n    },\n    {\n      name: 'Padding (X-Axis)',\n      classes: [\n        'global-px-00', 'global-px-01', 'global-px-02', 'global-px-03', 'global-px-04',\n        'global-px-05', 'global-px-06', 'global-px-07', 'global-px-08', 'global-px-09',\n        'global-px-10', 'global-px-11'\n      ]\n    },\n    {\n      name: 'Padding (Y-Axis)',\n      classes: [\n        'global-py-00', 'global-py-01', 'global-py-02', 'global-py-03', 'global-py-04',\n        'global-py-05', 'global-py-06', 'global-py-07', 'global-py-08', 'global-py-09',\n        'global-py-10', 'global-py-11'\n      ]\n    },\n    {\n      name: 'Gap',\n      classes: [\n        'global-gap-00', 'global-gap-01', 'global-gap-02', 'global-gap-03',\n        'global-gap-04', 'global-gap-05', 'global-gap-06', 'global-gap-07',\n        'global-gap-08', 'global-gap-09', 'global-gap-10', 'global-gap-11'\n      ]\n    },\n    {\n      name: 'Gap (X-Axis)',\n      classes: [\n        'global-gap-x-00', 'global-gap-x-01', 'global-gap-x-02', 'global-gap-x-03',\n        'global-gap-x-04', 'global-gap-x-05', 'global-gap-x-06', 'global-gap-x-07',\n        'global-gap-x-08', 'global-gap-x-09', 'global-gap-x-10', 'global-gap-x-11'\n      ]\n    },\n    {\n      name: 'Gap (Y-Axis)',\n      classes: [\n        'global-gap-y-00', 'global-gap-y-01', 'global-gap-y-02', 'global-gap-y-03',\n        'global-gap-y-04', 'global-gap-y-05', 'global-gap-y-06', 'global-gap-y-07',\n        'global-gap-y-08', 'global-gap-y-09', 'global-gap-y-10', 'global-gap-y-11'\n      ]\n    },\n    {\n      name: 'Gutter',\n      classes: [\n        'global-gutter-00', 'global-gutter-01', 'global-gutter-02', 'global-gutter-03',\n        'global-gutter-04', 'global-gutter-05', 'global-gutter-06', 'global-gutter-07',\n        'global-gutter-08', 'global-gutter-09', 'global-gutter-10', 'global-gutter-11'\n      ]\n    },\n    {\n      name: 'Gutter (X-Axis)',\n      classes: [\n        'global-gutter-x-00', 'global-gutter-x-01', 'global-gutter-x-02', 'global-gutter-x-03',\n        'global-gutter-x-04', 'global-gutter-x-05', 'global-gutter-x-06', 'global-gutter-x-07',\n        'global-gutter-x-08', 'global-gutter-x-09', 'global-gutter-x-10', 'global-gutter-x-11'\n      ]\n    },\n    {\n      name: 'Gutter (Y-Axis)',\n      classes: [\n        'global-gutter-y-00', 'global-gutter-y-01', 'global-gutter-y-02', 'global-gutter-y-03',\n        'global-gutter-y-04', 'global-gutter-y-05', 'global-gutter-y-06', 'global-gutter-y-07',\n        'global-gutter-y-08', 'global-gutter-y-09', 'global-gutter-y-10', 'global-gutter-y-11'\n      ]\n    }\n  ]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ClassCategory[]",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 30
                },
                {
                    "name": "customText",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 24
                },
                {
                    "name": "defaultText",
                    "defaultValue": "'Spacing Example'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 26
                },
                {
                    "name": "examples",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "SpacingExample[]",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 25
                },
                {
                    "name": "manualClass",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 23
                },
                {
                    "name": "selectedCategory",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 27
                },
                {
                    "name": "selectedClass",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 28
                }
            ],
            "methodsClass": [
                {
                    "name": "addClass",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 213,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "getSelectedCategoryClasses",
                    "args": [],
                    "optional": false,
                    "returnType": "string[]",
                    "typeParameters": [],
                    "line": 193,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onCategoryChange",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 198,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onClassSelect",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 202,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "removeExample",
                    "args": [
                        {
                            "name": "index",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 224,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "index",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "FormsModule",
                    "type": "module"
                },
                {
                    "name": "CommonModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\nimport { Component } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\n\ninterface SpacingExample {\n  className: string;\n  text: string;\n}\n\ninterface ClassCategory {\n  name: string;\n  classes: string[];\n}\n\n@Component({\n  selector: 'app-spacing-demo',\n  standalone: true,\n  imports: [FormsModule, CommonModule],\n  templateUrl: './spacing-demo.component.html',\n  styleUrl: './spacing-demo.component.scss'\n})\nexport class SpacingDemoComponent {\n  manualClass = '';\n  customText = '';\n  examples: SpacingExample[] = [];\n  defaultText = 'Spacing Example';\n  selectedCategory = '';\n  selectedClass = '';\n  \n  classCategories: ClassCategory[] = [\n    {\n      name: 'Margin',\n      classes: [\n        'global-m-00', 'global-m-01', 'global-m-02', 'global-m-03', 'global-m-04',\n        'global-m-05', 'global-m-06', 'global-m-07', 'global-m-08', 'global-m-09',\n        'global-m-10', 'global-m-11'\n      ]\n    },\n    {\n      name: 'Margin (Top)',\n      classes: [\n        'global-mt-00', 'global-mt-01', 'global-mt-02', 'global-mt-03', 'global-mt-04',\n        'global-mt-05', 'global-mt-06', 'global-mt-07', 'global-mt-08', 'global-mt-09',\n        'global-mt-10', 'global-mt-11'\n      ]\n    },\n    {\n      name: 'Margin (Right)',\n      classes: [\n        'global-mr-00', 'global-mr-01', 'global-mr-02', 'global-mr-03', 'global-mr-04',\n        'global-mr-05', 'global-mr-06', 'global-mr-07', 'global-mr-08', 'global-mr-09',\n        'global-mr-10', 'global-mr-11'\n      ]\n    },\n    {\n      name: 'Margin (Bottom)',\n      classes: [\n        'global-mb-00', 'global-mb-01', 'global-mb-02', 'global-mb-03', 'global-mb-04',\n        'global-mb-05', 'global-mb-06', 'global-mb-07', 'global-mb-08', 'global-mb-09',\n        'global-mb-10', 'global-mb-11'\n      ]\n    },\n    {\n      name: 'Margin (Left)',\n      classes: [\n        'global-ml-00', 'global-ml-01', 'global-ml-02', 'global-ml-03', 'global-ml-04',\n        'global-ml-05', 'global-ml-06', 'global-ml-07', 'global-ml-08', 'global-ml-09',\n        'global-ml-10', 'global-ml-11'\n      ]\n    },\n    {\n      name: 'Margin (X-Axis)',\n      classes: [\n        'global-mx-00', 'global-mx-01', 'global-mx-02', 'global-mx-03', 'global-mx-04',\n        'global-mx-05', 'global-mx-06', 'global-mx-07', 'global-mx-08', 'global-mx-09',\n        'global-mx-10', 'global-mx-11'\n      ]\n    },\n    {\n      name: 'Margin (Y-Axis)',\n      classes: [\n        'global-my-00', 'global-my-01', 'global-my-02', 'global-my-03', 'global-my-04',\n        'global-my-05', 'global-my-06', 'global-my-07', 'global-my-08', 'global-my-09',\n        'global-my-10', 'global-my-11'\n      ]\n    },\n    {\n      name: 'Padding',\n      classes: [\n        'global-p-00', 'global-p-01', 'global-p-02', 'global-p-03', 'global-p-04',\n        'global-p-05', 'global-p-06', 'global-p-07', 'global-p-08', 'global-p-09',\n        'global-p-10', 'global-p-11'\n      ]\n    },\n    {\n      name: 'Padding (Top)',\n      classes: [\n        'global-pt-00', 'global-pt-01', 'global-pt-02', 'global-pt-03', 'global-pt-04',\n        'global-pt-05', 'global-pt-06', 'global-pt-07', 'global-pt-08', 'global-pt-09',\n        'global-pt-10', 'global-pt-11'\n      ]\n    },\n    {\n      name: 'Padding (Right)',\n      classes: [\n        'global-pr-00', 'global-pr-01', 'global-pr-02', 'global-pr-03', 'global-pr-04',\n        'global-pr-05', 'global-pr-06', 'global-pr-07', 'global-pr-08', 'global-pr-09',\n        'global-pr-10', 'global-pr-11'\n      ]\n    },\n    {\n      name: 'Padding (Bottom)',\n      classes: [\n        'global-pb-00', 'global-pb-01', 'global-pb-02', 'global-pb-03', 'global-pb-04',\n        'global-pb-05', 'global-pb-06', 'global-pb-07', 'global-pb-08', 'global-pb-09',\n        'global-pb-10', 'global-pb-11'\n      ]\n    },\n    {\n      name: 'Padding (Left)',\n      classes: [\n        'global-pl-00', 'global-pl-01', 'global-pl-02', 'global-pl-03', 'global-pl-04',\n        'global-pl-05', 'global-pl-06', 'global-pl-07', 'global-pl-08', 'global-pl-09',\n        'global-pl-10', 'global-pl-11'\n      ]\n    },\n    {\n      name: 'Padding (X-Axis)',\n      classes: [\n        'global-px-00', 'global-px-01', 'global-px-02', 'global-px-03', 'global-px-04',\n        'global-px-05', 'global-px-06', 'global-px-07', 'global-px-08', 'global-px-09',\n        'global-px-10', 'global-px-11'\n      ]\n    },\n    {\n      name: 'Padding (Y-Axis)',\n      classes: [\n        'global-py-00', 'global-py-01', 'global-py-02', 'global-py-03', 'global-py-04',\n        'global-py-05', 'global-py-06', 'global-py-07', 'global-py-08', 'global-py-09',\n        'global-py-10', 'global-py-11'\n      ]\n    },\n    {\n      name: 'Gap',\n      classes: [\n        'global-gap-00', 'global-gap-01', 'global-gap-02', 'global-gap-03',\n        'global-gap-04', 'global-gap-05', 'global-gap-06', 'global-gap-07',\n        'global-gap-08', 'global-gap-09', 'global-gap-10', 'global-gap-11'\n      ]\n    },\n    {\n      name: 'Gap (X-Axis)',\n      classes: [\n        'global-gap-x-00', 'global-gap-x-01', 'global-gap-x-02', 'global-gap-x-03',\n        'global-gap-x-04', 'global-gap-x-05', 'global-gap-x-06', 'global-gap-x-07',\n        'global-gap-x-08', 'global-gap-x-09', 'global-gap-x-10', 'global-gap-x-11'\n      ]\n    },\n    {\n      name: 'Gap (Y-Axis)',\n      classes: [\n        'global-gap-y-00', 'global-gap-y-01', 'global-gap-y-02', 'global-gap-y-03',\n        'global-gap-y-04', 'global-gap-y-05', 'global-gap-y-06', 'global-gap-y-07',\n        'global-gap-y-08', 'global-gap-y-09', 'global-gap-y-10', 'global-gap-y-11'\n      ]\n    },\n    {\n      name: 'Gutter',\n      classes: [\n        'global-gutter-00', 'global-gutter-01', 'global-gutter-02', 'global-gutter-03',\n        'global-gutter-04', 'global-gutter-05', 'global-gutter-06', 'global-gutter-07',\n        'global-gutter-08', 'global-gutter-09', 'global-gutter-10', 'global-gutter-11'\n      ]\n    },\n    {\n      name: 'Gutter (X-Axis)',\n      classes: [\n        'global-gutter-x-00', 'global-gutter-x-01', 'global-gutter-x-02', 'global-gutter-x-03',\n        'global-gutter-x-04', 'global-gutter-x-05', 'global-gutter-x-06', 'global-gutter-x-07',\n        'global-gutter-x-08', 'global-gutter-x-09', 'global-gutter-x-10', 'global-gutter-x-11'\n      ]\n    },\n    {\n      name: 'Gutter (Y-Axis)',\n      classes: [\n        'global-gutter-y-00', 'global-gutter-y-01', 'global-gutter-y-02', 'global-gutter-y-03',\n        'global-gutter-y-04', 'global-gutter-y-05', 'global-gutter-y-06', 'global-gutter-y-07',\n        'global-gutter-y-08', 'global-gutter-y-09', 'global-gutter-y-10', 'global-gutter-y-11'\n      ]\n    }\n  ];\n\n  getSelectedCategoryClasses(): string[] {\n    const category = this.classCategories.find(c => c.name === this.selectedCategory);\n    return category ? category.classes : [];\n  }\n\n  onCategoryChange() {\n    this.selectedClass = '';\n  }\n\n  onClassSelect() {\n    if (this.selectedClass) {\n      this.examples.unshift({\n        className: this.selectedClass,\n        text: this.customText || this.defaultText\n      });\n      this.selectedClass = '';\n      this.customText = '';\n    }\n  }\n\n  addClass() {\n    if (this.manualClass) {\n      this.examples.unshift({\n        className: this.manualClass,\n        text: this.customText || this.defaultText\n      });\n      this.manualClass = '';\n      this.customText = '';\n    }\n  }\n\n  removeExample(index: number) {\n    this.examples.splice(index, 1);\n  }\n}\n",
            "styleUrl": "./spacing-demo.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<div class=\"spacing-demo\">\n  <div class=\"input-section\">\n    <div class=\"manual-input\">\n      <h3>Test Spacing Classes</h3>\n      <div class=\"input-group\">\n        <select [(ngModel)]=\"selectedCategory\" (ngModelChange)=\"onCategoryChange()\">\n          <option value=\"\">Select Category</option>\n          <option *ngFor=\"let category of classCategories\" [value]=\"category.name\">\n            {{ category.name }}\n          </option>\n        </select>\n        <select [(ngModel)]=\"selectedClass\" [disabled]=\"!selectedCategory\">\n          <option value=\"\">Select Class</option>\n          <option *ngFor=\"let classItem of getSelectedCategoryClasses()\" [value]=\"classItem\">\n            {{ classItem }}\n          </option>\n        </select>\n        <input\n          type=\"text\"\n          [(ngModel)]=\"customText\"\n          placeholder=\"Enter custom text (optional)\"\n        />\n        <button (click)=\"onClassSelect()\" [disabled]=\"!selectedClass\">Add Class</button>\n      </div>\n      <div class=\"manual-class-input\">\n        <div class=\"input-group\">\n          <input\n            type=\"text\"\n            [(ngModel)]=\"manualClass\"\n            placeholder=\"Or enter class name manually\"\n            (keyup.enter)=\"addClass()\"\n          />\n          <button (click)=\"addClass()\" [disabled]=\"!manualClass\">Add Class</button>\n        </div>\n      </div>\n    </div>\n  </div>\n  \n  <div class=\"examples-section\" *ngIf=\"examples.length > 0\">\n    <h3>Examples</h3>\n    <div class=\"examples-list\">\n      <div class=\"example-item\" *ngFor=\"let example of examples; let i = index\">\n        <div class=\"example-header\">\n          <code>{{ example.className }}</code>\n          <button class=\"remove-btn\" (click)=\"removeExample(i)\">×</button>\n        </div>\n        <div class=\"spacing-example\" [class]=\"example.className\">{{ example.text }}</div>\n      </div>\n    </div>\n  </div>\n</div>"
        },
        {
            "name": "TypographyDemoComponent",
            "id": "component-TypographyDemoComponent-1f7309991cee3d2a3086f0cdc514ed710a08fac528197d71142d088e88e1bdb95f645a7338908ddf6ec4f514855ff0f45f4ce9a1a4c5cd22c577ee4d37dcf75d",
            "file": "src/app/components/typography-demo/typography-demo.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-typography-demo",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./typography-demo.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "classCategories",
                    "defaultValue": "[\n    {\n      name: 'Font Size (Global)',\n      classes: [\n        'global-fz-10', 'global-fz-12', 'global-fz-14', 'global-fz-16', 'global-fz-18',\n        'global-fz-20', 'global-fz-24', 'global-fz-32', 'global-fz-34', 'global-fz-36',\n        'global-fz-38', 'global-fz-40', 'global-fz-48', 'global-fz-56', 'global-fz-64',\n        'global-fz-72'\n      ]\n    },\n    {\n      name: 'Font Size (Scale)',\n      classes: [\n        'font-size-25', 'font-size-50', 'font-size-100', 'font-size-200', 'font-size-300',\n        'font-size-400', 'font-size-500', 'font-size-600', 'font-size-700', 'font-size-800',\n        'font-size-900', 'font-size-1000', 'font-size-1100'\n      ]\n    },\n    {\n      name: 'Line Height (Global)',\n      classes: [\n        'global-lh-00', 'global-lh-14', 'global-lh-16', 'global-lh-18', 'global-lh-20',\n        'global-lh-22', 'global-lh-24', 'global-lh-26', 'global-lh-32', 'global-lh-38',\n        'global-lh-42', 'global-lh-46', 'global-lh-48', 'global-lh-56', 'global-lh-64',\n        'global-lh-70', 'global-lh-78'\n      ]\n    },\n    {\n      name: 'Line Height (Scale)',\n      classes: [\n        'line-height-00', 'line-height-25', 'line-height-50', 'line-height-75',\n        'line-height-100', 'line-height-200', 'line-height-300', 'line-height-400',\n        'line-height-500', 'line-height-600', 'line-height-700', 'line-height-800',\n        'line-height-900', 'line-height-1000', 'line-height-1100'\n      ]\n    },\n    {\n      name: 'Letter Spacing (Global)',\n      classes: [\n        'global-ls-compressed', 'global-ls-condensed', 'global-ls-normal',\n        'global-ls-expanded', 'global-ls-extended'\n      ]\n    },\n    {\n      name: 'Letter Spacing (Scale)',\n      classes: [\n        'letter-spacing-50', 'letter-spacing-100'\n      ]\n    },\n    {\n      name: 'Font Weight (Global)',\n      classes: [\n        'global-fw-100', 'global-fw-200', 'global-fw-300', 'global-fw-400',\n        'global-fw-500', 'global-fw-600', 'global-fw-700', 'global-fw-800',\n        'global-fw-900'\n      ]\n    },\n    {\n      name: 'Font Weight (Scale)',\n      classes: [\n        'font-weight-400',\n        'font-weight-500',\n        'font-weight-600',\n        'font-weight-700'\n      ]\n    },\n    {\n      name: 'Paragraph Spacing (Global)',\n      classes: [\n        'global-ps-00', 'global-ps-08', 'global-ps-10', 'global-ps-11', 'global-ps-12'\n      ]\n    },\n    {\n      name: 'Paragraph Spacing (Scale)',\n      classes: [\n        'paragraph-spacing-00', 'paragraph-spacing-100', 'paragraph-spacing-200',\n        'paragraph-spacing-300', 'paragraph-spacing-400'\n      ]\n    },\n    {\n      name: 'List Spacing (Global)',\n      classes: [\n        'global-lis-00', 'global-lis-04', 'global-lis-08', 'global-lis-12',\n        'global-lis-16', 'global-lis-20', 'global-lis-24'\n      ]\n    },\n    {\n      name: 'List Spacing (Scale)',\n      classes: [\n        'list-spacing-00', 'list-spacing-100'\n      ]\n    },\n    {\n      name: 'Type Scale (Display)',\n      classes: [\n        'DisplayXLargeRegular', 'DisplayXLargeMedium', 'DisplayXLargeSemibold',\n        'DisplayLargeRegular', 'DisplayLargeMedium', 'DisplayLargeSemibold',\n        'DisplayMediumRegular', 'DisplayMediumMedium', 'DisplayMediumSemibold',\n        'DisplaySmallRegular', 'DisplaySmallMedium', 'DisplaySmallSemibold'\n      ]\n    },\n    {\n      name: 'Type Scale (Heading)',\n      classes: [\n        'Heading2XLargeRegular', 'Heading2XLargeSemibold',\n        'HeadingXLargeRegular', 'HeadingXLargeSemibold',\n        'HeadingLargeRegular', 'HeadingLargeSemibold',\n        'HeadingMediumRegular', 'HeadingMediumSemibold',\n        'HeadingSmallRegular', 'HeadingSmallSemibold'\n      ]\n    },\n    {\n      name: 'Type Scale (Body)',\n      classes: [\n        'BodyLargeRegular', 'BodyLargeMedium', 'BodyLargeSemibold',\n        'BodyMediumRegular', 'BodyMediumMedium', 'BodyMediumSemibold',\n        'BodySmallRegular', 'BodySmallMedium', 'BodySmallSemibold',\n        'BodyXSmallRegular', 'BodyXSmallMedium', 'BodyXSmallSemibold'\n      ]\n    }\n  ]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ClassCategory[]",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 29
                },
                {
                    "name": "customText",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 23
                },
                {
                    "name": "defaultText",
                    "defaultValue": "'Typography Example'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 25
                },
                {
                    "name": "examples",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TypographyExample[]",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 24
                },
                {
                    "name": "manualClass",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 22
                },
                {
                    "name": "selectedCategory",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 26
                },
                {
                    "name": "selectedClass",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 27
                }
            ],
            "methodsClass": [
                {
                    "name": "addClass",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 171,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "getSelectedCategoryClasses",
                    "args": [],
                    "optional": false,
                    "returnType": "string[]",
                    "typeParameters": [],
                    "line": 151,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onCategoryChange",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 156,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onClassSelect",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 160,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "removeExample",
                    "args": [
                        {
                            "name": "index",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 182,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "index",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [
                {
                    "name": "FormsModule",
                    "type": "module"
                },
                {
                    "name": "CommonModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\nimport { Component } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\n\ninterface TypographyExample {\n  className: string;\n  text: string;\n}\n\ninterface ClassCategory {\n  name: string;\n  classes: string[];\n}\n\n@Component({\n  selector: 'app-typography-demo',\n  imports: [FormsModule, CommonModule],\n  templateUrl: './typography-demo.component.html',\n  styleUrl: './typography-demo.component.scss'\n})\nexport class TypographyDemoComponent {\n  manualClass = '';\n  customText = '';\n  examples: TypographyExample[] = [];\n  defaultText = 'Typography Example';\n  selectedCategory = '';\n  selectedClass = '';\n  \n  classCategories: ClassCategory[] = [\n    {\n      name: 'Font Size (Global)',\n      classes: [\n        'global-fz-10', 'global-fz-12', 'global-fz-14', 'global-fz-16', 'global-fz-18',\n        'global-fz-20', 'global-fz-24', 'global-fz-32', 'global-fz-34', 'global-fz-36',\n        'global-fz-38', 'global-fz-40', 'global-fz-48', 'global-fz-56', 'global-fz-64',\n        'global-fz-72'\n      ]\n    },\n    {\n      name: 'Font Size (Scale)',\n      classes: [\n        'font-size-25', 'font-size-50', 'font-size-100', 'font-size-200', 'font-size-300',\n        'font-size-400', 'font-size-500', 'font-size-600', 'font-size-700', 'font-size-800',\n        'font-size-900', 'font-size-1000', 'font-size-1100'\n      ]\n    },\n    {\n      name: 'Line Height (Global)',\n      classes: [\n        'global-lh-00', 'global-lh-14', 'global-lh-16', 'global-lh-18', 'global-lh-20',\n        'global-lh-22', 'global-lh-24', 'global-lh-26', 'global-lh-32', 'global-lh-38',\n        'global-lh-42', 'global-lh-46', 'global-lh-48', 'global-lh-56', 'global-lh-64',\n        'global-lh-70', 'global-lh-78'\n      ]\n    },\n    {\n      name: 'Line Height (Scale)',\n      classes: [\n        'line-height-00', 'line-height-25', 'line-height-50', 'line-height-75',\n        'line-height-100', 'line-height-200', 'line-height-300', 'line-height-400',\n        'line-height-500', 'line-height-600', 'line-height-700', 'line-height-800',\n        'line-height-900', 'line-height-1000', 'line-height-1100'\n      ]\n    },\n    {\n      name: 'Letter Spacing (Global)',\n      classes: [\n        'global-ls-compressed', 'global-ls-condensed', 'global-ls-normal',\n        'global-ls-expanded', 'global-ls-extended'\n      ]\n    },\n    {\n      name: 'Letter Spacing (Scale)',\n      classes: [\n        'letter-spacing-50', 'letter-spacing-100'\n      ]\n    },\n    {\n      name: 'Font Weight (Global)',\n      classes: [\n        'global-fw-100', 'global-fw-200', 'global-fw-300', 'global-fw-400',\n        'global-fw-500', 'global-fw-600', 'global-fw-700', 'global-fw-800',\n        'global-fw-900'\n      ]\n    },\n    {\n      name: 'Font Weight (Scale)',\n      classes: [\n        'font-weight-400',\n        'font-weight-500',\n        'font-weight-600',\n        'font-weight-700'\n      ]\n    },\n    {\n      name: 'Paragraph Spacing (Global)',\n      classes: [\n        'global-ps-00', 'global-ps-08', 'global-ps-10', 'global-ps-11', 'global-ps-12'\n      ]\n    },\n    {\n      name: 'Paragraph Spacing (Scale)',\n      classes: [\n        'paragraph-spacing-00', 'paragraph-spacing-100', 'paragraph-spacing-200',\n        'paragraph-spacing-300', 'paragraph-spacing-400'\n      ]\n    },\n    {\n      name: 'List Spacing (Global)',\n      classes: [\n        'global-lis-00', 'global-lis-04', 'global-lis-08', 'global-lis-12',\n        'global-lis-16', 'global-lis-20', 'global-lis-24'\n      ]\n    },\n    {\n      name: 'List Spacing (Scale)',\n      classes: [\n        'list-spacing-00', 'list-spacing-100'\n      ]\n    },\n    {\n      name: 'Type Scale (Display)',\n      classes: [\n        'DisplayXLargeRegular', 'DisplayXLargeMedium', 'DisplayXLargeSemibold',\n        'DisplayLargeRegular', 'DisplayLargeMedium', 'DisplayLargeSemibold',\n        'DisplayMediumRegular', 'DisplayMediumMedium', 'DisplayMediumSemibold',\n        'DisplaySmallRegular', 'DisplaySmallMedium', 'DisplaySmallSemibold'\n      ]\n    },\n    {\n      name: 'Type Scale (Heading)',\n      classes: [\n        'Heading2XLargeRegular', 'Heading2XLargeSemibold',\n        'HeadingXLargeRegular', 'HeadingXLargeSemibold',\n        'HeadingLargeRegular', 'HeadingLargeSemibold',\n        'HeadingMediumRegular', 'HeadingMediumSemibold',\n        'HeadingSmallRegular', 'HeadingSmallSemibold'\n      ]\n    },\n    {\n      name: 'Type Scale (Body)',\n      classes: [\n        'BodyLargeRegular', 'BodyLargeMedium', 'BodyLargeSemibold',\n        'BodyMediumRegular', 'BodyMediumMedium', 'BodyMediumSemibold',\n        'BodySmallRegular', 'BodySmallMedium', 'BodySmallSemibold',\n        'BodyXSmallRegular', 'BodyXSmallMedium', 'BodyXSmallSemibold'\n      ]\n    }\n  ];\n\n  getSelectedCategoryClasses(): string[] {\n    const category = this.classCategories.find(c => c.name === this.selectedCategory);\n    return category ? category.classes : [];\n  }\n\n  onCategoryChange() {\n    this.selectedClass = '';\n  }\n\n  onClassSelect() {\n    if (this.selectedClass) {\n      this.examples.unshift({\n        className: this.selectedClass,\n        text: this.customText || this.defaultText\n      });\n      this.selectedClass = '';\n      this.customText = '';\n    }\n  }\n\n  addClass() {\n    if (this.manualClass) {\n      this.examples.unshift({\n        className: this.manualClass,\n        text: this.customText || this.defaultText\n      });\n      this.manualClass = '';\n      this.customText = '';\n    }\n  }\n\n  removeExample(index: number) {\n    this.examples.splice(index, 1);\n  }\n}\n",
            "styleUrl": "./typography-demo.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<div class=\"typography-demo\">\n    <div class=\"input-section\">\n      <div class=\"manual-input\">\n        <h3>Test Typography Classes</h3>\n        <div class=\"input-group\">\n          <select [(ngModel)]=\"selectedCategory\" (ngModelChange)=\"onCategoryChange()\">\n            <option value=\"\">Select Category</option>\n            <option *ngFor=\"let category of classCategories\" [value]=\"category.name\">\n              {{ category.name }}\n            </option>\n          </select>\n          <select [(ngModel)]=\"selectedClass\" [disabled]=\"!selectedCategory\">\n            <option value=\"\">Select Class</option>\n            <option *ngFor=\"let classItem of getSelectedCategoryClasses()\" [value]=\"classItem\">\n              {{ classItem }}\n            </option>\n          </select>\n          <input\n            type=\"text\"\n            [(ngModel)]=\"customText\"\n            placeholder=\"Enter custom text (optional)\"\n          />\n          <button (click)=\"onClassSelect()\" [disabled]=\"!selectedClass\">Add Class</button>\n        </div>\n        <div class=\"manual-class-input\">\n          <div class=\"input-group\">\n            <input\n              type=\"text\"\n              [(ngModel)]=\"manualClass\"\n              placeholder=\"Or enter class name manually\"\n              (keyup.enter)=\"addClass()\"\n            />\n            <button (click)=\"addClass()\" [disabled]=\"!manualClass\">Add Class</button>\n          </div>\n        </div>\n      </div>\n    </div>\n    \n    <div class=\"examples-section\" *ngIf=\"examples.length > 0\">\n      <h3>Examples</h3>\n      <div class=\"examples-list\">\n        <div class=\"example-item\" *ngFor=\"let example of examples; let i = index\">\n          <div class=\"example-header\">\n            <code>{{ example.className }}</code>\n            <button class=\"remove-btn\" (click)=\"removeExample(i)\">×</button>\n          </div>\n          <div [class]=\"example.className\">{{ example.text }}</div>\n        </div>\n      </div>\n    </div>\n  </div>"
        },
        {
            "name": "TypographyExamplesComponent",
            "id": "component-TypographyExamplesComponent-b968384dcd76813bfd8be10f0d7bf02337f6267e568134dea44804348424ff2a04c21c5e1b423a7fc132f1b384126d6e722904150d055914772ded0fca654a6f",
            "file": "src/app/components/typography-examples/typography-examples.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-typography-examples",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./typography-examples.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-typography-examples',\n  imports: [],\n  templateUrl: './typography-examples.component.html',\n  styleUrl: './typography-examples.component.scss'\n})\nexport class TypographyExamplesComponent {\n\n}\n",
            "styleUrl": "./typography-examples.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<h1 class=\"font-size-1100\">Large Heading</h1>\n<p class=\"font-size-100\">Normal text</p>\n\n\n<!-- Using global classes -->\n<p class=\"global-fz-20 global-lh-24\">Text with specific size and line height</p>\n\n<!-- Using semantic scale classes -->\n<p class=\"font-size-100 line-height-200\">Text with semantic scale values</p>\n\n<!-- Using preset combinations -->\n<p class=\"text-preset-1\">Text with preset typography</p>\n\n<p class=\"global-lh-24\">\n    This text will have 24px line height\n  </p>\n\n  <h1 class=\"font-size-500\">\n    <!-- This will be:\n         - 20px on mobile\n         - 24px on desktop -->\n  </h1>\n\n\n  <!-- Using global letter spacing classes -->\n<p class=\"global-ls-normal\">Normal letter spacing</p>\n<p class=\"global-ls-expanded\">Expanded letter spacing</p>\n\n<!-- Using semantic scale classes -->\n<p class=\"letter-spacing-50\">Condensed spacing</p>\n<p class=\"letter-spacing-100\">Normal spacing</p>\n\n<!-- Combining with other typography classes -->\n<p class=\"global-fz-16 global-lh-24 global-ls-normal\">\n  Complete typography control\n</p>\n\n\n<!-- Using global font weight classes -->\n<p class=\"global-fw-400\">Regular text</p>\n<p class=\"global-fw-700\">Bold text</p>\n\n<!-- Using semantic scale classes -->\n<p class=\"font-weight-400\">Regular weight</p>\n<p class=\"font-weight-700\">Bold weight</p>\n\n<!-- Combining all typography classes -->\n<p class=\"global-fz-16 global-lh-24 global-ls-normal global-fw-500\">\n  Complete typography styling\n</p>\n\n<!-- Using semantic classes for all properties -->\n<p class=\"font-size-100 line-height-100 letter-spacing-100 font-weight-500\">\n  Complete semantic styling\n</p>\n\n\n<!-- Example of a heading with complete typography control -->\n<h1 class=\"\n  global-fz-32        /* Font size */\n  global-lh-38        /* Line height */\n  global-ls-normal    /* Letter spacing */\n  global-fw-700       /* Font weight */\n\">\n  Main Heading\n</h1>\n\n<!-- Example of body text -->\n<p class=\"\n  global-fz-16        /* Font size */\n  global-lh-24        /* Line height */\n  global-ls-normal    /* Letter spacing */\n  global-fw-400       /* Font weight */\n\">\n  Regular body text\n</p>\n\n\n<!-- Using global paragraph spacing classes -->\n<p class=\"global-ps-10\">\n    This paragraph has 10px bottom spacing\n  </p>\n  \n  <!-- Using semantic scale classes -->\n  <p class=\"paragraph-spacing-200\">\n    This paragraph uses semantic spacing\n  </p>\n  \n  <!-- Complete typography example -->\n  <p class=\"\n    global-fz-16          /* Font size */\n    global-lh-24          /* Line height */\n    global-ls-normal      /* Letter spacing */\n    global-fw-400         /* Font weight */\n    global-ps-10          /* Paragraph spacing */\n  \">\n    Complete typography control with paragraph spacing\n  </p>\n  \n  <!-- Using semantic classes for everything -->\n  <p class=\"\n    font-size-100\n    line-height-100\n    letter-spacing-100\n    font-weight-400\n    paragraph-spacing-200\n  \">\n    Complete semantic styling with paragraph spacing\n  </p>\n\n\n  <article>\n    <h1 class=\"\n      global-fz-32 \n      global-lh-38 \n      global-fw-700 \n      global-ps-12\n    \">\n      Article Title\n    </h1>\n    \n    <p class=\"\n      global-fz-16 \n      global-lh-24 \n      global-fw-400 \n      global-ps-10\n    \">\n      First paragraph\n    </p>\n    \n    <p class=\"\n      global-fz-16 \n      global-lh-24 \n      global-fw-400 \n      global-ps-10\n    \">\n      Second paragraph\n    </p>\n  </article>\n\n\n  <div class=\"card\">\n    <h2 class=\"\n      global-fz-24 \n      global-lh-32 \n      global-fw-600 \n      global-ps-08\n    \">\n      Card Title\n    </h2>\n    \n    <p class=\"\n      global-fz-16 \n      global-lh-24 \n      global-fw-400 \n      global-ps-00\n    \">\n      Card content with no bottom spacing\n    </p>\n  </div>\n\n\n  <!-- Traditional Unordered List -->\n   <!-- this won't work because display is block -->\n<ul class=\"global-lis-08 list-traditional\">   \n    <li>First item</li>\n    <li>Second item</li>\n    <li>Third item</li>\n  </ul>\n  \n  <!-- Flex List -->\n  <ul class=\"global-lis-16 list-flex\">\n    <li>First item</li>\n    <li>Second item</li>\n    <li>Third item</li>\n  </ul>\n  \n  <!-- Grid List -->\n  <ul class=\"global-lis-24 list-grid\">\n    <li>First item</li>\n    <li>Second item</li>\n    <li>Third item</li>\n  </ul>\n  \n  <!-- Using semantic scale classes -->\n  <ul class=\"list-spacing-100 list-traditional\">\n    <li>First item</li>\n    <li>Second item</li>\n    <li>Third item</li>\n  </ul>\n  \n  <!-- Complete list example with typography -->\n  <ul class=\"\n    global-lis-16\n    list-flex\n  \">\n    <li class=\"\n      global-fz-16\n      global-lh-24\n      global-fw-400\n    \">\n      First item\n    </li>\n    <li class=\"\n      global-fz-16\n      global-lh-24\n      global-fw-400\n    \">\n      Second item\n    </li>\n  </ul>\n  \n  <nav>\n    <ul class=\"global-lis-16 list-flex\">\n      <li><a href=\"#\">Home</a></li>\n      <li><a href=\"#\">About</a></li>\n      <li><a href=\"#\">Contact</a></li>\n    </ul>\n  </nav>\n\n\n  <ul class=\"global-lis-24 list-grid\">\n    <li class=\"card\">Card 1</li>\n    <li class=\"card\">Card 2</li>\n    <li class=\"card\">Card 3</li>\n  </ul>\n  \n\n  <p class=\"fluid-text\">Fluid text example</p>\n\n\n  <!-- Display classes with different weights and letter spacing -->\n<h1 class=\"DisplayXLargeRegular\">Display XL Regular (-1% letter spacing)</h1>\n<h1 class=\"DisplayXLargeMedium\">Display XL Medium (-1% letter spacing)</h1>\n<h1 class=\"DisplayXLargeSemibold\">Display XL SemiBold (0% letter spacing)</h1>\n\n<!-- Other classes with standard letter spacing -->\n<h2 class=\"HeadingLargeRegular\">Heading Large Regular (standard letter spacing)</h2>\n<p class=\"BodyLargeRegular\">Body Large Regular (standard letter spacing)</p>\n\n\n<!-- Border Width -->\n<div class=\"global-bw-thin\">1px border</div>\n<div class=\"global-bw-t-thick\">1.5px top border</div>\n\n<!-- Border Style -->\n<div class=\"global-bs-dashed\">Dashed border</div>\n\n<!-- Border Radius -->\n<div class=\"global-br-medium\">4px border radius all corners</div>\n<div class=\"global-br-t-large\">8px border radius top corners only</div>\n<div class=\"global-br-tl-small\">2px border radius top-left only</div>\n\n<!-- Combined -->\n<div class=\"global-bw-thin global-bs-solid global-br-medium\">\n  1px solid border with 4px border radius\n</div>\n\n\n<!-- Basic elevation classes -->\n<div class=\"global-el-ultraLowRaised\">Ultra Low Elevation</div>\n<div class=\"global-el-lowRaised\">Low Elevation</div>\n<div class=\"global-el-midRaised\">Medium Elevation</div>\n<div class=\"global-el-highRaised\">High Elevation</div>\n<div class=\"global-el-ultraHighRaised\">Ultra High Elevation</div>\n\n<!-- Individual shadow layers -->\n<div class=\"global-el-midRaised-1\">Only first shadow layer</div>\n\n<!-- Using with other utilities -->\n<div class=\"global-el-highRaised global-br-medium\">\n  Elevated card with border radius\n</div>\n\n<!-- Margin -->\n<div class=\"global-m-04\">All sides margin 12px</div>\n<div class=\"global-mx-05\">Horizontal margin 16px</div>\n\n<!-- Padding -->\n<div class=\"global-p-06\">All sides padding 20px</div>\n<div class=\"global-py-07\">Vertical padding 24px</div>\n\n<!-- Gap -->\n<div class=\"global-gap-08\">Gap between flex/grid items 32px</div>\n\n<!-- Gutter -->\n<div class=\"global-gutter-04\">\n  <div>Child elements with 12px padding</div>\n  <div>Child elements with 12px padding</div>\n</div>"
        }
    ],
    "modules": [],
    "miscellaneous": {
        "variables": [
            {
                "name": "appConfig",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/app.config.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "ApplicationConfig",
                "defaultValue": "{\n  providers: [provideZoneChangeDetection({ eventCoalescing: true }), provideRouter(routes), provideAnimations()]\n}"
            }
        ],
        "functions": [],
        "typealiases": [],
        "enumerations": [],
        "groupedVariables": {
            "src/app/app.config.ts": [
                {
                    "name": "appConfig",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/app.config.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ApplicationConfig",
                    "defaultValue": "{\n  providers: [provideZoneChangeDetection({ eventCoalescing: true }), provideRouter(routes), provideAnimations()]\n}"
                }
            ]
        },
        "groupedFunctions": {},
        "groupedEnumerations": {},
        "groupedTypeAliases": {}
    },
    "routes": [],
    "coverage": {
        "count": 0,
        "status": "low",
        "files": [
            {
                "filePath": "src/app/app.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AppComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/app.config.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "appConfig",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/borders-demo/borders-demo.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "BordersDemoComponent",
                "coveragePercent": 0,
                "coverageCount": "0/13",
                "status": "low"
            },
            {
                "filePath": "src/app/components/borders-demo/borders-demo.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "BorderExample",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/components/borders-demo/borders-demo.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "ClassCategory",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/components/colors-demo/colors-demo.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ColorsDemoComponent",
                "coveragePercent": 0,
                "coverageCount": "0/18",
                "status": "low"
            },
            {
                "filePath": "src/app/components/colors-demo/colors-demo.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "ColorCategory",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/components/colors-demo/colors-demo.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "ColorExample",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/components/elevation-demo/elevation-demo.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ElevationDemoComponent",
                "coveragePercent": 0,
                "coverageCount": "0/13",
                "status": "low"
            },
            {
                "filePath": "src/app/components/elevation-demo/elevation-demo.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "ClassCategory",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/components/elevation-demo/elevation-demo.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "ElevationExample",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/components/material-input/material-input.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "MaterialInputComponent",
                "coveragePercent": 0,
                "coverageCount": "0/15",
                "status": "low"
            },
            {
                "filePath": "src/app/components/spacing-demo/spacing-demo.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SpacingDemoComponent",
                "coveragePercent": 0,
                "coverageCount": "0/13",
                "status": "low"
            },
            {
                "filePath": "src/app/components/spacing-demo/spacing-demo.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "ClassCategory",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/components/spacing-demo/spacing-demo.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "SpacingExample",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/components/typography-demo/typography-demo.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TypographyDemoComponent",
                "coveragePercent": 0,
                "coverageCount": "0/13",
                "status": "low"
            },
            {
                "filePath": "src/app/components/typography-demo/typography-demo.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "ClassCategory",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/components/typography-demo/typography-demo.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "TypographyExample",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/components/typography-examples/typography-examples.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TypographyExamplesComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/user.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "User",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            }
        ]
    }
}