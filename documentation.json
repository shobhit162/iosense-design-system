{
    "pipes": [],
    "interfaces": [
        {
            "name": "BorderExample",
            "id": "interface-BorderExample-7b29e29b79f187da3c7890c4451d2a2df8e1aabb26ae91301a3b4d067d5548cf9dd40b9c317165a6f7297c592c8eb2cc758d1bd49d282817d3a805093efba37b",
            "file": "src/app/components/borders-demo/borders-demo.component.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { CommonModule } from '@angular/common';\nimport { Component } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\n\ninterface BorderExample {\n  className: string;\n  text: string;\n}\n\n@Component({\n  selector: 'app-borders-demo',\n  standalone: true,\n  imports: [FormsModule, CommonModule],\n  templateUrl: './borders-demo.component.html',\n  styleUrl: './borders-demo.component.scss'\n})\nexport class BordersDemoComponent {\n  manualClass = '';\n  customText = '';\n  examples: BorderExample[] = [];\n  defaultText = 'Border Example';\n  \n  commonPresets = [\n    // Border Width Classes\n    'global-bw-none',\n    'global-bw-thinner',\n    'global-bw-thin',\n    'global-bw-thick',\n    'global-bw-thicker',\n    'global-bw-t-thin',\n    'global-bw-r-thin',\n    'global-bw-b-thin',\n    'global-bw-l-thin',\n    \n    // Border Style Classes\n    'global-bs-solid',\n    'global-bs-dashed',\n    'global-bs-dotted',\n    'global-bs-double',\n    'global-bs-none',\n    \n    // Border Radius Classes\n    'global-br-none',\n    'global-br-xsmall',\n    'global-br-small',\n    'global-br-medium',\n    'global-br-large',\n    'global-br-xlarge',\n    'global-br-2xlarge',\n    'global-br-max',\n    \n    // Individual Corner Border Radius\n    'global-br-tl-medium',\n    'global-br-tr-medium',\n    'global-br-bl-medium',\n    'global-br-br-medium',\n    \n    // Combined Corner Border Radius\n    'global-br-t-medium',\n    'global-br-b-medium',\n    'global-br-l-medium',\n    'global-br-r-medium'\n  ];\n\n  addClass() {\n    if (this.manualClass) {\n      this.examples.unshift({\n        className: this.manualClass,\n        text: this.customText\n      });\n      this.manualClass = '';\n      this.customText = '';\n    }\n  }\n\n  addPreset(preset: string) {\n    this.examples.unshift({\n      className: preset,\n      text: this.defaultText\n    });\n  }\n\n  removeExample(index: number) {\n    this.examples.splice(index, 1);\n  }\n}\n",
            "properties": [
                {
                    "name": "className",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "text",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 7
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "ElevationExample",
            "id": "interface-ElevationExample-c17702537fb171b06a64cf1d2208645099b72af05a52469e7a25c526e79bb16f32bd0851704926daa764b9a27c4f31e61b860a9b39c4744b1a6e68bf5abb8e9b",
            "file": "src/app/components/elevation-demo/elevation-demo.component.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { CommonModule } from '@angular/common';\nimport { Component } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\n\ninterface ElevationExample {\n  className: string;\n  text: string;\n}\n\n@Component({\n  selector: 'app-elevation-demo',\n  standalone: true,\n  imports: [FormsModule, CommonModule],\n  templateUrl: './elevation-demo.component.html',\n  styleUrl: './elevation-demo.component.scss'\n})\nexport class ElevationDemoComponent {\n  manualClass = '';\n  customText = '';\n  examples: ElevationExample[] = [];\n  defaultText = 'Elevation Example';\n  \n  commonPresets = [\n    'global-el-ultraLowRaised',\n    'global-el-lowRaised',\n    'global-el-midRaised',\n    'global-el-highRaised',\n    'global-el-ultraHighRaised',\n    'global-el-ultraLowRaised-1',\n    'global-el-ultraLowRaised-2',\n    'global-el-ultraLowRaised-3',\n    'global-el-lowRaised-1',\n    'global-el-lowRaised-2',\n    'global-el-lowRaised-3'\n  ];\n\n  addClass() {\n    if (this.manualClass) {\n      this.examples.unshift({\n        className: this.manualClass,\n        text: this.customText\n      });\n      this.manualClass = '';\n      this.customText = '';\n    }\n  }\n\n  addPreset(preset: string) {\n    this.examples.unshift({\n      className: preset,\n      text: this.defaultText\n    });\n  }\n\n  removeExample(index: number) {\n    this.examples.splice(index, 1);\n  }\n}\n",
            "properties": [
                {
                    "name": "className",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "text",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 7
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "SpacingExample",
            "id": "interface-SpacingExample-c2e5d6932563520f1c931a229fae0863ed9b0b97d7b4704ef09866efb92fe132c83c04e61b9e71a16c0f3c6bf2df9035f4887d72dd36ba4e0a3dcf61be8b90f8",
            "file": "src/app/components/spacing-demo/spacing-demo.component.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { CommonModule } from '@angular/common';\nimport { Component } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\n\ninterface SpacingExample {\n  className: string;\n  text: string;\n}\n\n@Component({\n  selector: 'app-spacing-demo',\n  standalone: true,\n  imports: [FormsModule, CommonModule],\n  templateUrl: './spacing-demo.component.html',\n  styleUrl: './spacing-demo.component.scss'\n})\nexport class SpacingDemoComponent {\n  manualClass = '';\n  customText = '';\n  examples: SpacingExample[] = [];\n  defaultText = 'Spacing Example';\n  \n  commonPresets = [\n    'global-m-00',\n    'global-m-01',\n    'global-m-02',\n    'global-m-03',\n    'global-m-04',\n    'global-m-05',\n    'global-m-06',\n    'global-m-07',\n    'global-m-08',\n    'global-m-09',\n    'global-m-10',\n    'global-m-11',\n    'global-p-00',\n    'global-p-01',\n    'global-p-02',\n    'global-p-03',\n    'global-p-04',\n    'global-p-05',\n    'global-p-06',\n    'global-p-07',\n    'global-p-08',\n    'global-p-09',\n    'global-p-10',\n    'global-p-11',\n    'global-gap-00',\n    'global-gap-01',\n    'global-gap-02',\n    'global-gap-03',\n    'global-gap-04',\n    'global-gap-05',\n    'global-gap-06',\n    'global-gap-07',\n    'global-gap-08',\n    'global-gap-09',\n    'global-gap-10',\n    'global-gap-11'\n  ];\n\n  addClass() {\n    if (this.manualClass) {\n      this.examples.unshift({\n        className: this.manualClass,\n        text: this.customText\n      });\n      this.manualClass = '';\n      this.customText = '';\n    }\n  }\n\n  addPreset(preset: string) {\n    this.examples.unshift({\n      className: preset,\n      text: this.defaultText\n    });\n  }\n\n  removeExample(index: number) {\n    this.examples.splice(index, 1);\n  }\n}\n",
            "properties": [
                {
                    "name": "className",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "text",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 7
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "TypographyExample",
            "id": "interface-TypographyExample-f61368c8e51d5d877965aa0e8cb702afd1fad6674024e1eb100883ef3734ab8f5a10f4af7576d3a66643d9285e1cc134c9466a621b7182cafe6ff064ac2967d7",
            "file": "src/app/components/typography-demo/typography-demo.component.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { CommonModule } from '@angular/common';\nimport { Component } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\n\ninterface TypographyExample {\n  className: string;\n  text: string;\n}\n\n@Component({\n  selector: 'app-typography-demo',\n  imports: [FormsModule, CommonModule],\n  templateUrl: './typography-demo.component.html',\n  styleUrl: './typography-demo.component.scss'\n})\n\nexport class TypographyDemoComponent {\n  manualClass = '';\n  customText = '';\n  examples: TypographyExample[] = [];\n  defaultText = 'Hello, Faclon!';\n  \n  commonPresets = [\n    'DisplayXLargeRegular',\n    'DisplayLargeMedium',\n    'DisplayMediumSemibold',\n    'HeadingLargeRegular',\n    'BodyLargeRegular',\n    'BodyMediumMedium',\n    'BodySmallSemibold'\n  ];\n\n  addClass() {\n    if (this.manualClass) {\n      this.examples.unshift({\n        className: this.manualClass,\n        text: this.customText\n      });\n      this.manualClass = '';\n      this.customText = '';\n    }\n  }\n\n  addPreset(preset: string) {\n    this.examples.unshift({\n      className: preset,\n      text: this.defaultText\n    });\n  }\n\n  removeExample(index: number) {\n    this.examples.splice(index, 1);\n  }\n}\n",
            "properties": [
                {
                    "name": "className",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "text",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 7
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "User",
            "id": "interface-User-d4821beac0e4a852e513391b7470981c4353fdd95a18628bb68136c8695b489ee15b926e2e5031bc26cf30e1508e0a362c3ee13a06734702b4d15af140e485d5",
            "file": "src/stories/user.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface User {\n  name: string;\n}\n",
            "properties": [
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 2
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        }
    ],
    "injectables": [],
    "guards": [],
    "interceptors": [],
    "classes": [],
    "directives": [],
    "components": [
        {
            "name": "AppComponent",
            "id": "component-AppComponent-40412b7d06c4158e40d8ce15170fa1ed57c0965806115cc1a20db7137b41742f4416801561eb141a22bcf2cc3b58067253956991f09ccf4d64add67c2c31897f",
            "file": "src/app/app.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-root",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./app.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "isSidebarOpen",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "title",
                    "defaultValue": "'iosense-design-system'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 14
                }
            ],
            "methodsClass": [
                {
                    "name": "toggleSidebar",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 17,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "RouterOutlet"
                },
                {
                    "name": "RouterLink"
                },
                {
                    "name": "RouterLinkActive"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { RouterOutlet, RouterLink, RouterLinkActive } from '@angular/router';\nimport { TypographyExamplesComponent } from './components/typography-examples/typography-examples.component';\nimport { TypographyDemoComponent } from './components/typography-demo/typography-demo.component';\n\n@Component({\n  selector: 'app-root',\n  standalone: true,\n  imports: [RouterOutlet, RouterLink, RouterLinkActive],\n  templateUrl: './app.component.html',\n  styleUrl: './app.component.scss'\n})\nexport class AppComponent {\n  title = 'iosense-design-system';\n  isSidebarOpen = false;\n\n  toggleSidebar() {\n    this.isSidebarOpen = !this.isSidebarOpen;\n  }\n}\n",
            "styleUrl": "./app.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<div class=\"app-container\">\n  <button class=\"sidebar-toggle\" (click)=\"toggleSidebar()\">\n    <span class=\"hamburger\"></span>\n    <span class=\"hamburger\"></span>\n    <span class=\"hamburger\"></span>\n  </button>\n  \n  <nav class=\"sidebar\" [class.open]=\"isSidebarOpen\">\n    <ul>\n      <li><a routerLink=\"/typography\" routerLinkActive=\"active\" (click)=\"toggleSidebar()\">Typography</a></li>\n      <li><a routerLink=\"/borders\" routerLinkActive=\"active\" (click)=\"toggleSidebar()\">Borders</a></li>\n      <li><a routerLink=\"/elevation\" routerLinkActive=\"active\" (click)=\"toggleSidebar()\">Elevation</a></li>\n      <li><a routerLink=\"/spacing\" routerLinkActive=\"active\" (click)=\"toggleSidebar()\">Spacing</a></li>\n    </ul>\n  </nav>\n  \n  <div class=\"main-wrapper\">\n    <header class=\"app-header\">\n      <h1>Faclon Design System Testing</h1>\n    </header>\n    <main class=\"content\">\n      <router-outlet></router-outlet>\n    </main>\n  </div>\n</div>"
        },
        {
            "name": "BordersDemoComponent",
            "id": "component-BordersDemoComponent-7b29e29b79f187da3c7890c4451d2a2df8e1aabb26ae91301a3b4d067d5548cf9dd40b9c317165a6f7297c592c8eb2cc758d1bd49d282817d3a805093efba37b",
            "file": "src/app/components/borders-demo/borders-demo.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-borders-demo",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./borders-demo.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "commonPresets",
                    "defaultValue": "[\n    // Border Width Classes\n    'global-bw-none',\n    'global-bw-thinner',\n    'global-bw-thin',\n    'global-bw-thick',\n    'global-bw-thicker',\n    'global-bw-t-thin',\n    'global-bw-r-thin',\n    'global-bw-b-thin',\n    'global-bw-l-thin',\n    \n    // Border Style Classes\n    'global-bs-solid',\n    'global-bs-dashed',\n    'global-bs-dotted',\n    'global-bs-double',\n    'global-bs-none',\n    \n    // Border Radius Classes\n    'global-br-none',\n    'global-br-xsmall',\n    'global-br-small',\n    'global-br-medium',\n    'global-br-large',\n    'global-br-xlarge',\n    'global-br-2xlarge',\n    'global-br-max',\n    \n    // Individual Corner Border Radius\n    'global-br-tl-medium',\n    'global-br-tr-medium',\n    'global-br-bl-medium',\n    'global-br-br-medium',\n    \n    // Combined Corner Border Radius\n    'global-br-t-medium',\n    'global-br-b-medium',\n    'global-br-l-medium',\n    'global-br-r-medium'\n  ]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 23
                },
                {
                    "name": "customText",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "defaultText",
                    "defaultValue": "'Border Example'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 21
                },
                {
                    "name": "examples",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "BorderExample[]",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 20
                },
                {
                    "name": "manualClass",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 18
                }
            ],
            "methodsClass": [
                {
                    "name": "addClass",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 65,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "addPreset",
                    "args": [
                        {
                            "name": "preset",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 76,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "preset",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "removeExample",
                    "args": [
                        {
                            "name": "index",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 83,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "index",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "FormsModule",
                    "type": "module"
                },
                {
                    "name": "CommonModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\nimport { Component } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\n\ninterface BorderExample {\n  className: string;\n  text: string;\n}\n\n@Component({\n  selector: 'app-borders-demo',\n  standalone: true,\n  imports: [FormsModule, CommonModule],\n  templateUrl: './borders-demo.component.html',\n  styleUrl: './borders-demo.component.scss'\n})\nexport class BordersDemoComponent {\n  manualClass = '';\n  customText = '';\n  examples: BorderExample[] = [];\n  defaultText = 'Border Example';\n  \n  commonPresets = [\n    // Border Width Classes\n    'global-bw-none',\n    'global-bw-thinner',\n    'global-bw-thin',\n    'global-bw-thick',\n    'global-bw-thicker',\n    'global-bw-t-thin',\n    'global-bw-r-thin',\n    'global-bw-b-thin',\n    'global-bw-l-thin',\n    \n    // Border Style Classes\n    'global-bs-solid',\n    'global-bs-dashed',\n    'global-bs-dotted',\n    'global-bs-double',\n    'global-bs-none',\n    \n    // Border Radius Classes\n    'global-br-none',\n    'global-br-xsmall',\n    'global-br-small',\n    'global-br-medium',\n    'global-br-large',\n    'global-br-xlarge',\n    'global-br-2xlarge',\n    'global-br-max',\n    \n    // Individual Corner Border Radius\n    'global-br-tl-medium',\n    'global-br-tr-medium',\n    'global-br-bl-medium',\n    'global-br-br-medium',\n    \n    // Combined Corner Border Radius\n    'global-br-t-medium',\n    'global-br-b-medium',\n    'global-br-l-medium',\n    'global-br-r-medium'\n  ];\n\n  addClass() {\n    if (this.manualClass) {\n      this.examples.unshift({\n        className: this.manualClass,\n        text: this.customText\n      });\n      this.manualClass = '';\n      this.customText = '';\n    }\n  }\n\n  addPreset(preset: string) {\n    this.examples.unshift({\n      className: preset,\n      text: this.defaultText\n    });\n  }\n\n  removeExample(index: number) {\n    this.examples.splice(index, 1);\n  }\n}\n",
            "styleUrl": "./borders-demo.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<div class=\"borders-demo\">\n  <div class=\"input-section\">\n    <div class=\"manual-input\">\n      <h3>Test Border Classes</h3>\n      <div class=\"input-group\">\n        <input \n          type=\"text\" \n          [(ngModel)]=\"manualClass\" \n          placeholder=\"Enter class name (e.g., border-all)\"\n          (keyup.enter)=\"addClass()\"\n        >\n        <input \n          type=\"text\" \n          [(ngModel)]=\"customText\" \n          placeholder=\"Enter custom text (optional)\"\n          (keyup.enter)=\"addClass()\"\n        >\n        <button (click)=\"addClass()\">Add Example</button>\n      </div>\n    </div>\n\n    <div class=\"quick-access\">\n      <h4>Quick Access</h4>\n      <div class=\"button-group\">\n        <button *ngFor=\"let preset of commonPresets\" \n                (click)=\"addPreset(preset)\"\n                [title]=\"preset\">\n          {{preset}}\n        </button>\n      </div>\n    </div>\n  </div>\n  \n  <div class=\"examples-section\">\n    <h3>Live Examples</h3>\n    <div class=\"examples-list\">\n      <div *ngFor=\"let example of examples; let i = index\" class=\"example-item\">\n        <div class=\"example-header\">\n          <code>{{example.className}}</code>\n          <button class=\"remove-btn\" (click)=\"removeExample(i)\">×</button>\n        </div>\n        <div [class]=\"example.className\" class=\"border-example\">\n          {{example.text || defaultText}}\n        </div>\n      </div>\n    </div>\n  </div>\n</div>"
        },
        {
            "name": "ButtonComponent",
            "id": "component-ButtonComponent-d7bf0323e6da130e2609e2af0117b4a8d7cd874132206af50bf43dfc37044485fe50f2867ea76525730dd195b9b95a43802a12dadc6ad5cd7bf2faa07f19f0da",
            "file": "src/stories/button.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-button",
            "styleUrls": [
                "./button.css"
            ],
            "styles": [],
            "template": " <button  type=\"button\"\n  (click)=\"onClick.emit($event)\"\n  [ngClass]=\"classes\"\n  [ngStyle]=\"{ 'background-color': backgroundColor }\"\n>\n  {{ label }}\n</button>",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "backgroundColor",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\nWhat background color to use",
                    "description": "<p>What background color to use</p>\n",
                    "line": 25,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "label",
                    "defaultValue": "'Button'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "pos": 760,
                            "end": 773,
                            "kind": 327,
                            "id": 0,
                            "flags": 16842752,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "tagName": {
                                "pos": 761,
                                "end": 769,
                                "kind": 80,
                                "id": 0,
                                "flags": 16842752,
                                "transformFlags": 0,
                                "escapedText": "required"
                            },
                            "comment": ""
                        }
                    ],
                    "rawdescription": "\n\nButton contents\n\n",
                    "description": "<p>Button contents</p>\n",
                    "line": 37,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "primary",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\nIs this the principal call to action on the page?",
                    "description": "<p>Is this the principal call to action on the page?</p>\n",
                    "line": 21,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "size",
                    "defaultValue": "'medium'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\nHow large should the button be?",
                    "description": "<p>How large should the button be?</p>\n",
                    "line": 29,
                    "type": "\"small\" | \"medium\" | \"large\"",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "onClick",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\nOptional click handler",
                    "description": "<p>Optional click handler</p>\n",
                    "line": 41,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\nimport { Component, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'storybook-button',\n  standalone: true,\n  imports: [CommonModule],\n  template: ` <button\n  type=\"button\"\n  (click)=\"onClick.emit($event)\"\n  [ngClass]=\"classes\"\n  [ngStyle]=\"{ 'background-color': backgroundColor }\"\n>\n  {{ label }}\n</button>`,\n  styleUrls: ['./button.css'],\n})\nexport class ButtonComponent {\n  /** Is this the principal call to action on the page? */\n  @Input()\n  primary = false;\n\n  /** What background color to use */\n  @Input()\n  backgroundColor?: string;\n\n  /** How large should the button be? */\n  @Input()\n  size: 'small' | 'medium' | 'large' = 'medium';\n\n  /**\n   * Button contents\n   *\n   * @required\n   */\n  @Input()\n  label = 'Button';\n\n  /** Optional click handler */\n  @Output()\n  onClick = new EventEmitter<Event>();\n\n  public get classes(): string[] {\n    const mode = this.primary ? 'storybook-button--primary' : 'storybook-button--secondary';\n\n    return ['storybook-button', `storybook-button--${this.size}`, mode];\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".storybook-button {\n  display: inline-block;\n  cursor: pointer;\n  border: 0;\n  border-radius: 3em;\n  font-weight: 700;\n  line-height: 1;\n  font-family: 'Nunito Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;\n}\n.storybook-button--primary {\n  background-color: #555ab9;\n  color: white;\n}\n.storybook-button--secondary {\n  box-shadow: rgba(0, 0, 0, 0.15) 0px 0px 0px 1px inset;\n  background-color: transparent;\n  color: #333;\n}\n.storybook-button--small {\n  padding: 10px 16px;\n  font-size: 12px;\n}\n.storybook-button--medium {\n  padding: 11px 20px;\n  font-size: 14px;\n}\n.storybook-button--large {\n  padding: 12px 24px;\n  font-size: 16px;\n}\n",
                    "styleUrl": "./button.css"
                }
            ],
            "stylesData": "",
            "extends": [],
            "accessors": {
                "classes": {
                    "name": "classes",
                    "getSignature": {
                        "name": "classes",
                        "type": "[]",
                        "returnType": "string[]",
                        "line": 43
                    }
                }
            }
        },
        {
            "name": "ElevationDemoComponent",
            "id": "component-ElevationDemoComponent-c17702537fb171b06a64cf1d2208645099b72af05a52469e7a25c526e79bb16f32bd0851704926daa764b9a27c4f31e61b860a9b39c4744b1a6e68bf5abb8e9b",
            "file": "src/app/components/elevation-demo/elevation-demo.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-elevation-demo",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./elevation-demo.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "commonPresets",
                    "defaultValue": "[\n    'global-el-ultraLowRaised',\n    'global-el-lowRaised',\n    'global-el-midRaised',\n    'global-el-highRaised',\n    'global-el-ultraHighRaised',\n    'global-el-ultraLowRaised-1',\n    'global-el-ultraLowRaised-2',\n    'global-el-ultraLowRaised-3',\n    'global-el-lowRaised-1',\n    'global-el-lowRaised-2',\n    'global-el-lowRaised-3'\n  ]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 23
                },
                {
                    "name": "customText",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "defaultText",
                    "defaultValue": "'Elevation Example'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 21
                },
                {
                    "name": "examples",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ElevationExample[]",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 20
                },
                {
                    "name": "manualClass",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 18
                }
            ],
            "methodsClass": [
                {
                    "name": "addClass",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 37,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "addPreset",
                    "args": [
                        {
                            "name": "preset",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 48,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "preset",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "removeExample",
                    "args": [
                        {
                            "name": "index",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 55,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "index",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "FormsModule",
                    "type": "module"
                },
                {
                    "name": "CommonModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\nimport { Component } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\n\ninterface ElevationExample {\n  className: string;\n  text: string;\n}\n\n@Component({\n  selector: 'app-elevation-demo',\n  standalone: true,\n  imports: [FormsModule, CommonModule],\n  templateUrl: './elevation-demo.component.html',\n  styleUrl: './elevation-demo.component.scss'\n})\nexport class ElevationDemoComponent {\n  manualClass = '';\n  customText = '';\n  examples: ElevationExample[] = [];\n  defaultText = 'Elevation Example';\n  \n  commonPresets = [\n    'global-el-ultraLowRaised',\n    'global-el-lowRaised',\n    'global-el-midRaised',\n    'global-el-highRaised',\n    'global-el-ultraHighRaised',\n    'global-el-ultraLowRaised-1',\n    'global-el-ultraLowRaised-2',\n    'global-el-ultraLowRaised-3',\n    'global-el-lowRaised-1',\n    'global-el-lowRaised-2',\n    'global-el-lowRaised-3'\n  ];\n\n  addClass() {\n    if (this.manualClass) {\n      this.examples.unshift({\n        className: this.manualClass,\n        text: this.customText\n      });\n      this.manualClass = '';\n      this.customText = '';\n    }\n  }\n\n  addPreset(preset: string) {\n    this.examples.unshift({\n      className: preset,\n      text: this.defaultText\n    });\n  }\n\n  removeExample(index: number) {\n    this.examples.splice(index, 1);\n  }\n}\n",
            "styleUrl": "./elevation-demo.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<div class=\"elevation-demo\">\n  <div class=\"input-section\">\n    <div class=\"manual-input\">\n      <h3>Test Elevation Classes</h3>\n      <div class=\"input-group\">\n        <input \n          type=\"text\" \n          [(ngModel)]=\"manualClass\" \n          placeholder=\"Enter class name (e.g., elevation-1)\"\n          (keyup.enter)=\"addClass()\"\n        >\n        <input \n          type=\"text\" \n          [(ngModel)]=\"customText\" \n          placeholder=\"Enter custom text (optional)\"\n          (keyup.enter)=\"addClass()\"\n        >\n        <button (click)=\"addClass()\">Add Example</button>\n      </div>\n    </div>\n\n    <div class=\"quick-access\">\n      <h4>Quick Access</h4>\n      <div class=\"button-group\">\n        <button *ngFor=\"let preset of commonPresets\" \n                (click)=\"addPreset(preset)\"\n                [title]=\"preset\">\n          {{preset}}\n        </button>\n      </div>\n    </div>\n  </div>\n  \n  <div class=\"examples-section\">\n    <h3>Live Examples</h3>\n    <div class=\"examples-list\">\n      <div *ngFor=\"let example of examples; let i = index\" class=\"example-item\">\n        <div class=\"example-header\">\n          <code>{{example.className}}</code>\n          <button class=\"remove-btn\" (click)=\"removeExample(i)\">×</button>\n        </div>\n        <div [class]=\"example.className\" class=\"elevation-example\">\n          {{example.text || defaultText}}\n        </div>\n      </div>\n    </div>\n  </div>\n</div>"
        },
        {
            "name": "HeaderComponent",
            "id": "component-HeaderComponent-48b9abe37706bc42f20cfa97ed9f943678344ea7d254c0c82183c657750c2191b43486fe730c778627b2ea6aa0e2f33a7abcf3ce08b68ad18b062ad99ea97acb",
            "file": "src/stories/header.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-header",
            "styleUrls": [
                "./header.css"
            ],
            "styles": [],
            "template": "<header>  <div class=\"storybook-header\">\n    <div>\n      <svg width=\"32\" height=\"32\" viewBox=\"0 0 32 32\" xmlns=\"http://www.w3.org/2000/svg\">\n        <g fill=\"none\" fillRule=\"evenodd\">\n          <path\n            d=\"M10 0h12a10 10 0 0110 10v12a10 10 0 01-10 10H10A10 10 0 010 22V10A10 10 0 0110 0z\"\n            fill=\"#FFF\"\n          />\n          <path\n            d=\"M5.3 10.6l10.4 6v11.1l-10.4-6v-11zm11.4-6.2l9.7 5.5-9.7 5.6V4.4z\"\n            fill=\"#555AB9\"\n          />\n          <path d=\"M27.2 10.6v11.2l-10.5 6V16.5l10.5-6zM15.7 4.4v11L6 10l9.7-5.5z\" fill=\"#91BAF8\" />\n        </g>\n      </svg>\n      <h1>Acme</h1>\n    </div>\n    <div>\n      <div *ngIf=\"user\">\n        <span class=\"welcome\">\n          Welcome, <b>{{ user.name }}</b\n          >!\n        </span>\n        <storybook-button\n          *ngIf=\"user\"\n          size=\"small\"\n          (onClick)=\"onLogout.emit($event)\"\n          label=\"Log out\"\n        ></storybook-button>\n      </div>\n      <div *ngIf=\"!user\">\n        <storybook-button\n          *ngIf=\"!user\"\n          size=\"small\"\n          class=\"margin-left\"\n          (onClick)=\"onLogin.emit($event)\"\n          label=\"Log in\"\n        ></storybook-button>\n        <storybook-button\n          *ngIf=\"!user\"\n          size=\"small\"\n          [primary]=\"true\"\n          class=\"margin-left\"\n          (onClick)=\"onCreateAccount.emit($event)\"\n          label=\"Sign up\"\n        ></storybook-button>\n      </div>\n    </div>\n  </div>\n</header>",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "user",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 66,
                    "type": "User | null",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "onCreateAccount",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 75,
                    "type": "EventEmitter"
                },
                {
                    "name": "onLogin",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 69,
                    "type": "EventEmitter"
                },
                {
                    "name": "onLogout",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 72,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "ButtonComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ButtonComponent } from './button.component';\nimport type { User } from './user';\n\n@Component({\n  selector: 'storybook-header',\n  standalone: true,\n  imports: [CommonModule, ButtonComponent],\n  template: `<header>\n  <div class=\"storybook-header\">\n    <div>\n      <svg width=\"32\" height=\"32\" viewBox=\"0 0 32 32\" xmlns=\"http://www.w3.org/2000/svg\">\n        <g fill=\"none\" fillRule=\"evenodd\">\n          <path\n            d=\"M10 0h12a10 10 0 0110 10v12a10 10 0 01-10 10H10A10 10 0 010 22V10A10 10 0 0110 0z\"\n            fill=\"#FFF\"\n          />\n          <path\n            d=\"M5.3 10.6l10.4 6v11.1l-10.4-6v-11zm11.4-6.2l9.7 5.5-9.7 5.6V4.4z\"\n            fill=\"#555AB9\"\n          />\n          <path d=\"M27.2 10.6v11.2l-10.5 6V16.5l10.5-6zM15.7 4.4v11L6 10l9.7-5.5z\" fill=\"#91BAF8\" />\n        </g>\n      </svg>\n      <h1>Acme</h1>\n    </div>\n    <div>\n      <div *ngIf=\"user\">\n        <span class=\"welcome\">\n          Welcome, <b>{{ user.name }}</b\n          >!\n        </span>\n        <storybook-button\n          *ngIf=\"user\"\n          size=\"small\"\n          (onClick)=\"onLogout.emit($event)\"\n          label=\"Log out\"\n        ></storybook-button>\n      </div>\n      <div *ngIf=\"!user\">\n        <storybook-button\n          *ngIf=\"!user\"\n          size=\"small\"\n          class=\"margin-left\"\n          (onClick)=\"onLogin.emit($event)\"\n          label=\"Log in\"\n        ></storybook-button>\n        <storybook-button\n          *ngIf=\"!user\"\n          size=\"small\"\n          [primary]=\"true\"\n          class=\"margin-left\"\n          (onClick)=\"onCreateAccount.emit($event)\"\n          label=\"Sign up\"\n        ></storybook-button>\n      </div>\n    </div>\n  </div>\n</header>`,\n  styleUrls: ['./header.css'],\n})\nexport class HeaderComponent {\n  @Input()\n  user: User | null = null;\n\n  @Output()\n  onLogin = new EventEmitter<Event>();\n\n  @Output()\n  onLogout = new EventEmitter<Event>();\n\n  @Output()\n  onCreateAccount = new EventEmitter<Event>();\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".storybook-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  border-bottom: 1px solid rgba(0, 0, 0, 0.1);\n  padding: 15px 20px;\n  font-family: 'Nunito Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;\n}\n\n.storybook-header svg {\n  display: inline-block;\n  vertical-align: top;\n}\n\n.storybook-header h1 {\n  display: inline-block;\n  vertical-align: top;\n  margin: 6px 0 6px 10px;\n  font-weight: 700;\n  font-size: 20px;\n  line-height: 1;\n}\n\n.storybook-header button + button {\n  margin-left: 10px;\n}\n\n.storybook-header .welcome {\n  margin-right: 10px;\n  color: #333;\n  font-size: 14px;\n}\n",
                    "styleUrl": "./header.css"
                }
            ],
            "stylesData": "",
            "extends": []
        },
        {
            "name": "PageComponent",
            "id": "component-PageComponent-21dd6eb370b4983b5c21c84d40e6f54d266a9d9af9889e6e76b35c43058bd53b3e451bad089d5adf4bea46647ba10265a2fa8cb15630398e75636307d4817fc6",
            "file": "src/stories/page.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-page",
            "styleUrls": [
                "./page.css"
            ],
            "styles": [],
            "template": "<article>  <storybook-header\n    [user]=\"user\"\n    (onLogout)=\"doLogout()\"\n    (onLogin)=\"doLogin()\"\n    (onCreateAccount)=\"doCreateAccount()\"\n  ></storybook-header>\n  <section class=\"storybook-page\">\n    <h2>Pages in Storybook</h2>\n    <p>\n      We recommend building UIs with a\n      <a href=\"https://componentdriven.org\" target=\"_blank\" rel=\"noopener noreferrer\">\n        <strong>component-driven</strong>\n      </a>\n      process starting with atomic components and ending with pages.\n    </p>\n    <p>\n      Render pages with mock data. This makes it easy to build and review page states without\n      needing to navigate to them in your app. Here are some handy patterns for managing page data\n      in Storybook:\n    </p>\n    <ul>\n      <li>\n        Use a higher-level connected component. Storybook helps you compose such data from the\n        \"args\" of child component stories\n      </li>\n      <li>\n        Assemble data in the page component from your services. You can mock these services out\n        using Storybook.\n      </li>\n    </ul>\n    <p>\n      Get a guided tutorial on component-driven development at\n      <a href=\"https://storybook.js.org/tutorials/\" target=\"_blank\" rel=\"noopener noreferrer\">\n        Storybook tutorials\n      </a>\n      . Read more in the\n      <a href=\"https://storybook.js.org/docs\" target=\"_blank\" rel=\"noopener noreferrer\"> docs </a>\n      .\n    </p>\n    <div class=\"tip-wrapper\">\n      <span class=\"tip\">Tip</span> Adjust the width of the canvas with the\n      <svg width=\"10\" height=\"10\" viewBox=\"0 0 12 12\" xmlns=\"http://www.w3.org/2000/svg\">\n        <g fill=\"none\" fillRule=\"evenodd\">\n          <path\n            d=\"M1.5 5.2h4.8c.3 0 .5.2.5.4v5.1c-.1.2-.3.3-.4.3H1.4a.5.5 0 01-.5-.4V5.7c0-.3.2-.5.5-.5zm0-2.1h6.9c.3 0 .5.2.5.4v7a.5.5 0 01-1 0V4H1.5a.5.5 0 010-1zm0-2.1h9c.3 0 .5.2.5.4v9.1a.5.5 0 01-1 0V2H1.5a.5.5 0 010-1zm4.3 5.2H2V10h3.8V6.2z\"\n            id=\"a\"\n            fill=\"#999\"\n          />\n        </g>\n      </svg>\n      Viewports addon in the toolbar\n    </div>\n  </section>\n</article>",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "user",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "User | null",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 69
                }
            ],
            "methodsClass": [
                {
                    "name": "doCreateAccount",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 79,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "doLogin",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 75,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "doLogout",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 71,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "HeaderComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { HeaderComponent } from './header.component';\nimport type { User } from './user';\n\n@Component({\n  selector: 'storybook-page',\n  standalone: true,\n  imports: [CommonModule, HeaderComponent],\n  template: `<article>\n  <storybook-header\n    [user]=\"user\"\n    (onLogout)=\"doLogout()\"\n    (onLogin)=\"doLogin()\"\n    (onCreateAccount)=\"doCreateAccount()\"\n  ></storybook-header>\n  <section class=\"storybook-page\">\n    <h2>Pages in Storybook</h2>\n    <p>\n      We recommend building UIs with a\n      <a href=\"https://componentdriven.org\" target=\"_blank\" rel=\"noopener noreferrer\">\n        <strong>component-driven</strong>\n      </a>\n      process starting with atomic components and ending with pages.\n    </p>\n    <p>\n      Render pages with mock data. This makes it easy to build and review page states without\n      needing to navigate to them in your app. Here are some handy patterns for managing page data\n      in Storybook:\n    </p>\n    <ul>\n      <li>\n        Use a higher-level connected component. Storybook helps you compose such data from the\n        \"args\" of child component stories\n      </li>\n      <li>\n        Assemble data in the page component from your services. You can mock these services out\n        using Storybook.\n      </li>\n    </ul>\n    <p>\n      Get a guided tutorial on component-driven development at\n      <a href=\"https://storybook.js.org/tutorials/\" target=\"_blank\" rel=\"noopener noreferrer\">\n        Storybook tutorials\n      </a>\n      . Read more in the\n      <a href=\"https://storybook.js.org/docs\" target=\"_blank\" rel=\"noopener noreferrer\"> docs </a>\n      .\n    </p>\n    <div class=\"tip-wrapper\">\n      <span class=\"tip\">Tip</span> Adjust the width of the canvas with the\n      <svg width=\"10\" height=\"10\" viewBox=\"0 0 12 12\" xmlns=\"http://www.w3.org/2000/svg\">\n        <g fill=\"none\" fillRule=\"evenodd\">\n          <path\n            d=\"M1.5 5.2h4.8c.3 0 .5.2.5.4v5.1c-.1.2-.3.3-.4.3H1.4a.5.5 0 01-.5-.4V5.7c0-.3.2-.5.5-.5zm0-2.1h6.9c.3 0 .5.2.5.4v7a.5.5 0 01-1 0V4H1.5a.5.5 0 010-1zm0-2.1h9c.3 0 .5.2.5.4v9.1a.5.5 0 01-1 0V2H1.5a.5.5 0 010-1zm4.3 5.2H2V10h3.8V6.2z\"\n            id=\"a\"\n            fill=\"#999\"\n          />\n        </g>\n      </svg>\n      Viewports addon in the toolbar\n    </div>\n  </section>\n</article>`,\n  styleUrls: ['./page.css'],\n})\nexport class PageComponent {\n  user: User | null = null;\n\n  doLogout() {\n    this.user = null;\n  }\n\n  doLogin() {\n    this.user = { name: 'Jane Doe' };\n  }\n\n  doCreateAccount() {\n    this.user = { name: 'Jane Doe' };\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".storybook-page {\n  margin: 0 auto;\n  padding: 48px 20px;\n  max-width: 600px;\n  color: #333;\n  font-size: 14px;\n  line-height: 24px;\n  font-family: 'Nunito Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;\n}\n\n.storybook-page h2 {\n  display: inline-block;\n  vertical-align: top;\n  margin: 0 0 4px;\n  font-weight: 700;\n  font-size: 32px;\n  line-height: 1;\n}\n\n.storybook-page p {\n  margin: 1em 0;\n}\n\n.storybook-page a {\n  color: inherit;\n}\n\n.storybook-page ul {\n  margin: 1em 0;\n  padding-left: 30px;\n}\n\n.storybook-page li {\n  margin-bottom: 8px;\n}\n\n.storybook-page .tip {\n  display: inline-block;\n  vertical-align: top;\n  margin-right: 10px;\n  border-radius: 1em;\n  background: #e7fdd8;\n  padding: 4px 12px;\n  color: #357a14;\n  font-weight: 700;\n  font-size: 11px;\n  line-height: 12px;\n}\n\n.storybook-page .tip-wrapper {\n  margin-top: 40px;\n  margin-bottom: 40px;\n  font-size: 13px;\n  line-height: 20px;\n}\n\n.storybook-page .tip-wrapper svg {\n  display: inline-block;\n  vertical-align: top;\n  margin-top: 3px;\n  margin-right: 4px;\n  width: 12px;\n  height: 12px;\n}\n\n.storybook-page .tip-wrapper svg path {\n  fill: #1ea7fd;\n}\n",
                    "styleUrl": "./page.css"
                }
            ],
            "stylesData": "",
            "extends": []
        },
        {
            "name": "SpacingDemoComponent",
            "id": "component-SpacingDemoComponent-c2e5d6932563520f1c931a229fae0863ed9b0b97d7b4704ef09866efb92fe132c83c04e61b9e71a16c0f3c6bf2df9035f4887d72dd36ba4e0a3dcf61be8b90f8",
            "file": "src/app/components/spacing-demo/spacing-demo.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-spacing-demo",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./spacing-demo.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "commonPresets",
                    "defaultValue": "[\n    'global-m-00',\n    'global-m-01',\n    'global-m-02',\n    'global-m-03',\n    'global-m-04',\n    'global-m-05',\n    'global-m-06',\n    'global-m-07',\n    'global-m-08',\n    'global-m-09',\n    'global-m-10',\n    'global-m-11',\n    'global-p-00',\n    'global-p-01',\n    'global-p-02',\n    'global-p-03',\n    'global-p-04',\n    'global-p-05',\n    'global-p-06',\n    'global-p-07',\n    'global-p-08',\n    'global-p-09',\n    'global-p-10',\n    'global-p-11',\n    'global-gap-00',\n    'global-gap-01',\n    'global-gap-02',\n    'global-gap-03',\n    'global-gap-04',\n    'global-gap-05',\n    'global-gap-06',\n    'global-gap-07',\n    'global-gap-08',\n    'global-gap-09',\n    'global-gap-10',\n    'global-gap-11'\n  ]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 23
                },
                {
                    "name": "customText",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "defaultText",
                    "defaultValue": "'Spacing Example'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 21
                },
                {
                    "name": "examples",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "SpacingExample[]",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 20
                },
                {
                    "name": "manualClass",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 18
                }
            ],
            "methodsClass": [
                {
                    "name": "addClass",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 62,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "addPreset",
                    "args": [
                        {
                            "name": "preset",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 73,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "preset",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "removeExample",
                    "args": [
                        {
                            "name": "index",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 80,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "index",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "FormsModule",
                    "type": "module"
                },
                {
                    "name": "CommonModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\nimport { Component } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\n\ninterface SpacingExample {\n  className: string;\n  text: string;\n}\n\n@Component({\n  selector: 'app-spacing-demo',\n  standalone: true,\n  imports: [FormsModule, CommonModule],\n  templateUrl: './spacing-demo.component.html',\n  styleUrl: './spacing-demo.component.scss'\n})\nexport class SpacingDemoComponent {\n  manualClass = '';\n  customText = '';\n  examples: SpacingExample[] = [];\n  defaultText = 'Spacing Example';\n  \n  commonPresets = [\n    'global-m-00',\n    'global-m-01',\n    'global-m-02',\n    'global-m-03',\n    'global-m-04',\n    'global-m-05',\n    'global-m-06',\n    'global-m-07',\n    'global-m-08',\n    'global-m-09',\n    'global-m-10',\n    'global-m-11',\n    'global-p-00',\n    'global-p-01',\n    'global-p-02',\n    'global-p-03',\n    'global-p-04',\n    'global-p-05',\n    'global-p-06',\n    'global-p-07',\n    'global-p-08',\n    'global-p-09',\n    'global-p-10',\n    'global-p-11',\n    'global-gap-00',\n    'global-gap-01',\n    'global-gap-02',\n    'global-gap-03',\n    'global-gap-04',\n    'global-gap-05',\n    'global-gap-06',\n    'global-gap-07',\n    'global-gap-08',\n    'global-gap-09',\n    'global-gap-10',\n    'global-gap-11'\n  ];\n\n  addClass() {\n    if (this.manualClass) {\n      this.examples.unshift({\n        className: this.manualClass,\n        text: this.customText\n      });\n      this.manualClass = '';\n      this.customText = '';\n    }\n  }\n\n  addPreset(preset: string) {\n    this.examples.unshift({\n      className: preset,\n      text: this.defaultText\n    });\n  }\n\n  removeExample(index: number) {\n    this.examples.splice(index, 1);\n  }\n}\n",
            "styleUrl": "./spacing-demo.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<div class=\"spacing-demo\">\n  <div class=\"input-section\">\n    <div class=\"manual-input\">\n      <h3>Test Spacing Classes</h3>\n      <div class=\"input-group\">\n        <input \n          type=\"text\" \n          [(ngModel)]=\"manualClass\" \n          placeholder=\"Enter class name (e.g., margin-1)\"\n          (keyup.enter)=\"addClass()\"\n        >\n        <input \n          type=\"text\" \n          [(ngModel)]=\"customText\" \n          placeholder=\"Enter custom text (optional)\"\n          (keyup.enter)=\"addClass()\"\n        >\n        <button (click)=\"addClass()\">Add Example</button>\n      </div>\n    </div>\n\n    <div class=\"quick-access\">\n      <h4>Quick Access</h4>\n      <div class=\"button-group\">\n        <button *ngFor=\"let preset of commonPresets\" \n                (click)=\"addPreset(preset)\"\n                [title]=\"preset\">\n          {{preset}}\n        </button>\n      </div>\n    </div>\n  </div>\n  \n  <div class=\"examples-section\">\n    <h3>Live Examples</h3>\n    <div class=\"examples-list\">\n      <div *ngFor=\"let example of examples; let i = index\" class=\"example-item\">\n        <div class=\"example-header\">\n          <code>{{example.className}}</code>\n          <button class=\"remove-btn\" (click)=\"removeExample(i)\">×</button>\n        </div>\n        <div [class]=\"example.className\" class=\"spacing-example\">\n          {{example.text || defaultText}}\n        </div>\n      </div>\n    </div>\n  </div>\n</div>"
        },
        {
            "name": "TypographyDemoComponent",
            "id": "component-TypographyDemoComponent-f61368c8e51d5d877965aa0e8cb702afd1fad6674024e1eb100883ef3734ab8f5a10f4af7576d3a66643d9285e1cc134c9466a621b7182cafe6ff064ac2967d7",
            "file": "src/app/components/typography-demo/typography-demo.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-typography-demo",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./typography-demo.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "commonPresets",
                    "defaultValue": "[\n    'DisplayXLargeRegular',\n    'DisplayLargeMedium',\n    'DisplayMediumSemibold',\n    'HeadingLargeRegular',\n    'BodyLargeRegular',\n    'BodyMediumMedium',\n    'BodySmallSemibold'\n  ]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 23
                },
                {
                    "name": "customText",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "defaultText",
                    "defaultValue": "'Hello, Faclon!'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 21
                },
                {
                    "name": "examples",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TypographyExample[]",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 20
                },
                {
                    "name": "manualClass",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 18
                }
            ],
            "methodsClass": [
                {
                    "name": "addClass",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 33,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "addPreset",
                    "args": [
                        {
                            "name": "preset",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 44,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "preset",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "removeExample",
                    "args": [
                        {
                            "name": "index",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 51,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "index",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [
                {
                    "name": "FormsModule",
                    "type": "module"
                },
                {
                    "name": "CommonModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\nimport { Component } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\n\ninterface TypographyExample {\n  className: string;\n  text: string;\n}\n\n@Component({\n  selector: 'app-typography-demo',\n  imports: [FormsModule, CommonModule],\n  templateUrl: './typography-demo.component.html',\n  styleUrl: './typography-demo.component.scss'\n})\n\nexport class TypographyDemoComponent {\n  manualClass = '';\n  customText = '';\n  examples: TypographyExample[] = [];\n  defaultText = 'Hello, Faclon!';\n  \n  commonPresets = [\n    'DisplayXLargeRegular',\n    'DisplayLargeMedium',\n    'DisplayMediumSemibold',\n    'HeadingLargeRegular',\n    'BodyLargeRegular',\n    'BodyMediumMedium',\n    'BodySmallSemibold'\n  ];\n\n  addClass() {\n    if (this.manualClass) {\n      this.examples.unshift({\n        className: this.manualClass,\n        text: this.customText\n      });\n      this.manualClass = '';\n      this.customText = '';\n    }\n  }\n\n  addPreset(preset: string) {\n    this.examples.unshift({\n      className: preset,\n      text: this.defaultText\n    });\n  }\n\n  removeExample(index: number) {\n    this.examples.splice(index, 1);\n  }\n}\n",
            "styleUrl": "./typography-demo.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<div class=\"typography-demo\">\n    <div class=\"input-section\">\n      <div class=\"manual-input\">\n        <h3>Test Typography Classes</h3>\n        <div class=\"input-group\">\n          <input \n            type=\"text\" \n            [(ngModel)]=\"manualClass\" \n            placeholder=\"Enter class name (e.g., DisplayLargeRegular)\"\n            (keyup.enter)=\"addClass()\"\n          >\n          <input \n            type=\"text\" \n            [(ngModel)]=\"customText\" \n            placeholder=\"Enter custom text (optional)\"\n            (keyup.enter)=\"addClass()\"\n          >\n          <button (click)=\"addClass()\">Add Example</button>\n        </div>\n      </div>\n\n      <div class=\"quick-access\">\n        <h4>Quick Access</h4>\n        <div class=\"button-group\">\n          <button *ngFor=\"let preset of commonPresets\" \n                  (click)=\"addPreset(preset)\"\n                  [title]=\"preset\">\n            {{preset}}\n          </button>\n        </div>\n      </div>\n    </div>\n    \n    <div class=\"examples-section\">\n      <h3>Live Examples</h3>\n      <div class=\"examples-list\">\n        <div *ngFor=\"let example of examples; let i = index\" class=\"example-item\">\n          <div class=\"example-header\">\n            <code>{{example.className}}</code>\n            <button class=\"remove-btn\" (click)=\"removeExample(i)\">×</button>\n          </div>\n          <div [class]=\"example.className\">\n            {{example.text || defaultText}}\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>"
        },
        {
            "name": "TypographyExamplesComponent",
            "id": "component-TypographyExamplesComponent-b968384dcd76813bfd8be10f0d7bf02337f6267e568134dea44804348424ff2a04c21c5e1b423a7fc132f1b384126d6e722904150d055914772ded0fca654a6f",
            "file": "src/app/components/typography-examples/typography-examples.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-typography-examples",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./typography-examples.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-typography-examples',\n  imports: [],\n  templateUrl: './typography-examples.component.html',\n  styleUrl: './typography-examples.component.scss'\n})\nexport class TypographyExamplesComponent {\n\n}\n",
            "styleUrl": "./typography-examples.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<h1 class=\"font-size-1100\">Large Heading</h1>\n<p class=\"font-size-100\">Normal text</p>\n\n\n<!-- Using global classes -->\n<p class=\"global-fz-20 global-lh-24\">Text with specific size and line height</p>\n\n<!-- Using semantic scale classes -->\n<p class=\"font-size-100 line-height-200\">Text with semantic scale values</p>\n\n<!-- Using preset combinations -->\n<p class=\"text-preset-1\">Text with preset typography</p>\n\n<p class=\"global-lh-24\">\n    This text will have 24px line height\n  </p>\n\n  <h1 class=\"font-size-500\">\n    <!-- This will be:\n         - 20px on mobile\n         - 24px on desktop -->\n  </h1>\n\n\n  <!-- Using global letter spacing classes -->\n<p class=\"global-ls-normal\">Normal letter spacing</p>\n<p class=\"global-ls-expanded\">Expanded letter spacing</p>\n\n<!-- Using semantic scale classes -->\n<p class=\"letter-spacing-50\">Condensed spacing</p>\n<p class=\"letter-spacing-100\">Normal spacing</p>\n\n<!-- Combining with other typography classes -->\n<p class=\"global-fz-16 global-lh-24 global-ls-normal\">\n  Complete typography control\n</p>\n\n\n<!-- Using global font weight classes -->\n<p class=\"global-fw-400\">Regular text</p>\n<p class=\"global-fw-700\">Bold text</p>\n\n<!-- Using semantic scale classes -->\n<p class=\"font-weight-400\">Regular weight</p>\n<p class=\"font-weight-700\">Bold weight</p>\n\n<!-- Combining all typography classes -->\n<p class=\"global-fz-16 global-lh-24 global-ls-normal global-fw-500\">\n  Complete typography styling\n</p>\n\n<!-- Using semantic classes for all properties -->\n<p class=\"font-size-100 line-height-100 letter-spacing-100 font-weight-500\">\n  Complete semantic styling\n</p>\n\n\n<!-- Example of a heading with complete typography control -->\n<h1 class=\"\n  global-fz-32        /* Font size */\n  global-lh-38        /* Line height */\n  global-ls-normal    /* Letter spacing */\n  global-fw-700       /* Font weight */\n\">\n  Main Heading\n</h1>\n\n<!-- Example of body text -->\n<p class=\"\n  global-fz-16        /* Font size */\n  global-lh-24        /* Line height */\n  global-ls-normal    /* Letter spacing */\n  global-fw-400       /* Font weight */\n\">\n  Regular body text\n</p>\n\n\n<!-- Using global paragraph spacing classes -->\n<p class=\"global-ps-10\">\n    This paragraph has 10px bottom spacing\n  </p>\n  \n  <!-- Using semantic scale classes -->\n  <p class=\"paragraph-spacing-200\">\n    This paragraph uses semantic spacing\n  </p>\n  \n  <!-- Complete typography example -->\n  <p class=\"\n    global-fz-16          /* Font size */\n    global-lh-24          /* Line height */\n    global-ls-normal      /* Letter spacing */\n    global-fw-400         /* Font weight */\n    global-ps-10          /* Paragraph spacing */\n  \">\n    Complete typography control with paragraph spacing\n  </p>\n  \n  <!-- Using semantic classes for everything -->\n  <p class=\"\n    font-size-100\n    line-height-100\n    letter-spacing-100\n    font-weight-400\n    paragraph-spacing-200\n  \">\n    Complete semantic styling with paragraph spacing\n  </p>\n\n\n  <article>\n    <h1 class=\"\n      global-fz-32 \n      global-lh-38 \n      global-fw-700 \n      global-ps-12\n    \">\n      Article Title\n    </h1>\n    \n    <p class=\"\n      global-fz-16 \n      global-lh-24 \n      global-fw-400 \n      global-ps-10\n    \">\n      First paragraph\n    </p>\n    \n    <p class=\"\n      global-fz-16 \n      global-lh-24 \n      global-fw-400 \n      global-ps-10\n    \">\n      Second paragraph\n    </p>\n  </article>\n\n\n  <div class=\"card\">\n    <h2 class=\"\n      global-fz-24 \n      global-lh-32 \n      global-fw-600 \n      global-ps-08\n    \">\n      Card Title\n    </h2>\n    \n    <p class=\"\n      global-fz-16 \n      global-lh-24 \n      global-fw-400 \n      global-ps-00\n    \">\n      Card content with no bottom spacing\n    </p>\n  </div>\n\n\n  <!-- Traditional Unordered List -->\n   <!-- this won't work because display is block -->\n<ul class=\"global-lis-08 list-traditional\">   \n    <li>First item</li>\n    <li>Second item</li>\n    <li>Third item</li>\n  </ul>\n  \n  <!-- Flex List -->\n  <ul class=\"global-lis-16 list-flex\">\n    <li>First item</li>\n    <li>Second item</li>\n    <li>Third item</li>\n  </ul>\n  \n  <!-- Grid List -->\n  <ul class=\"global-lis-24 list-grid\">\n    <li>First item</li>\n    <li>Second item</li>\n    <li>Third item</li>\n  </ul>\n  \n  <!-- Using semantic scale classes -->\n  <ul class=\"list-spacing-100 list-traditional\">\n    <li>First item</li>\n    <li>Second item</li>\n    <li>Third item</li>\n  </ul>\n  \n  <!-- Complete list example with typography -->\n  <ul class=\"\n    global-lis-16\n    list-flex\n  \">\n    <li class=\"\n      global-fz-16\n      global-lh-24\n      global-fw-400\n    \">\n      First item\n    </li>\n    <li class=\"\n      global-fz-16\n      global-lh-24\n      global-fw-400\n    \">\n      Second item\n    </li>\n  </ul>\n  \n  <nav>\n    <ul class=\"global-lis-16 list-flex\">\n      <li><a href=\"#\">Home</a></li>\n      <li><a href=\"#\">About</a></li>\n      <li><a href=\"#\">Contact</a></li>\n    </ul>\n  </nav>\n\n\n  <ul class=\"global-lis-24 list-grid\">\n    <li class=\"card\">Card 1</li>\n    <li class=\"card\">Card 2</li>\n    <li class=\"card\">Card 3</li>\n  </ul>\n  \n\n  <p class=\"fluid-text\">Fluid text example</p>\n\n\n  <!-- Display classes with different weights and letter spacing -->\n<h1 class=\"DisplayXLargeRegular\">Display XL Regular (-1% letter spacing)</h1>\n<h1 class=\"DisplayXLargeMedium\">Display XL Medium (-1% letter spacing)</h1>\n<h1 class=\"DisplayXLargeSemibold\">Display XL SemiBold (0% letter spacing)</h1>\n\n<!-- Other classes with standard letter spacing -->\n<h2 class=\"HeadingLargeRegular\">Heading Large Regular (standard letter spacing)</h2>\n<p class=\"BodyLargeRegular\">Body Large Regular (standard letter spacing)</p>\n\n\n<!-- Border Width -->\n<div class=\"global-bw-thin\">1px border</div>\n<div class=\"global-bw-t-thick\">1.5px top border</div>\n\n<!-- Border Style -->\n<div class=\"global-bs-dashed\">Dashed border</div>\n\n<!-- Border Radius -->\n<div class=\"global-br-medium\">4px border radius all corners</div>\n<div class=\"global-br-t-large\">8px border radius top corners only</div>\n<div class=\"global-br-tl-small\">2px border radius top-left only</div>\n\n<!-- Combined -->\n<div class=\"global-bw-thin global-bs-solid global-br-medium\">\n  1px solid border with 4px border radius\n</div>\n\n\n<!-- Basic elevation classes -->\n<div class=\"global-el-ultraLowRaised\">Ultra Low Elevation</div>\n<div class=\"global-el-lowRaised\">Low Elevation</div>\n<div class=\"global-el-midRaised\">Medium Elevation</div>\n<div class=\"global-el-highRaised\">High Elevation</div>\n<div class=\"global-el-ultraHighRaised\">Ultra High Elevation</div>\n\n<!-- Individual shadow layers -->\n<div class=\"global-el-midRaised-1\">Only first shadow layer</div>\n\n<!-- Using with other utilities -->\n<div class=\"global-el-highRaised global-br-medium\">\n  Elevated card with border radius\n</div>\n\n<!-- Margin -->\n<div class=\"global-m-04\">All sides margin 12px</div>\n<div class=\"global-mx-05\">Horizontal margin 16px</div>\n\n<!-- Padding -->\n<div class=\"global-p-06\">All sides padding 20px</div>\n<div class=\"global-py-07\">Vertical padding 24px</div>\n\n<!-- Gap -->\n<div class=\"global-gap-08\">Gap between flex/grid items 32px</div>\n\n<!-- Gutter -->\n<div class=\"global-gutter-04\">\n  <div>Child elements with 12px padding</div>\n  <div>Child elements with 12px padding</div>\n</div>"
        }
    ],
    "modules": [],
    "miscellaneous": {
        "variables": [
            {
                "name": "appConfig",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/app.config.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "ApplicationConfig",
                "defaultValue": "{\n  providers: [provideZoneChangeDetection({ eventCoalescing: true }), provideRouter(routes)]\n}"
            }
        ],
        "functions": [],
        "typealiases": [],
        "enumerations": [],
        "groupedVariables": {
            "src/app/app.config.ts": [
                {
                    "name": "appConfig",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/app.config.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ApplicationConfig",
                    "defaultValue": "{\n  providers: [provideZoneChangeDetection({ eventCoalescing: true }), provideRouter(routes)]\n}"
                }
            ]
        },
        "groupedFunctions": {},
        "groupedEnumerations": {},
        "groupedTypeAliases": {}
    },
    "routes": [],
    "coverage": {
        "count": 5,
        "status": "low",
        "files": [
            {
                "filePath": "src/app/app.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AppComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/app.config.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "appConfig",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/borders-demo/borders-demo.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "BordersDemoComponent",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "src/app/components/borders-demo/borders-demo.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "BorderExample",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/components/elevation-demo/elevation-demo.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ElevationDemoComponent",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "src/app/components/elevation-demo/elevation-demo.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "ElevationExample",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/components/spacing-demo/spacing-demo.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SpacingDemoComponent",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "src/app/components/spacing-demo/spacing-demo.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "SpacingExample",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/components/typography-demo/typography-demo.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TypographyDemoComponent",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "src/app/components/typography-demo/typography-demo.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "TypographyExample",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/components/typography-examples/typography-examples.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TypographyExamplesComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ButtonComponent",
                "coveragePercent": 83,
                "coverageCount": "5/6",
                "status": "very-good"
            },
            {
                "filePath": "src/stories/header.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "HeaderComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/stories/page.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PageComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/stories/user.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "User",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            }
        ]
    }
}